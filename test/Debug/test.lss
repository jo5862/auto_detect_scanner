
test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000be  00800100  00001a62  00001af6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a62  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002d  008001be  008001be  00001bb4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001bb4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001c10  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  00001c50  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000019ac  00000000  00000000  00001d08  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009cf  00000000  00000000  000036b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009dc  00000000  00000000  00004083  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000022c  00000000  00000000  00004a60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000622  00000000  00000000  00004c8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000be4  00000000  00000000  000052ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00005e92  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c2 c0       	rjmp	.+388    	; 0x186 <__ctors_end>
       2:	00 00       	nop
       4:	de c0       	rjmp	.+444    	; 0x1c2 <__bad_interrupt>
       6:	00 00       	nop
       8:	dc c0       	rjmp	.+440    	; 0x1c2 <__bad_interrupt>
       a:	00 00       	nop
       c:	da c0       	rjmp	.+436    	; 0x1c2 <__bad_interrupt>
       e:	00 00       	nop
      10:	d8 c0       	rjmp	.+432    	; 0x1c2 <__bad_interrupt>
      12:	00 00       	nop
      14:	95 c4       	rjmp	.+2346   	; 0x940 <__vector_5>
      16:	00 00       	nop
      18:	d9 c4       	rjmp	.+2482   	; 0x9cc <__vector_6>
      1a:	00 00       	nop
      1c:	d2 c0       	rjmp	.+420    	; 0x1c2 <__bad_interrupt>
      1e:	00 00       	nop
      20:	d0 c0       	rjmp	.+416    	; 0x1c2 <__bad_interrupt>
      22:	00 00       	nop
      24:	b2 c1       	rjmp	.+868    	; 0x38a <__vector_9>
      26:	00 00       	nop
      28:	cc c0       	rjmp	.+408    	; 0x1c2 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	ca c0       	rjmp	.+404    	; 0x1c2 <__bad_interrupt>
      2e:	00 00       	nop
      30:	c8 c0       	rjmp	.+400    	; 0x1c2 <__bad_interrupt>
      32:	00 00       	nop
      34:	c6 c0       	rjmp	.+396    	; 0x1c2 <__bad_interrupt>
      36:	00 00       	nop
      38:	c4 c0       	rjmp	.+392    	; 0x1c2 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c2 c0       	rjmp	.+388    	; 0x1c2 <__bad_interrupt>
      3e:	00 00       	nop
      40:	c0 c0       	rjmp	.+384    	; 0x1c2 <__bad_interrupt>
      42:	00 00       	nop
      44:	be c0       	rjmp	.+380    	; 0x1c2 <__bad_interrupt>
      46:	00 00       	nop
      48:	bc c0       	rjmp	.+376    	; 0x1c2 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	ba c0       	rjmp	.+372    	; 0x1c2 <__bad_interrupt>
      4e:	00 00       	nop
      50:	b8 c0       	rjmp	.+368    	; 0x1c2 <__bad_interrupt>
      52:	00 00       	nop
      54:	b6 c0       	rjmp	.+364    	; 0x1c2 <__bad_interrupt>
      56:	00 00       	nop
      58:	b4 c0       	rjmp	.+360    	; 0x1c2 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b2 c0       	rjmp	.+356    	; 0x1c2 <__bad_interrupt>
      5e:	00 00       	nop
      60:	b0 c0       	rjmp	.+352    	; 0x1c2 <__bad_interrupt>
      62:	00 00       	nop
      64:	ae c0       	rjmp	.+348    	; 0x1c2 <__bad_interrupt>
      66:	00 00       	nop
      68:	ac c0       	rjmp	.+344    	; 0x1c2 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	aa c0       	rjmp	.+340    	; 0x1c2 <__bad_interrupt>
      6e:	00 00       	nop
      70:	a8 c0       	rjmp	.+336    	; 0x1c2 <__bad_interrupt>
      72:	00 00       	nop
      74:	a6 c0       	rjmp	.+332    	; 0x1c2 <__bad_interrupt>
      76:	00 00       	nop
      78:	a4 c0       	rjmp	.+328    	; 0x1c2 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a2 c0       	rjmp	.+324    	; 0x1c2 <__bad_interrupt>
      7e:	00 00       	nop
      80:	a0 c0       	rjmp	.+320    	; 0x1c2 <__bad_interrupt>
      82:	00 00       	nop
      84:	9e c0       	rjmp	.+316    	; 0x1c2 <__bad_interrupt>
      86:	00 00       	nop
      88:	9c c0       	rjmp	.+312    	; 0x1c2 <__bad_interrupt>
	...

0000008c <__trampolines_end>:
      8c:	00 40       	sbci	r16, 0x00	; 0
      8e:	7a 10       	cpse	r7, r10
      90:	f3 5a       	subi	r31, 0xA3	; 163
      92:	00 a0       	ldd	r0, Z+32	; 0x20
      94:	72 4e       	sbci	r23, 0xE2	; 226
      96:	18 09       	sbc	r17, r8
      98:	00 10       	cpse	r0, r0
      9a:	a5 d4       	rcall	.+2378   	; 0x9e6 <__vector_6+0x1a>
      9c:	e8 00       	.word	0x00e8	; ????
      9e:	00 e8       	ldi	r16, 0x80	; 128
      a0:	76 48       	sbci	r23, 0x86	; 134
      a2:	17 00       	.word	0x0017	; ????
      a4:	00 e4       	ldi	r16, 0x40	; 64
      a6:	0b 54       	subi	r16, 0x4B	; 75
      a8:	02 00       	.word	0x0002	; ????
      aa:	00 ca       	rjmp	.-3072   	; 0xfffff4ac <__eeprom_end+0xff7ef4ac>
      ac:	9a 3b       	cpi	r25, 0xBA	; 186
      ae:	00 00       	nop
      b0:	00 e1       	ldi	r16, 0x10	; 16
      b2:	f5 05       	cpc	r31, r5
      b4:	00 00       	nop
      b6:	80 96       	adiw	r24, 0x20	; 32
      b8:	98 00       	.word	0x0098	; ????
      ba:	00 00       	nop
      bc:	40 42       	sbci	r20, 0x20	; 32
      be:	0f 00       	.word	0x000f	; ????
      c0:	00 00       	nop
      c2:	a0 86       	std	Z+8, r10	; 0x08
      c4:	01 00       	.word	0x0001	; ????
      c6:	00 00       	nop
      c8:	10 27       	eor	r17, r16
      ca:	00 00       	nop
      cc:	00 00       	nop
      ce:	e8 03       	fmulsu	r22, r16
      d0:	00 00       	nop
      d2:	00 00       	nop
      d4:	64 00       	.word	0x0064	; ????
      d6:	00 00       	nop
      d8:	00 00       	nop
      da:	0a 00       	.word	0x000a	; ????
      dc:	00 00       	nop
      de:	00 00       	nop
      e0:	01 00       	.word	0x0001	; ????
      e2:	00 00       	nop
      e4:	00 00       	nop
      e6:	2c 76       	andi	r18, 0x6C	; 108
      e8:	d8 88       	ldd	r13, Y+16	; 0x10
      ea:	dc 67       	ori	r29, 0x7C	; 124
      ec:	4f 08       	sbc	r4, r15
      ee:	23 df       	rcall	.-442    	; 0xffffff36 <__eeprom_end+0xff7eff36>
      f0:	c1 df       	rcall	.-126    	; 0x74 <__SREG__+0x35>
      f2:	ae 59       	subi	r26, 0x9E	; 158
      f4:	e1 b1       	in	r30, 0x01	; 1
      f6:	b7 96       	adiw	r30, 0x27	; 39
      f8:	e5 e3       	ldi	r30, 0x35	; 53
      fa:	e4 53       	subi	r30, 0x34	; 52
      fc:	c6 3a       	cpi	r28, 0xA6	; 166
      fe:	e6 51       	subi	r30, 0x16	; 22
     100:	99 76       	andi	r25, 0x69	; 105
     102:	96 e8       	ldi	r25, 0x86	; 134
     104:	e6 c2       	rjmp	.+1484   	; 0x6d2 <check_button2+0x234>
     106:	84 26       	eor	r8, r20
     108:	eb 89       	ldd	r30, Y+19	; 0x13
     10a:	8c 9b       	sbis	0x11, 4	; 17
     10c:	62 ed       	ldi	r22, 0xD2	; 210
     10e:	40 7c       	andi	r20, 0xC0	; 192
     110:	6f fc       	.word	0xfc6f	; ????
     112:	ef bc       	out	0x2f, r14	; 47
     114:	9c 9f       	mul	r25, r28
     116:	40 f2       	brcs	.-112    	; 0xa8 <__trampolines_end+0x1c>
     118:	ba a5       	ldd	r27, Y+42	; 0x2a
     11a:	6f a5       	ldd	r22, Y+47	; 0x2f
     11c:	f4 90       	lpm	r15, Z
     11e:	05 5a       	subi	r16, 0xA5	; 165
     120:	2a f7       	brpl	.-54     	; 0xec <__trampolines_end+0x60>
     122:	5c 93       	st	X, r21
     124:	6b 6c       	ori	r22, 0xCB	; 203
     126:	f9 67       	ori	r31, 0x79	; 121
     128:	6d c1       	rjmp	.+730    	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     12a:	1b fc       	.word	0xfc1b	; ????
     12c:	e0 e4       	ldi	r30, 0x40	; 64
     12e:	0d 47       	sbci	r16, 0x7D	; 125
     130:	fe f5       	brtc	.+126    	; 0x1b0 <__do_clear_bss+0x4>
     132:	20 e6       	ldi	r18, 0x60	; 96
     134:	b5 00       	.word	0x00b5	; ????
     136:	d0 ed       	ldi	r29, 0xD0	; 208
     138:	90 2e       	mov	r9, r16
     13a:	03 00       	.word	0x0003	; ????
     13c:	94 35       	cpi	r25, 0x54	; 84
     13e:	77 05       	cpc	r23, r7
     140:	00 80       	ld	r0, Z
     142:	84 1e       	adc	r8, r20
     144:	08 00       	.word	0x0008	; ????
     146:	00 20       	and	r0, r0
     148:	4e 0a       	sbc	r4, r30
     14a:	00 00       	nop
     14c:	00 c8       	rjmp	.-4096   	; 0xfffff14e <__eeprom_end+0xff7ef14e>
     14e:	0c 33       	cpi	r16, 0x3C	; 60
     150:	33 33       	cpi	r19, 0x33	; 51
     152:	33 0f       	add	r19, r19
     154:	98 6e       	ori	r25, 0xE8	; 232
     156:	12 83       	std	Z+2, r17	; 0x02
     158:	11 41       	sbci	r17, 0x11	; 17
     15a:	ef 8d       	ldd	r30, Y+31	; 0x1f
     15c:	21 14       	cp	r2, r1
     15e:	89 3b       	cpi	r24, 0xB9	; 185
     160:	e6 55       	subi	r30, 0x56	; 86
     162:	16 cf       	rjmp	.-468    	; 0xffffff90 <__eeprom_end+0xff7eff90>
     164:	fe e6       	ldi	r31, 0x6E	; 110
     166:	db 18       	sub	r13, r11
     168:	d1 84       	ldd	r13, Z+9	; 0x09
     16a:	4b 38       	cpi	r20, 0x8B	; 139
     16c:	1b f7       	brvc	.-58     	; 0x134 <__trampolines_end+0xa8>
     16e:	7c 1d       	adc	r23, r12
     170:	90 1d       	adc	r25, r0
     172:	a4 bb       	out	0x14, r26	; 20
     174:	e4 24       	eor	r14, r4
     176:	20 32       	cpi	r18, 0x20	; 32
     178:	84 72       	andi	r24, 0x24	; 36
     17a:	5e 22       	and	r5, r30
     17c:	81 00       	.word	0x0081	; ????
     17e:	c9 f1       	breq	.+114    	; 0x1f2 <i2c_stop+0x12>
     180:	24 ec       	ldi	r18, 0xC4	; 196
     182:	a1 e5       	ldi	r26, 0x51	; 81
     184:	3d 27       	eor	r19, r29

00000186 <__ctors_end>:
     186:	11 24       	eor	r1, r1
     188:	1f be       	out	0x3f, r1	; 63
     18a:	cf ef       	ldi	r28, 0xFF	; 255
     18c:	d0 e1       	ldi	r29, 0x10	; 16
     18e:	de bf       	out	0x3e, r29	; 62
     190:	cd bf       	out	0x3d, r28	; 61

00000192 <__do_copy_data>:
     192:	11 e0       	ldi	r17, 0x01	; 1
     194:	a0 e0       	ldi	r26, 0x00	; 0
     196:	b1 e0       	ldi	r27, 0x01	; 1
     198:	e2 e6       	ldi	r30, 0x62	; 98
     19a:	fa e1       	ldi	r31, 0x1A	; 26
     19c:	00 e0       	ldi	r16, 0x00	; 0
     19e:	0b bf       	out	0x3b, r16	; 59
     1a0:	02 c0       	rjmp	.+4      	; 0x1a6 <__do_copy_data+0x14>
     1a2:	07 90       	elpm	r0, Z+
     1a4:	0d 92       	st	X+, r0
     1a6:	ae 3b       	cpi	r26, 0xBE	; 190
     1a8:	b1 07       	cpc	r27, r17
     1aa:	d9 f7       	brne	.-10     	; 0x1a2 <__do_copy_data+0x10>

000001ac <__do_clear_bss>:
     1ac:	21 e0       	ldi	r18, 0x01	; 1
     1ae:	ae eb       	ldi	r26, 0xBE	; 190
     1b0:	b1 e0       	ldi	r27, 0x01	; 1
     1b2:	01 c0       	rjmp	.+2      	; 0x1b6 <.do_clear_bss_start>

000001b4 <.do_clear_bss_loop>:
     1b4:	1d 92       	st	X+, r1

000001b6 <.do_clear_bss_start>:
     1b6:	ab 3e       	cpi	r26, 0xEB	; 235
     1b8:	b2 07       	cpc	r27, r18
     1ba:	e1 f7       	brne	.-8      	; 0x1b4 <.do_clear_bss_loop>
     1bc:	4d d4       	rcall	.+2202   	; 0xa58 <main>
     1be:	0c 94 2f 0d 	jmp	0x1a5e	; 0x1a5e <_exit>

000001c2 <__bad_interrupt>:
     1c2:	1e cf       	rjmp	.-452    	; 0x0 <__vectors>

000001c4 <i2c_init>:
volatile uint8_t viewing_saved = 0;    // 저장값 확인 중 상태 플래그
char buffer[16];                       // LCD 출력용 버퍼

// I2C 함수들
void i2c_init(void) {
	TWSR = 0x00;
     1c4:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
	TWBR = 72;
     1c8:	88 e4       	ldi	r24, 0x48	; 72
     1ca:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
     1ce:	08 95       	ret

000001d0 <i2c_start>:
}

void i2c_start(void) {
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
     1d0:	84 ea       	ldi	r24, 0xA4	; 164
     1d2:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while(!(TWCR & (1<<TWINT)));
     1d6:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     1da:	88 23       	and	r24, r24
     1dc:	e4 f7       	brge	.-8      	; 0x1d6 <i2c_start+0x6>
}
     1de:	08 95       	ret

000001e0 <i2c_stop>:

void i2c_stop(void) {
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     1e0:	84 e9       	ldi	r24, 0x94	; 148
     1e2:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1e6:	8f e9       	ldi	r24, 0x9F	; 159
     1e8:	9f e0       	ldi	r25, 0x0F	; 15
     1ea:	01 97       	sbiw	r24, 0x01	; 1
     1ec:	f1 f7       	brne	.-4      	; 0x1ea <i2c_stop+0xa>
     1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <i2c_stop+0x10>
     1f0:	00 00       	nop
     1f2:	08 95       	ret

000001f4 <i2c_write>:
	_delay_ms(1);
}

void i2c_write(uint8_t data) {
	TWDR = data;
     1f4:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1<<TWINT)|(1<<TWEN);
     1f8:	84 e8       	ldi	r24, 0x84	; 132
     1fa:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while(!(TWCR & (1<<TWINT)));
     1fe:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     202:	88 23       	and	r24, r24
     204:	e4 f7       	brge	.-8      	; 0x1fe <i2c_write+0xa>
}
     206:	08 95       	ret

00000208 <lcd_cmd>:

// LCD 함수들
void lcd_cmd(uint8_t cmd) {
     208:	1f 93       	push	r17
     20a:	cf 93       	push	r28
     20c:	df 93       	push	r29
	uint8_t data_u, data_l;
	data_u = (cmd & 0xF0);
     20e:	18 2f       	mov	r17, r24
     210:	10 7f       	andi	r17, 0xF0	; 240
	data_l = ((cmd << 4) & 0xF0);
     212:	90 e1       	ldi	r25, 0x10	; 16
     214:	89 9f       	mul	r24, r25
     216:	e0 01       	movw	r28, r0
     218:	11 24       	eor	r1, r1
	
	i2c_start();
     21a:	da df       	rcall	.-76     	; 0x1d0 <i2c_start>
	i2c_write(LCD_ADDR << 1);
     21c:	8e e4       	ldi	r24, 0x4E	; 78
     21e:	ea df       	rcall	.-44     	; 0x1f4 <i2c_write>
	
	i2c_write(data_u | LCD_EN | LCD_BACKLIGHT);
     220:	81 2f       	mov	r24, r17
     222:	8c 60       	ori	r24, 0x0C	; 12
     224:	e7 df       	rcall	.-50     	; 0x1f4 <i2c_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     226:	85 e0       	ldi	r24, 0x05	; 5
     228:	8a 95       	dec	r24
     22a:	f1 f7       	brne	.-4      	; 0x228 <lcd_cmd+0x20>
	_delay_us(1);
	i2c_write(data_u | LCD_BACKLIGHT);
     22c:	00 00       	nop
     22e:	81 2f       	mov	r24, r17
     230:	88 60       	ori	r24, 0x08	; 8
     232:	e0 df       	rcall	.-64     	; 0x1f4 <i2c_write>
     234:	8f e1       	ldi	r24, 0x1F	; 31
     236:	93 e0       	ldi	r25, 0x03	; 3
     238:	01 97       	sbiw	r24, 0x01	; 1
     23a:	f1 f7       	brne	.-4      	; 0x238 <lcd_cmd+0x30>
     23c:	00 c0       	rjmp	.+0      	; 0x23e <lcd_cmd+0x36>
	_delay_us(200);
	
	i2c_write(data_l | LCD_EN | LCD_BACKLIGHT);
     23e:	00 00       	nop
     240:	8c 2f       	mov	r24, r28
     242:	8c 60       	ori	r24, 0x0C	; 12
     244:	d7 df       	rcall	.-82     	; 0x1f4 <i2c_write>
     246:	95 e0       	ldi	r25, 0x05	; 5
     248:	9a 95       	dec	r25
     24a:	f1 f7       	brne	.-4      	; 0x248 <lcd_cmd+0x40>
	_delay_us(1);
	i2c_write(data_l | LCD_BACKLIGHT);
     24c:	00 00       	nop
     24e:	8c 2f       	mov	r24, r28
     250:	88 60       	ori	r24, 0x08	; 8
     252:	d0 df       	rcall	.-96     	; 0x1f4 <i2c_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     254:	8f e3       	ldi	r24, 0x3F	; 63
     256:	9f e1       	ldi	r25, 0x1F	; 31
     258:	01 97       	sbiw	r24, 0x01	; 1
     25a:	f1 f7       	brne	.-4      	; 0x258 <lcd_cmd+0x50>
     25c:	00 c0       	rjmp	.+0      	; 0x25e <lcd_cmd+0x56>
	_delay_ms(2);
	
	i2c_stop();
     25e:	00 00       	nop
     260:	bf df       	rcall	.-130    	; 0x1e0 <i2c_stop>
}
     262:	df 91       	pop	r29
     264:	cf 91       	pop	r28
     266:	1f 91       	pop	r17
     268:	08 95       	ret

0000026a <lcd_data>:

void lcd_data(uint8_t data) {
     26a:	1f 93       	push	r17
     26c:	cf 93       	push	r28
     26e:	df 93       	push	r29
	uint8_t data_u, data_l;
	data_u = (data & 0xF0);
     270:	18 2f       	mov	r17, r24
     272:	10 7f       	andi	r17, 0xF0	; 240
	data_l = ((data << 4) & 0xF0);
     274:	90 e1       	ldi	r25, 0x10	; 16
     276:	89 9f       	mul	r24, r25
     278:	e0 01       	movw	r28, r0
     27a:	11 24       	eor	r1, r1
	
	i2c_start();
     27c:	a9 df       	rcall	.-174    	; 0x1d0 <i2c_start>
	i2c_write(LCD_ADDR << 1);
     27e:	8e e4       	ldi	r24, 0x4E	; 78
     280:	b9 df       	rcall	.-142    	; 0x1f4 <i2c_write>
	
	i2c_write(data_u | LCD_RS | LCD_EN | LCD_BACKLIGHT);
     282:	81 2f       	mov	r24, r17
     284:	8d 60       	ori	r24, 0x0D	; 13
     286:	b6 df       	rcall	.-148    	; 0x1f4 <i2c_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     288:	85 e0       	ldi	r24, 0x05	; 5
     28a:	8a 95       	dec	r24
     28c:	f1 f7       	brne	.-4      	; 0x28a <lcd_data+0x20>
	_delay_us(1);
	i2c_write(data_u | LCD_RS | LCD_BACKLIGHT);
     28e:	00 00       	nop
     290:	81 2f       	mov	r24, r17
     292:	89 60       	ori	r24, 0x09	; 9
     294:	af df       	rcall	.-162    	; 0x1f4 <i2c_write>
     296:	8f e1       	ldi	r24, 0x1F	; 31
     298:	93 e0       	ldi	r25, 0x03	; 3
     29a:	01 97       	sbiw	r24, 0x01	; 1
     29c:	f1 f7       	brne	.-4      	; 0x29a <lcd_data+0x30>
     29e:	00 c0       	rjmp	.+0      	; 0x2a0 <lcd_data+0x36>
	_delay_us(200);
	
	i2c_write(data_l | LCD_RS | LCD_EN | LCD_BACKLIGHT);
     2a0:	00 00       	nop
     2a2:	8c 2f       	mov	r24, r28
     2a4:	8d 60       	ori	r24, 0x0D	; 13
     2a6:	a6 df       	rcall	.-180    	; 0x1f4 <i2c_write>
     2a8:	95 e0       	ldi	r25, 0x05	; 5
     2aa:	9a 95       	dec	r25
     2ac:	f1 f7       	brne	.-4      	; 0x2aa <lcd_data+0x40>
	_delay_us(1);
	i2c_write(data_l | LCD_RS | LCD_BACKLIGHT);
     2ae:	00 00       	nop
     2b0:	8c 2f       	mov	r24, r28
     2b2:	89 60       	ori	r24, 0x09	; 9
     2b4:	9f df       	rcall	.-194    	; 0x1f4 <i2c_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2b6:	8f e3       	ldi	r24, 0x3F	; 63
     2b8:	9f e1       	ldi	r25, 0x1F	; 31
     2ba:	01 97       	sbiw	r24, 0x01	; 1
     2bc:	f1 f7       	brne	.-4      	; 0x2ba <lcd_data+0x50>
     2be:	00 c0       	rjmp	.+0      	; 0x2c0 <lcd_data+0x56>
	_delay_ms(2);
	
	i2c_stop();
     2c0:	00 00       	nop
     2c2:	8e df       	rcall	.-228    	; 0x1e0 <i2c_stop>
}
     2c4:	df 91       	pop	r29
     2c6:	cf 91       	pop	r28
     2c8:	1f 91       	pop	r17
     2ca:	08 95       	ret

000002cc <lcd_init>:
     2cc:	2f ef       	ldi	r18, 0xFF	; 255
     2ce:	89 ef       	ldi	r24, 0xF9	; 249
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	21 50       	subi	r18, 0x01	; 1
     2d4:	80 40       	sbci	r24, 0x00	; 0
     2d6:	90 40       	sbci	r25, 0x00	; 0
     2d8:	e1 f7       	brne	.-8      	; 0x2d2 <lcd_init+0x6>
     2da:	00 c0       	rjmp	.+0      	; 0x2dc <lcd_init+0x10>
     2dc:	00 00       	nop

void lcd_init(void) {
	_delay_ms(20);
	lcd_cmd(0x33);
     2de:	83 e3       	ldi	r24, 0x33	; 51
     2e0:	93 df       	rcall	.-218    	; 0x208 <lcd_cmd>
     2e2:	8f e1       	ldi	r24, 0x1F	; 31
     2e4:	9e e4       	ldi	r25, 0x4E	; 78
     2e6:	01 97       	sbiw	r24, 0x01	; 1
     2e8:	f1 f7       	brne	.-4      	; 0x2e6 <lcd_init+0x1a>
     2ea:	00 c0       	rjmp	.+0      	; 0x2ec <lcd_init+0x20>
     2ec:	00 00       	nop
	_delay_ms(5);
	lcd_cmd(0x32);
     2ee:	82 e3       	ldi	r24, 0x32	; 50
     2f0:	8b df       	rcall	.-234    	; 0x208 <lcd_cmd>
     2f2:	8f e9       	ldi	r24, 0x9F	; 159
     2f4:	9f e0       	ldi	r25, 0x0F	; 15
     2f6:	01 97       	sbiw	r24, 0x01	; 1
     2f8:	f1 f7       	brne	.-4      	; 0x2f6 <lcd_init+0x2a>
     2fa:	00 c0       	rjmp	.+0      	; 0x2fc <lcd_init+0x30>
	_delay_ms(1);
	lcd_cmd(0x28);
     2fc:	00 00       	nop
     2fe:	88 e2       	ldi	r24, 0x28	; 40
     300:	83 df       	rcall	.-250    	; 0x208 <lcd_cmd>
     302:	8f e9       	ldi	r24, 0x9F	; 159
     304:	9f e0       	ldi	r25, 0x0F	; 15
     306:	01 97       	sbiw	r24, 0x01	; 1
     308:	f1 f7       	brne	.-4      	; 0x306 <lcd_init+0x3a>
     30a:	00 c0       	rjmp	.+0      	; 0x30c <lcd_init+0x40>
	_delay_ms(1);
	lcd_cmd(0x0C);
     30c:	00 00       	nop
     30e:	8c e0       	ldi	r24, 0x0C	; 12
     310:	7b df       	rcall	.-266    	; 0x208 <lcd_cmd>
     312:	8f e9       	ldi	r24, 0x9F	; 159
     314:	9f e0       	ldi	r25, 0x0F	; 15
     316:	01 97       	sbiw	r24, 0x01	; 1
     318:	f1 f7       	brne	.-4      	; 0x316 <lcd_init+0x4a>
     31a:	00 c0       	rjmp	.+0      	; 0x31c <lcd_init+0x50>
	_delay_ms(1);
	lcd_cmd(0x06);
     31c:	00 00       	nop
     31e:	86 e0       	ldi	r24, 0x06	; 6
     320:	73 df       	rcall	.-282    	; 0x208 <lcd_cmd>
     322:	8f e9       	ldi	r24, 0x9F	; 159
     324:	9f e0       	ldi	r25, 0x0F	; 15
     326:	01 97       	sbiw	r24, 0x01	; 1
     328:	f1 f7       	brne	.-4      	; 0x326 <lcd_init+0x5a>
     32a:	00 c0       	rjmp	.+0      	; 0x32c <lcd_init+0x60>
	_delay_ms(1);
	lcd_cmd(0x01);
     32c:	00 00       	nop
     32e:	81 e0       	ldi	r24, 0x01	; 1
     330:	6b df       	rcall	.-298    	; 0x208 <lcd_cmd>
     332:	8f e3       	ldi	r24, 0x3F	; 63
     334:	9f e1       	ldi	r25, 0x1F	; 31
     336:	01 97       	sbiw	r24, 0x01	; 1
     338:	f1 f7       	brne	.-4      	; 0x336 <lcd_init+0x6a>
     33a:	00 c0       	rjmp	.+0      	; 0x33c <lcd_init+0x70>
     33c:	00 00       	nop
     33e:	08 95       	ret

00000340 <lcd_string>:
	_delay_ms(2);
}

void lcd_string(const char *str) {
     340:	cf 93       	push	r28
     342:	df 93       	push	r29
     344:	ec 01       	movw	r28, r24
	while(*str) lcd_data(*str++);
     346:	02 c0       	rjmp	.+4      	; 0x34c <lcd_string+0xc>
     348:	21 96       	adiw	r28, 0x01	; 1
     34a:	8f df       	rcall	.-226    	; 0x26a <lcd_data>
     34c:	88 81       	ld	r24, Y
     34e:	81 11       	cpse	r24, r1
     350:	fb cf       	rjmp	.-10     	; 0x348 <lcd_string+0x8>
}
     352:	df 91       	pop	r29
     354:	cf 91       	pop	r28
     356:	08 95       	ret

00000358 <lcd_clear>:

void lcd_clear(void) {
	lcd_cmd(0x01);
     358:	81 e0       	ldi	r24, 0x01	; 1
     35a:	56 df       	rcall	.-340    	; 0x208 <lcd_cmd>
     35c:	8f e3       	ldi	r24, 0x3F	; 63
     35e:	9f e1       	ldi	r25, 0x1F	; 31
     360:	01 97       	sbiw	r24, 0x01	; 1
     362:	f1 f7       	brne	.-4      	; 0x360 <lcd_clear+0x8>
     364:	00 c0       	rjmp	.+0      	; 0x366 <lcd_clear+0xe>
     366:	00 00       	nop
     368:	08 95       	ret

0000036a <lcd_gotoxy>:
	_delay_ms(2);
}

void lcd_gotoxy(uint8_t x, uint8_t y) {
	uint8_t addr = (y == 0) ? 0x80 : 0xC0;
     36a:	61 11       	cpse	r22, r1
     36c:	02 c0       	rjmp	.+4      	; 0x372 <lcd_gotoxy+0x8>
     36e:	90 e8       	ldi	r25, 0x80	; 128
     370:	01 c0       	rjmp	.+2      	; 0x374 <lcd_gotoxy+0xa>
     372:	90 ec       	ldi	r25, 0xC0	; 192
	addr += x;
	lcd_cmd(addr);
     374:	89 0f       	add	r24, r25
     376:	48 cf       	rjmp	.-368    	; 0x208 <lcd_cmd>
     378:	08 95       	ret

0000037a <timer_init>:
}

// 타이머 초기화
void timer_init(void) {
	TCCR2 = (1 << WGM21) |     // CTC 모드
     37a:	8c e0       	ldi	r24, 0x0C	; 12
     37c:	85 bd       	out	0x25, r24	; 37
	(1 << CS22);        // 분주비 64
	OCR2 = 249;                // 1ms 주기
     37e:	89 ef       	ldi	r24, 0xF9	; 249
     380:	83 bd       	out	0x23, r24	; 35
	TIMSK |= (1 << OCIE2);     // 비교일치 인터럽트 활성화
     382:	87 b7       	in	r24, 0x37	; 55
     384:	80 68       	ori	r24, 0x80	; 128
     386:	87 bf       	out	0x37, r24	; 55
     388:	08 95       	ret

0000038a <__vector_9>:
}

// 타이머 인터럽트 처리
ISR(TIMER2_COMP_vect) {
     38a:	1f 92       	push	r1
     38c:	0f 92       	push	r0
     38e:	0f b6       	in	r0, 0x3f	; 63
     390:	0f 92       	push	r0
     392:	11 24       	eor	r1, r1
     394:	8f 93       	push	r24
     396:	9f 93       	push	r25
     398:	af 93       	push	r26
     39a:	bf 93       	push	r27
	system_timer++;
     39c:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <system_timer>
     3a0:	90 91 ce 01 	lds	r25, 0x01CE	; 0x8001ce <system_timer+0x1>
     3a4:	a0 91 cf 01 	lds	r26, 0x01CF	; 0x8001cf <system_timer+0x2>
     3a8:	b0 91 d0 01 	lds	r27, 0x01D0	; 0x8001d0 <system_timer+0x3>
     3ac:	01 96       	adiw	r24, 0x01	; 1
     3ae:	a1 1d       	adc	r26, r1
     3b0:	b1 1d       	adc	r27, r1
     3b2:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <system_timer>
     3b6:	90 93 ce 01 	sts	0x01CE, r25	; 0x8001ce <system_timer+0x1>
     3ba:	a0 93 cf 01 	sts	0x01CF, r26	; 0x8001cf <system_timer+0x2>
     3be:	b0 93 d0 01 	sts	0x01D0, r27	; 0x8001d0 <system_timer+0x3>
}
     3c2:	bf 91       	pop	r27
     3c4:	af 91       	pop	r26
     3c6:	9f 91       	pop	r25
     3c8:	8f 91       	pop	r24
     3ca:	0f 90       	pop	r0
     3cc:	0f be       	out	0x3f, r0	; 63
     3ce:	0f 90       	pop	r0
     3d0:	1f 90       	pop	r1
     3d2:	18 95       	reti

000003d4 <button_init>:

// 버튼 초기화 함수
void button_init(void) {
	DDRD &= ~((1 << BUTTON1) | (1 << BUTTON2) | (1 << BUTTON3));
     3d4:	81 b3       	in	r24, 0x11	; 17
     3d6:	88 7f       	andi	r24, 0xF8	; 248
     3d8:	81 bb       	out	0x11, r24	; 17
	PORTD |= (1 << BUTTON1) | (1 << BUTTON2) | (1 << BUTTON3);
     3da:	82 b3       	in	r24, 0x12	; 18
     3dc:	87 60       	ori	r24, 0x07	; 7
     3de:	82 bb       	out	0x12, r24	; 18
     3e0:	08 95       	ret

000003e2 <check_button1>:
}

// 버튼 상태 체크 함수들
void check_button1(void) {
     3e2:	cf 93       	push	r28
	static uint8_t last_state = 1;
	static uint32_t last_change_time = 0;
	uint8_t current_state = (PIND & (1 << BUTTON1));
     3e4:	c0 b3       	in	r28, 0x10	; 16
     3e6:	c2 70       	andi	r28, 0x02	; 2
	
	if (current_state != last_state && (system_timer - last_change_time) > DEBOUNCE_DELAY) {
     3e8:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <last_state.2157>
     3ec:	c8 17       	cp	r28, r24
     3ee:	09 f4       	brne	.+2      	; 0x3f2 <check_button1+0x10>
     3f0:	54 c0       	rjmp	.+168    	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
     3f2:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <system_timer>
     3f6:	90 91 ce 01 	lds	r25, 0x01CE	; 0x8001ce <system_timer+0x1>
     3fa:	a0 91 cf 01 	lds	r26, 0x01CF	; 0x8001cf <system_timer+0x2>
     3fe:	b0 91 d0 01 	lds	r27, 0x01D0	; 0x8001d0 <system_timer+0x3>
     402:	40 91 c8 01 	lds	r20, 0x01C8	; 0x8001c8 <last_change_time.2158>
     406:	50 91 c9 01 	lds	r21, 0x01C9	; 0x8001c9 <last_change_time.2158+0x1>
     40a:	60 91 ca 01 	lds	r22, 0x01CA	; 0x8001ca <last_change_time.2158+0x2>
     40e:	70 91 cb 01 	lds	r23, 0x01CB	; 0x8001cb <last_change_time.2158+0x3>
     412:	84 1b       	sub	r24, r20
     414:	95 0b       	sbc	r25, r21
     416:	a6 0b       	sbc	r26, r22
     418:	b7 0b       	sbc	r27, r23
     41a:	85 36       	cpi	r24, 0x65	; 101
     41c:	91 05       	cpc	r25, r1
     41e:	a1 05       	cpc	r26, r1
     420:	b1 05       	cpc	r27, r1
     422:	08 f4       	brcc	.+2      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
     424:	3a c0       	rjmp	.+116    	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
		if (!current_state) {  // 버튼이 눌렸을 때
     426:	c1 11       	cpse	r28, r1
     428:	26 c0       	rjmp	.+76     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
			encoder_count = 0;
     42a:	10 92 d7 01 	sts	0x01D7, r1	; 0x8001d7 <encoder_count>
     42e:	10 92 d8 01 	sts	0x01D8, r1	; 0x8001d8 <encoder_count+0x1>
     432:	10 92 d9 01 	sts	0x01D9, r1	; 0x8001d9 <encoder_count+0x2>
     436:	10 92 da 01 	sts	0x01DA, r1	; 0x8001da <encoder_count+0x3>
			is_saved = 0;
     43a:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <is_saved>
			lcd_gotoxy(0, 1);
     43e:	61 e0       	ldi	r22, 0x01	; 1
     440:	80 e0       	ldi	r24, 0x00	; 0
     442:	93 df       	rcall	.-218    	; 0x36a <lcd_gotoxy>
			lcd_string("Count: 0        ");
     444:	84 e0       	ldi	r24, 0x04	; 4
     446:	91 e0       	ldi	r25, 0x01	; 1
     448:	7b df       	rcall	.-266    	; 0x340 <lcd_string>
			lcd_gotoxy(0, 0);
     44a:	60 e0       	ldi	r22, 0x00	; 0
     44c:	80 e0       	ldi	r24, 0x00	; 0
     44e:	8d df       	rcall	.-230    	; 0x36a <lcd_gotoxy>
			switch(unit_mode) {
     450:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <unit_mode>
     454:	81 30       	cpi	r24, 0x01	; 1
     456:	41 f0       	breq	.+16     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
     458:	18 f0       	brcs	.+6      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
     45a:	82 30       	cpi	r24, 0x02	; 2
     45c:	49 f0       	breq	.+18     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
				case 0:
				lcd_string("Distance: 0.0cm ");
     45e:	0b c0       	rjmp	.+22     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
     460:	85 e1       	ldi	r24, 0x15	; 21
     462:	91 e0       	ldi	r25, 0x01	; 1
				break;
     464:	6d df       	rcall	.-294    	; 0x340 <lcd_string>
				case 1:
				lcd_string("Distance: 0.0m  ");
     466:	07 c0       	rjmp	.+14     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
     468:	86 e2       	ldi	r24, 0x26	; 38
     46a:	91 e0       	ldi	r25, 0x01	; 1
				break;
     46c:	69 df       	rcall	.-302    	; 0x340 <lcd_string>
				case 2:
				lcd_string("Distance: 0.0km ");
     46e:	03 c0       	rjmp	.+6      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
     470:	87 e3       	ldi	r24, 0x37	; 55
     472:	91 e0       	ldi	r25, 0x01	; 1
     474:	65 df       	rcall	.-310    	; 0x340 <lcd_string>
				break;
			}
		}
		last_state = current_state;
     476:	c0 93 03 01 	sts	0x0103, r28	; 0x800103 <last_state.2157>
		last_change_time = system_timer;
     47a:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <system_timer>
     47e:	90 91 ce 01 	lds	r25, 0x01CE	; 0x8001ce <system_timer+0x1>
     482:	a0 91 cf 01 	lds	r26, 0x01CF	; 0x8001cf <system_timer+0x2>
     486:	b0 91 d0 01 	lds	r27, 0x01D0	; 0x8001d0 <system_timer+0x3>
     48a:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <last_change_time.2158>
     48e:	90 93 c9 01 	sts	0x01C9, r25	; 0x8001c9 <last_change_time.2158+0x1>
     492:	a0 93 ca 01 	sts	0x01CA, r26	; 0x8001ca <last_change_time.2158+0x2>
     496:	b0 93 cb 01 	sts	0x01CB, r27	; 0x8001cb <last_change_time.2158+0x3>
	}
}
     49a:	cf 91       	pop	r28
     49c:	08 95       	ret

0000049e <check_button2>:

void check_button2(void) {
     49e:	af 92       	push	r10
     4a0:	bf 92       	push	r11
     4a2:	cf 92       	push	r12
     4a4:	df 92       	push	r13
     4a6:	ff 92       	push	r15
     4a8:	0f 93       	push	r16
     4aa:	1f 93       	push	r17
     4ac:	cf 93       	push	r28
     4ae:	df 93       	push	r29
     4b0:	cd b7       	in	r28, 0x3d	; 61
     4b2:	de b7       	in	r29, 0x3e	; 62
     4b4:	28 97       	sbiw	r28, 0x08	; 8
     4b6:	0f b6       	in	r0, 0x3f	; 63
     4b8:	f8 94       	cli
     4ba:	de bf       	out	0x3e, r29	; 62
     4bc:	0f be       	out	0x3f, r0	; 63
     4be:	cd bf       	out	0x3d, r28	; 61
	static uint8_t last_state = 1;
	static uint32_t last_change_time = 0;
	static uint16_t press_duration = 0;
	uint8_t current_state = (PIND & (1 << BUTTON2));
     4c0:	80 b3       	in	r24, 0x10	; 16
     4c2:	81 70       	andi	r24, 0x01	; 1
     4c4:	f8 2e       	mov	r15, r24
	
	if (current_state != last_state && (system_timer - last_change_time) > DEBOUNCE_DELAY) {
     4c6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <last_state.2167>
     4ca:	f8 16       	cp	r15, r24
     4cc:	09 f4       	brne	.+2      	; 0x4d0 <check_button2+0x32>
     4ce:	da c1       	rjmp	.+948    	; 0x884 <check_button2+0x3e6>
     4d0:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <system_timer>
     4d4:	90 91 ce 01 	lds	r25, 0x01CE	; 0x8001ce <system_timer+0x1>
     4d8:	a0 91 cf 01 	lds	r26, 0x01CF	; 0x8001cf <system_timer+0x2>
     4dc:	b0 91 d0 01 	lds	r27, 0x01D0	; 0x8001d0 <system_timer+0x3>
     4e0:	40 91 c4 01 	lds	r20, 0x01C4	; 0x8001c4 <last_change_time.2168>
     4e4:	50 91 c5 01 	lds	r21, 0x01C5	; 0x8001c5 <last_change_time.2168+0x1>
     4e8:	60 91 c6 01 	lds	r22, 0x01C6	; 0x8001c6 <last_change_time.2168+0x2>
     4ec:	70 91 c7 01 	lds	r23, 0x01C7	; 0x8001c7 <last_change_time.2168+0x3>
     4f0:	84 1b       	sub	r24, r20
     4f2:	95 0b       	sbc	r25, r21
     4f4:	a6 0b       	sbc	r26, r22
     4f6:	b7 0b       	sbc	r27, r23
     4f8:	85 36       	cpi	r24, 0x65	; 101
     4fa:	91 05       	cpc	r25, r1
     4fc:	a1 05       	cpc	r26, r1
     4fe:	b1 05       	cpc	r27, r1
     500:	08 f4       	brcc	.+2      	; 0x504 <check_button2+0x66>
     502:	c0 c1       	rjmp	.+896    	; 0x884 <check_button2+0x3e6>
		if (!current_state) {  // 버튼이 눌렸을 때
     504:	f1 10       	cpse	r15, r1
     506:	ac c1       	rjmp	.+856    	; 0x860 <check_button2+0x3c2>
			if (viewing_saved) {
     508:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <viewing_saved>
     50c:	88 23       	and	r24, r24
     50e:	09 f4       	brne	.+2      	; 0x512 <check_button2+0x74>
     510:	a7 c0       	rjmp	.+334    	; 0x660 <check_button2+0x1c2>
				// 저장값 확인 중이었다면, 측정 모드로 복귀
				viewing_saved = 0;
     512:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <viewing_saved>
				
				// 현재 단위에 맞는 화면으로 복귀
				float distance_cm = (encoder_count / PULSES_PER_REVOLUTION) * CIRCUMFERENCE;
     516:	60 91 d7 01 	lds	r22, 0x01D7	; 0x8001d7 <encoder_count>
     51a:	70 91 d8 01 	lds	r23, 0x01D8	; 0x8001d8 <encoder_count+0x1>
     51e:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <encoder_count+0x2>
     522:	90 91 da 01 	lds	r25, 0x01DA	; 0x8001da <encoder_count+0x3>
     526:	3d d4       	rcall	.+2170   	; 0xda2 <__floatsisf>
     528:	20 e0       	ldi	r18, 0x00	; 0
     52a:	30 e0       	ldi	r19, 0x00	; 0
     52c:	4a ef       	ldi	r20, 0xFA	; 250
     52e:	54 e4       	ldi	r21, 0x44	; 68
     530:	ce d3       	rcall	.+1948   	; 0xcce <__divsf3>
     532:	23 e3       	ldi	r18, 0x33	; 51
     534:	33 e3       	ldi	r19, 0x33	; 51
     536:	4b e7       	ldi	r20, 0x7B	; 123
     538:	52 e4       	ldi	r21, 0x42	; 66
     53a:	bf d4       	rcall	.+2430   	; 0xeba <__mulsf3>
				char dist_str[8];
				
				switch(unit_mode) {
     53c:	20 91 d6 01 	lds	r18, 0x01D6	; 0x8001d6 <unit_mode>
     540:	21 30       	cpi	r18, 0x01	; 1
     542:	f9 f0       	breq	.+62     	; 0x582 <check_button2+0xe4>
     544:	20 f0       	brcs	.+8      	; 0x54e <check_button2+0xb0>
     546:	22 30       	cpi	r18, 0x02	; 2
     548:	09 f4       	brne	.+2      	; 0x54c <check_button2+0xae>
     54a:	3a c0       	rjmp	.+116    	; 0x5c0 <check_button2+0x122>
     54c:	57 c0       	rjmp	.+174    	; 0x5fc <check_button2+0x15e>
					case 0:
					dtostrf(distance_cm, 3, 1, dist_str);
     54e:	9e 01       	movw	r18, r28
     550:	2f 5f       	subi	r18, 0xFF	; 255
     552:	3f 4f       	sbci	r19, 0xFF	; 255
     554:	69 01       	movw	r12, r18
     556:	89 01       	movw	r16, r18
     558:	21 e0       	ldi	r18, 0x01	; 1
     55a:	43 e0       	ldi	r20, 0x03	; 3
     55c:	38 d5       	rcall	.+2672   	; 0xfce <dtostrf>
					sprintf(buffer, "Distance:%scm  ", dist_str);
     55e:	df 92       	push	r13
     560:	cf 92       	push	r12
     562:	88 e4       	ldi	r24, 0x48	; 72
     564:	91 e0       	ldi	r25, 0x01	; 1
     566:	9f 93       	push	r25
     568:	8f 93       	push	r24
     56a:	8b ed       	ldi	r24, 0xDB	; 219
     56c:	91 e0       	ldi	r25, 0x01	; 1
     56e:	9f 93       	push	r25
     570:	8f 93       	push	r24
     572:	4c d5       	rcall	.+2712   	; 0x100c <sprintf>
					break;
     574:	0f 90       	pop	r0
     576:	0f 90       	pop	r0
     578:	0f 90       	pop	r0
     57a:	0f 90       	pop	r0
     57c:	0f 90       	pop	r0
     57e:	0f 90       	pop	r0
					case 1:
					dtostrf(distance_cm / 100.0, 3, 1, dist_str);
     580:	3d c0       	rjmp	.+122    	; 0x5fc <check_button2+0x15e>
     582:	20 e0       	ldi	r18, 0x00	; 0
     584:	30 e0       	ldi	r19, 0x00	; 0
     586:	48 ec       	ldi	r20, 0xC8	; 200
     588:	52 e4       	ldi	r21, 0x42	; 66
     58a:	a1 d3       	rcall	.+1858   	; 0xcce <__divsf3>
     58c:	9e 01       	movw	r18, r28
     58e:	2f 5f       	subi	r18, 0xFF	; 255
     590:	3f 4f       	sbci	r19, 0xFF	; 255
     592:	59 01       	movw	r10, r18
     594:	89 01       	movw	r16, r18
     596:	21 e0       	ldi	r18, 0x01	; 1
     598:	43 e0       	ldi	r20, 0x03	; 3
     59a:	19 d5       	rcall	.+2610   	; 0xfce <dtostrf>
					sprintf(buffer, "Distance:%sm   ", dist_str);
     59c:	bf 92       	push	r11
     59e:	af 92       	push	r10
     5a0:	88 e5       	ldi	r24, 0x58	; 88
     5a2:	91 e0       	ldi	r25, 0x01	; 1
     5a4:	9f 93       	push	r25
     5a6:	8f 93       	push	r24
     5a8:	8b ed       	ldi	r24, 0xDB	; 219
     5aa:	91 e0       	ldi	r25, 0x01	; 1
     5ac:	9f 93       	push	r25
     5ae:	8f 93       	push	r24
     5b0:	2d d5       	rcall	.+2650   	; 0x100c <sprintf>
					break;
     5b2:	0f 90       	pop	r0
     5b4:	0f 90       	pop	r0
     5b6:	0f 90       	pop	r0
     5b8:	0f 90       	pop	r0
     5ba:	0f 90       	pop	r0
     5bc:	0f 90       	pop	r0
					case 2:
					dtostrf(distance_cm / 100000.0, 3, 2, dist_str);
     5be:	1e c0       	rjmp	.+60     	; 0x5fc <check_button2+0x15e>
     5c0:	20 e0       	ldi	r18, 0x00	; 0
     5c2:	30 e5       	ldi	r19, 0x50	; 80
     5c4:	43 ec       	ldi	r20, 0xC3	; 195
     5c6:	57 e4       	ldi	r21, 0x47	; 71
     5c8:	82 d3       	rcall	.+1796   	; 0xcce <__divsf3>
     5ca:	9e 01       	movw	r18, r28
     5cc:	2f 5f       	subi	r18, 0xFF	; 255
     5ce:	3f 4f       	sbci	r19, 0xFF	; 255
     5d0:	59 01       	movw	r10, r18
     5d2:	89 01       	movw	r16, r18
     5d4:	22 e0       	ldi	r18, 0x02	; 2
     5d6:	43 e0       	ldi	r20, 0x03	; 3
     5d8:	fa d4       	rcall	.+2548   	; 0xfce <dtostrf>
					sprintf(buffer, "Distance:%skm  ", dist_str);
     5da:	bf 92       	push	r11
     5dc:	af 92       	push	r10
     5de:	88 e6       	ldi	r24, 0x68	; 104
     5e0:	91 e0       	ldi	r25, 0x01	; 1
     5e2:	9f 93       	push	r25
     5e4:	8f 93       	push	r24
     5e6:	8b ed       	ldi	r24, 0xDB	; 219
     5e8:	91 e0       	ldi	r25, 0x01	; 1
     5ea:	9f 93       	push	r25
     5ec:	8f 93       	push	r24
					break;
     5ee:	0e d5       	rcall	.+2588   	; 0x100c <sprintf>
     5f0:	0f 90       	pop	r0
     5f2:	0f 90       	pop	r0
     5f4:	0f 90       	pop	r0
     5f6:	0f 90       	pop	r0
				}
				lcd_gotoxy(0, 0);
     5f8:	0f 90       	pop	r0
     5fa:	0f 90       	pop	r0
     5fc:	60 e0       	ldi	r22, 0x00	; 0
     5fe:	80 e0       	ldi	r24, 0x00	; 0
				lcd_string(buffer);
     600:	b4 de       	rcall	.-664    	; 0x36a <lcd_gotoxy>
     602:	8b ed       	ldi	r24, 0xDB	; 219
     604:	91 e0       	ldi	r25, 0x01	; 1
     606:	9c de       	rcall	.-712    	; 0x340 <lcd_string>
				sprintf(buffer, "Count: %ld   %c", encoder_count, is_saved ? 'S' : ' ');
     608:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <is_saved>
     60c:	88 23       	and	r24, r24
     60e:	19 f0       	breq	.+6      	; 0x616 <check_button2+0x178>
     610:	23 e5       	ldi	r18, 0x53	; 83
     612:	30 e0       	ldi	r19, 0x00	; 0
     614:	02 c0       	rjmp	.+4      	; 0x61a <check_button2+0x17c>
     616:	20 e2       	ldi	r18, 0x20	; 32
     618:	30 e0       	ldi	r19, 0x00	; 0
     61a:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <encoder_count>
     61e:	90 91 d8 01 	lds	r25, 0x01D8	; 0x8001d8 <encoder_count+0x1>
     622:	a0 91 d9 01 	lds	r26, 0x01D9	; 0x8001d9 <encoder_count+0x2>
     626:	b0 91 da 01 	lds	r27, 0x01DA	; 0x8001da <encoder_count+0x3>
     62a:	3f 93       	push	r19
     62c:	2f 93       	push	r18
     62e:	bf 93       	push	r27
     630:	af 93       	push	r26
     632:	9f 93       	push	r25
     634:	8f 93       	push	r24
     636:	88 e7       	ldi	r24, 0x78	; 120
     638:	91 e0       	ldi	r25, 0x01	; 1
     63a:	9f 93       	push	r25
     63c:	8f 93       	push	r24
     63e:	8b ed       	ldi	r24, 0xDB	; 219
     640:	91 e0       	ldi	r25, 0x01	; 1
     642:	9f 93       	push	r25
				lcd_gotoxy(0, 1);
     644:	8f 93       	push	r24
     646:	e2 d4       	rcall	.+2500   	; 0x100c <sprintf>
     648:	61 e0       	ldi	r22, 0x01	; 1
     64a:	80 e0       	ldi	r24, 0x00	; 0
				lcd_string(buffer);
     64c:	8e de       	rcall	.-740    	; 0x36a <lcd_gotoxy>
     64e:	8b ed       	ldi	r24, 0xDB	; 219
     650:	91 e0       	ldi	r25, 0x01	; 1
     652:	76 de       	rcall	.-788    	; 0x340 <lcd_string>
     654:	0f b6       	in	r0, 0x3f	; 63
     656:	f8 94       	cli
     658:	de bf       	out	0x3e, r29	; 62
     65a:	0f be       	out	0x3f, r0	; 63
     65c:	cd bf       	out	0x3d, r28	; 61
     65e:	00 c1       	rjmp	.+512    	; 0x860 <check_button2+0x3c2>
				} else {
				press_duration = 0;
     660:	10 92 c3 01 	sts	0x01C3, r1	; 0x8001c3 <press_duration.2169+0x1>
     664:	10 92 c2 01 	sts	0x01C2, r1	; 0x8001c2 <press_duration.2169>
				uint32_t press_start = system_timer;
     668:	40 91 cd 01 	lds	r20, 0x01CD	; 0x8001cd <system_timer>
     66c:	50 91 ce 01 	lds	r21, 0x01CE	; 0x8001ce <system_timer+0x1>
     670:	60 91 cf 01 	lds	r22, 0x01CF	; 0x8001cf <system_timer+0x2>
     674:	70 91 d0 01 	lds	r23, 0x01D0	; 0x8001d0 <system_timer+0x3>
				
				while (!(PIND & (1 << BUTTON2))) {
     678:	a3 c0       	rjmp	.+326    	; 0x7c0 <check_button2+0x322>
					if (system_timer - press_start > LONG_PRESS_TIME) {
     67a:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <system_timer>
     67e:	90 91 ce 01 	lds	r25, 0x01CE	; 0x8001ce <system_timer+0x1>
     682:	a0 91 cf 01 	lds	r26, 0x01CF	; 0x8001cf <system_timer+0x2>
     686:	b0 91 d0 01 	lds	r27, 0x01D0	; 0x8001d0 <system_timer+0x3>
     68a:	84 1b       	sub	r24, r20
     68c:	95 0b       	sbc	r25, r21
     68e:	a6 0b       	sbc	r26, r22
     690:	b7 0b       	sbc	r27, r23
     692:	85 36       	cpi	r24, 0x65	; 101
     694:	91 05       	cpc	r25, r1
     696:	a1 05       	cpc	r26, r1
     698:	b1 05       	cpc	r27, r1
     69a:	08 f4       	brcc	.+2      	; 0x69e <check_button2+0x200>
     69c:	82 c0       	rjmp	.+260    	; 0x7a2 <check_button2+0x304>
						// 저장된 값 표시 모드 시작
						viewing_saved = 1;  // 저장값 확인 중 플래그 설정
     69e:	81 e0       	ldi	r24, 0x01	; 1
     6a0:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <viewing_saved>
						
						char saved_str[8];
						switch(unit_mode) {
     6a4:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <unit_mode>
     6a8:	81 30       	cpi	r24, 0x01	; 1
     6aa:	39 f1       	breq	.+78     	; 0x6fa <check_button2+0x25c>
     6ac:	20 f0       	brcs	.+8      	; 0x6b6 <check_button2+0x218>
     6ae:	82 30       	cpi	r24, 0x02	; 2
     6b0:	09 f4       	brne	.+2      	; 0x6b4 <check_button2+0x216>
     6b2:	4a c0       	rjmp	.+148    	; 0x748 <check_button2+0x2aa>
							case 0:
							dtostrf(saved_distance, 3, 1, saved_str);
     6b4:	6f c0       	rjmp	.+222    	; 0x794 <check_button2+0x2f6>
     6b6:	60 91 d2 01 	lds	r22, 0x01D2	; 0x8001d2 <saved_distance>
     6ba:	70 91 d3 01 	lds	r23, 0x01D3	; 0x8001d3 <saved_distance+0x1>
     6be:	80 91 d4 01 	lds	r24, 0x01D4	; 0x8001d4 <saved_distance+0x2>
     6c2:	90 91 d5 01 	lds	r25, 0x01D5	; 0x8001d5 <saved_distance+0x3>
     6c6:	9e 01       	movw	r18, r28
     6c8:	2f 5f       	subi	r18, 0xFF	; 255
     6ca:	3f 4f       	sbci	r19, 0xFF	; 255
     6cc:	69 01       	movw	r12, r18
     6ce:	89 01       	movw	r16, r18
     6d0:	21 e0       	ldi	r18, 0x01	; 1
     6d2:	43 e0       	ldi	r20, 0x03	; 3
							sprintf(buffer, "Saved: %scm    ", saved_str);
     6d4:	7c d4       	rcall	.+2296   	; 0xfce <dtostrf>
     6d6:	df 92       	push	r13
     6d8:	cf 92       	push	r12
     6da:	88 e8       	ldi	r24, 0x88	; 136
     6dc:	91 e0       	ldi	r25, 0x01	; 1
     6de:	9f 93       	push	r25
     6e0:	8f 93       	push	r24
     6e2:	8b ed       	ldi	r24, 0xDB	; 219
     6e4:	91 e0       	ldi	r25, 0x01	; 1
     6e6:	9f 93       	push	r25
     6e8:	8f 93       	push	r24
     6ea:	90 d4       	rcall	.+2336   	; 0x100c <sprintf>
							break;
     6ec:	0f 90       	pop	r0
     6ee:	0f 90       	pop	r0
     6f0:	0f 90       	pop	r0
     6f2:	0f 90       	pop	r0
     6f4:	0f 90       	pop	r0
     6f6:	0f 90       	pop	r0
							case 1:
							dtostrf(saved_distance / 100.0, 3, 1, saved_str);
     6f8:	4d c0       	rjmp	.+154    	; 0x794 <check_button2+0x2f6>
     6fa:	60 91 d2 01 	lds	r22, 0x01D2	; 0x8001d2 <saved_distance>
     6fe:	70 91 d3 01 	lds	r23, 0x01D3	; 0x8001d3 <saved_distance+0x1>
     702:	80 91 d4 01 	lds	r24, 0x01D4	; 0x8001d4 <saved_distance+0x2>
     706:	90 91 d5 01 	lds	r25, 0x01D5	; 0x8001d5 <saved_distance+0x3>
     70a:	20 e0       	ldi	r18, 0x00	; 0
     70c:	30 e0       	ldi	r19, 0x00	; 0
     70e:	48 ec       	ldi	r20, 0xC8	; 200
     710:	52 e4       	ldi	r21, 0x42	; 66
     712:	dd d2       	rcall	.+1466   	; 0xcce <__divsf3>
     714:	9e 01       	movw	r18, r28
     716:	2f 5f       	subi	r18, 0xFF	; 255
     718:	3f 4f       	sbci	r19, 0xFF	; 255
     71a:	69 01       	movw	r12, r18
     71c:	89 01       	movw	r16, r18
     71e:	21 e0       	ldi	r18, 0x01	; 1
     720:	43 e0       	ldi	r20, 0x03	; 3
							sprintf(buffer, "Saved: %sm     ", saved_str);
     722:	55 d4       	rcall	.+2218   	; 0xfce <dtostrf>
     724:	df 92       	push	r13
     726:	cf 92       	push	r12
     728:	88 e9       	ldi	r24, 0x98	; 152
     72a:	91 e0       	ldi	r25, 0x01	; 1
     72c:	9f 93       	push	r25
     72e:	8f 93       	push	r24
     730:	8b ed       	ldi	r24, 0xDB	; 219
     732:	91 e0       	ldi	r25, 0x01	; 1
     734:	9f 93       	push	r25
     736:	8f 93       	push	r24
							break;
     738:	69 d4       	rcall	.+2258   	; 0x100c <sprintf>
     73a:	0f 90       	pop	r0
     73c:	0f 90       	pop	r0
     73e:	0f 90       	pop	r0
     740:	0f 90       	pop	r0
     742:	0f 90       	pop	r0
							case 2:
							dtostrf(saved_distance / 100000.0, 3, 2, saved_str);
     744:	0f 90       	pop	r0
     746:	26 c0       	rjmp	.+76     	; 0x794 <check_button2+0x2f6>
     748:	60 91 d2 01 	lds	r22, 0x01D2	; 0x8001d2 <saved_distance>
     74c:	70 91 d3 01 	lds	r23, 0x01D3	; 0x8001d3 <saved_distance+0x1>
     750:	80 91 d4 01 	lds	r24, 0x01D4	; 0x8001d4 <saved_distance+0x2>
     754:	90 91 d5 01 	lds	r25, 0x01D5	; 0x8001d5 <saved_distance+0x3>
     758:	20 e0       	ldi	r18, 0x00	; 0
     75a:	30 e5       	ldi	r19, 0x50	; 80
     75c:	43 ec       	ldi	r20, 0xC3	; 195
     75e:	57 e4       	ldi	r21, 0x47	; 71
     760:	b6 d2       	rcall	.+1388   	; 0xcce <__divsf3>
     762:	9e 01       	movw	r18, r28
     764:	2f 5f       	subi	r18, 0xFF	; 255
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	69 01       	movw	r12, r18
     76a:	89 01       	movw	r16, r18
     76c:	22 e0       	ldi	r18, 0x02	; 2
							sprintf(buffer, "Saved: %skm    ", saved_str);
     76e:	43 e0       	ldi	r20, 0x03	; 3
     770:	2e d4       	rcall	.+2140   	; 0xfce <dtostrf>
     772:	df 92       	push	r13
     774:	cf 92       	push	r12
     776:	88 ea       	ldi	r24, 0xA8	; 168
     778:	91 e0       	ldi	r25, 0x01	; 1
     77a:	9f 93       	push	r25
     77c:	8f 93       	push	r24
     77e:	8b ed       	ldi	r24, 0xDB	; 219
     780:	91 e0       	ldi	r25, 0x01	; 1
     782:	9f 93       	push	r25
     784:	8f 93       	push	r24
							break;
     786:	42 d4       	rcall	.+2180   	; 0x100c <sprintf>
     788:	0f 90       	pop	r0
     78a:	0f 90       	pop	r0
     78c:	0f 90       	pop	r0
     78e:	0f 90       	pop	r0
     790:	0f 90       	pop	r0
						}
						lcd_gotoxy(0, 0);
     792:	0f 90       	pop	r0
     794:	60 e0       	ldi	r22, 0x00	; 0
     796:	80 e0       	ldi	r24, 0x00	; 0
     798:	e8 dd       	rcall	.-1072   	; 0x36a <lcd_gotoxy>
						lcd_string(buffer);
     79a:	8b ed       	ldi	r24, 0xDB	; 219
     79c:	91 e0       	ldi	r25, 0x01	; 1
     79e:	d0 dd       	rcall	.-1120   	; 0x340 <lcd_string>
     7a0:	71 c0       	rjmp	.+226    	; 0x884 <check_button2+0x3e6>
     7a2:	8f e3       	ldi	r24, 0x3F	; 63
     7a4:	9c e9       	ldi	r25, 0x9C	; 156
     7a6:	01 97       	sbiw	r24, 0x01	; 1
     7a8:	f1 f7       	brne	.-4      	; 0x7a6 <check_button2+0x308>
     7aa:	00 c0       	rjmp	.+0      	; 0x7ac <check_button2+0x30e>
     7ac:	00 00       	nop
     7ae:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <press_duration.2169>
						return;
					}
					_delay_ms(10);
					press_duration++;
     7b2:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <press_duration.2169+0x1>
     7b6:	01 96       	adiw	r24, 0x01	; 1
     7b8:	90 93 c3 01 	sts	0x01C3, r25	; 0x8001c3 <press_duration.2169+0x1>
     7bc:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <press_duration.2169>
				}
				
				if (press_duration <= LONG_PRESS_TIME / 10) {
     7c0:	80 9b       	sbis	0x10, 0	; 16
     7c2:	5b cf       	rjmp	.-330    	; 0x67a <check_button2+0x1dc>
     7c4:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <press_duration.2169>
     7c8:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <press_duration.2169+0x1>
     7cc:	0b 97       	sbiw	r24, 0x0b	; 11
					saved_distance = (encoder_count / PULSES_PER_REVOLUTION) * CIRCUMFERENCE;
     7ce:	08 f0       	brcs	.+2      	; 0x7d2 <check_button2+0x334>
     7d0:	47 c0       	rjmp	.+142    	; 0x860 <check_button2+0x3c2>
     7d2:	60 91 d7 01 	lds	r22, 0x01D7	; 0x8001d7 <encoder_count>
     7d6:	70 91 d8 01 	lds	r23, 0x01D8	; 0x8001d8 <encoder_count+0x1>
     7da:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <encoder_count+0x2>
     7de:	90 91 da 01 	lds	r25, 0x01DA	; 0x8001da <encoder_count+0x3>
     7e2:	df d2       	rcall	.+1470   	; 0xda2 <__floatsisf>
     7e4:	20 e0       	ldi	r18, 0x00	; 0
     7e6:	30 e0       	ldi	r19, 0x00	; 0
     7e8:	4a ef       	ldi	r20, 0xFA	; 250
     7ea:	54 e4       	ldi	r21, 0x44	; 68
     7ec:	70 d2       	rcall	.+1248   	; 0xcce <__divsf3>
     7ee:	23 e3       	ldi	r18, 0x33	; 51
     7f0:	33 e3       	ldi	r19, 0x33	; 51
     7f2:	4b e7       	ldi	r20, 0x7B	; 123
     7f4:	52 e4       	ldi	r21, 0x42	; 66
     7f6:	61 d3       	rcall	.+1730   	; 0xeba <__mulsf3>
     7f8:	60 93 d2 01 	sts	0x01D2, r22	; 0x8001d2 <saved_distance>
     7fc:	70 93 d3 01 	sts	0x01D3, r23	; 0x8001d3 <saved_distance+0x1>
     800:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <saved_distance+0x2>
					is_saved = 1;
     804:	90 93 d5 01 	sts	0x01D5, r25	; 0x8001d5 <saved_distance+0x3>
					
					// S 깜빡임 효과
					for(uint8_t i = 0; i < 2; i++) {
     808:	81 e0       	ldi	r24, 0x01	; 1
     80a:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <is_saved>
						lcd_gotoxy(13, 1);
     80e:	10 e0       	ldi	r17, 0x00	; 0
     810:	1f c0       	rjmp	.+62     	; 0x850 <check_button2+0x3b2>
     812:	61 e0       	ldi	r22, 0x01	; 1
						lcd_string("S");
     814:	8d e0       	ldi	r24, 0x0D	; 13
     816:	a9 dd       	rcall	.-1198   	; 0x36a <lcd_gotoxy>
     818:	88 eb       	ldi	r24, 0xB8	; 184
     81a:	91 e0       	ldi	r25, 0x01	; 1
     81c:	91 dd       	rcall	.-1246   	; 0x340 <lcd_string>
     81e:	9f ef       	ldi	r25, 0xFF	; 255
     820:	25 ea       	ldi	r18, 0xA5	; 165
     822:	3e e0       	ldi	r19, 0x0E	; 14
     824:	91 50       	subi	r25, 0x01	; 1
     826:	20 40       	sbci	r18, 0x00	; 0
     828:	30 40       	sbci	r19, 0x00	; 0
						_delay_ms(300);
						lcd_gotoxy(13, 1);
     82a:	e1 f7       	brne	.-8      	; 0x824 <check_button2+0x386>
     82c:	00 c0       	rjmp	.+0      	; 0x82e <check_button2+0x390>
     82e:	00 00       	nop
     830:	61 e0       	ldi	r22, 0x01	; 1
						lcd_string(" ");
     832:	8d e0       	ldi	r24, 0x0D	; 13
     834:	9a dd       	rcall	.-1228   	; 0x36a <lcd_gotoxy>
     836:	83 e1       	ldi	r24, 0x13	; 19
     838:	91 e0       	ldi	r25, 0x01	; 1
     83a:	82 dd       	rcall	.-1276   	; 0x340 <lcd_string>
     83c:	8f ef       	ldi	r24, 0xFF	; 255
     83e:	95 ea       	ldi	r25, 0xA5	; 165
     840:	2e e0       	ldi	r18, 0x0E	; 14
     842:	81 50       	subi	r24, 0x01	; 1
     844:	90 40       	sbci	r25, 0x00	; 0
     846:	20 40       	sbci	r18, 0x00	; 0
     848:	e1 f7       	brne	.-8      	; 0x842 <check_button2+0x3a4>
     84a:	00 c0       	rjmp	.+0      	; 0x84c <check_button2+0x3ae>
				if (press_duration <= LONG_PRESS_TIME / 10) {
					saved_distance = (encoder_count / PULSES_PER_REVOLUTION) * CIRCUMFERENCE;
					is_saved = 1;
					
					// S 깜빡임 효과
					for(uint8_t i = 0; i < 2; i++) {
     84c:	00 00       	nop
     84e:	1f 5f       	subi	r17, 0xFF	; 255
     850:	12 30       	cpi	r17, 0x02	; 2
						_delay_ms(300);
						lcd_gotoxy(13, 1);
						lcd_string(" ");
						_delay_ms(300);
					}
					lcd_gotoxy(13, 1);
     852:	f8 f2       	brcs	.-66     	; 0x812 <check_button2+0x374>
     854:	61 e0       	ldi	r22, 0x01	; 1
     856:	8d e0       	ldi	r24, 0x0D	; 13
     858:	88 dd       	rcall	.-1264   	; 0x36a <lcd_gotoxy>
					lcd_string("S");
     85a:	88 eb       	ldi	r24, 0xB8	; 184
     85c:	91 e0       	ldi	r25, 0x01	; 1
     85e:	70 dd       	rcall	.-1312   	; 0x340 <lcd_string>
     860:	f0 92 02 01 	sts	0x0102, r15	; 0x800102 <last_state.2167>
				}
			}
		}
		last_state = current_state;
     864:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <system_timer>
		last_change_time = system_timer;
     868:	90 91 ce 01 	lds	r25, 0x01CE	; 0x8001ce <system_timer+0x1>
     86c:	a0 91 cf 01 	lds	r26, 0x01CF	; 0x8001cf <system_timer+0x2>
     870:	b0 91 d0 01 	lds	r27, 0x01D0	; 0x8001d0 <system_timer+0x3>
     874:	80 93 c4 01 	sts	0x01C4, r24	; 0x8001c4 <last_change_time.2168>
     878:	90 93 c5 01 	sts	0x01C5, r25	; 0x8001c5 <last_change_time.2168+0x1>
     87c:	a0 93 c6 01 	sts	0x01C6, r26	; 0x8001c6 <last_change_time.2168+0x2>
     880:	b0 93 c7 01 	sts	0x01C7, r27	; 0x8001c7 <last_change_time.2168+0x3>
     884:	28 96       	adiw	r28, 0x08	; 8
	}
}
     886:	0f b6       	in	r0, 0x3f	; 63
     888:	f8 94       	cli
     88a:	de bf       	out	0x3e, r29	; 62
     88c:	0f be       	out	0x3f, r0	; 63
     88e:	cd bf       	out	0x3d, r28	; 61
     890:	df 91       	pop	r29
     892:	cf 91       	pop	r28
     894:	1f 91       	pop	r17
     896:	0f 91       	pop	r16
     898:	ff 90       	pop	r15
     89a:	df 90       	pop	r13
     89c:	cf 90       	pop	r12
     89e:	bf 90       	pop	r11
     8a0:	af 90       	pop	r10
     8a2:	08 95       	ret

000008a4 <check_button3>:
     8a4:	20 b3       	in	r18, 0x10	; 16

void check_button3(void) {
	static uint8_t last_state = 1;
	static uint32_t last_change_time = 0;
	uint8_t current_state = (PIND & (1 << BUTTON3));
     8a6:	24 70       	andi	r18, 0x04	; 4
	
	if (current_state != last_state && (system_timer - last_change_time) > DEBOUNCE_DELAY) {
     8a8:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <last_state.2193>
     8ac:	28 17       	cp	r18, r24
     8ae:	b1 f1       	breq	.+108    	; 0x91c <check_button3+0x78>
     8b0:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <system_timer>
     8b4:	90 91 ce 01 	lds	r25, 0x01CE	; 0x8001ce <system_timer+0x1>
     8b8:	a0 91 cf 01 	lds	r26, 0x01CF	; 0x8001cf <system_timer+0x2>
     8bc:	b0 91 d0 01 	lds	r27, 0x01D0	; 0x8001d0 <system_timer+0x3>
     8c0:	40 91 be 01 	lds	r20, 0x01BE	; 0x8001be <__data_end>
     8c4:	50 91 bf 01 	lds	r21, 0x01BF	; 0x8001bf <__data_end+0x1>
     8c8:	60 91 c0 01 	lds	r22, 0x01C0	; 0x8001c0 <__data_end+0x2>
     8cc:	70 91 c1 01 	lds	r23, 0x01C1	; 0x8001c1 <__data_end+0x3>
     8d0:	84 1b       	sub	r24, r20
     8d2:	95 0b       	sbc	r25, r21
     8d4:	a6 0b       	sbc	r26, r22
     8d6:	b7 0b       	sbc	r27, r23
     8d8:	85 36       	cpi	r24, 0x65	; 101
     8da:	91 05       	cpc	r25, r1
     8dc:	a1 05       	cpc	r26, r1
     8de:	b1 05       	cpc	r27, r1
     8e0:	e8 f0       	brcs	.+58     	; 0x91c <check_button3+0x78>
		if (!current_state) {
     8e2:	21 11       	cpse	r18, r1
     8e4:	09 c0       	rjmp	.+18     	; 0x8f8 <check_button3+0x54>
			unit_mode = (unit_mode + 1) % 3;
     8e6:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <unit_mode>
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	01 96       	adiw	r24, 0x01	; 1
     8ee:	63 e0       	ldi	r22, 0x03	; 3
     8f0:	70 e0       	ldi	r23, 0x00	; 0
     8f2:	46 d3       	rcall	.+1676   	; 0xf80 <__divmodhi4>
     8f4:	80 93 d6 01 	sts	0x01D6, r24	; 0x8001d6 <unit_mode>
		}
		last_state = current_state;
     8f8:	20 93 01 01 	sts	0x0101, r18	; 0x800101 <last_state.2193>
		last_change_time = system_timer;
     8fc:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <system_timer>
     900:	90 91 ce 01 	lds	r25, 0x01CE	; 0x8001ce <system_timer+0x1>
     904:	a0 91 cf 01 	lds	r26, 0x01CF	; 0x8001cf <system_timer+0x2>
     908:	b0 91 d0 01 	lds	r27, 0x01D0	; 0x8001d0 <system_timer+0x3>
     90c:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <__data_end>
     910:	90 93 bf 01 	sts	0x01BF, r25	; 0x8001bf <__data_end+0x1>
     914:	a0 93 c0 01 	sts	0x01C0, r26	; 0x8001c0 <__data_end+0x2>
     918:	b0 93 c1 01 	sts	0x01C1, r27	; 0x8001c1 <__data_end+0x3>
     91c:	08 95       	ret

0000091e <encoder_init>:
	}
}

// 엔코더 초기화 함수
void encoder_init(void) {
	DDRE &= ~((1 << ENC_A) | (1 << ENC_B));
     91e:	82 b1       	in	r24, 0x02	; 2
     920:	8f 7c       	andi	r24, 0xCF	; 207
     922:	82 b9       	out	0x02, r24	; 2
	PORTE |= (1 << ENC_A) | (1 << ENC_B);
     924:	83 b1       	in	r24, 0x03	; 3
     926:	80 63       	ori	r24, 0x30	; 48
     928:	83 b9       	out	0x03, r24	; 3
	
	EICRB |= (1 << ISC41) | (1 << ISC40);  // INT4 rising edge
     92a:	8a b7       	in	r24, 0x3a	; 58
     92c:	83 60       	ori	r24, 0x03	; 3
     92e:	8a bf       	out	0x3a, r24	; 58
	EICRB |= (1 << ISC51) | (1 << ISC50);  // INT5 rising edge
     930:	8a b7       	in	r24, 0x3a	; 58
     932:	8c 60       	ori	r24, 0x0C	; 12
     934:	8a bf       	out	0x3a, r24	; 58
	EIMSK |= (1 << INT4) | (1 << INT5);    // 인터럽트 활성화
     936:	89 b7       	in	r24, 0x39	; 57
     938:	80 63       	ori	r24, 0x30	; 48
     93a:	89 bf       	out	0x39, r24	; 57
	
	sei();
     93c:	78 94       	sei
     93e:	08 95       	ret

00000940 <__vector_5>:
}

// 인터럽트 핸들러
ISR(INT4_vect) {
     940:	1f 92       	push	r1
     942:	0f 92       	push	r0
     944:	0f b6       	in	r0, 0x3f	; 63
     946:	0f 92       	push	r0
     948:	11 24       	eor	r1, r1
     94a:	8f 93       	push	r24
     94c:	9f 93       	push	r25
     94e:	af 93       	push	r26
     950:	bf 93       	push	r27
	if (!viewing_saved) {  // 저장값 확인 중이 아닐 때만 카운트
     952:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <viewing_saved>
     956:	81 11       	cpse	r24, r1
     958:	30 c0       	rjmp	.+96     	; 0x9ba <__vector_5+0x7a>
		uint8_t a = (PINE & (1 << ENC_A)) != 0;
     95a:	91 b1       	in	r25, 0x01	; 1
     95c:	92 95       	swap	r25
     95e:	91 70       	andi	r25, 0x01	; 1
		uint8_t b = (PINE & (1 << ENC_B)) != 0;
     960:	81 b1       	in	r24, 0x01	; 1
     962:	85 fb       	bst	r24, 5
     964:	88 27       	eor	r24, r24
     966:	80 f9       	bld	r24, 0
		
		if (a != b) {
     968:	98 17       	cp	r25, r24
     96a:	a1 f0       	breq	.+40     	; 0x994 <__vector_5+0x54>
			encoder_count++;
     96c:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <encoder_count>
     970:	90 91 d8 01 	lds	r25, 0x01D8	; 0x8001d8 <encoder_count+0x1>
     974:	a0 91 d9 01 	lds	r26, 0x01D9	; 0x8001d9 <encoder_count+0x2>
     978:	b0 91 da 01 	lds	r27, 0x01DA	; 0x8001da <encoder_count+0x3>
     97c:	01 96       	adiw	r24, 0x01	; 1
     97e:	a1 1d       	adc	r26, r1
     980:	b1 1d       	adc	r27, r1
     982:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <encoder_count>
     986:	90 93 d8 01 	sts	0x01D8, r25	; 0x8001d8 <encoder_count+0x1>
     98a:	a0 93 d9 01 	sts	0x01D9, r26	; 0x8001d9 <encoder_count+0x2>
     98e:	b0 93 da 01 	sts	0x01DA, r27	; 0x8001da <encoder_count+0x3>
     992:	13 c0       	rjmp	.+38     	; 0x9ba <__vector_5+0x7a>
			} else {
			encoder_count--;
     994:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <encoder_count>
     998:	90 91 d8 01 	lds	r25, 0x01D8	; 0x8001d8 <encoder_count+0x1>
     99c:	a0 91 d9 01 	lds	r26, 0x01D9	; 0x8001d9 <encoder_count+0x2>
     9a0:	b0 91 da 01 	lds	r27, 0x01DA	; 0x8001da <encoder_count+0x3>
     9a4:	01 97       	sbiw	r24, 0x01	; 1
     9a6:	a1 09       	sbc	r26, r1
     9a8:	b1 09       	sbc	r27, r1
     9aa:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <encoder_count>
     9ae:	90 93 d8 01 	sts	0x01D8, r25	; 0x8001d8 <encoder_count+0x1>
     9b2:	a0 93 d9 01 	sts	0x01D9, r26	; 0x8001d9 <encoder_count+0x2>
     9b6:	b0 93 da 01 	sts	0x01DA, r27	; 0x8001da <encoder_count+0x3>
		}
	}
}
     9ba:	bf 91       	pop	r27
     9bc:	af 91       	pop	r26
     9be:	9f 91       	pop	r25
     9c0:	8f 91       	pop	r24
     9c2:	0f 90       	pop	r0
     9c4:	0f be       	out	0x3f, r0	; 63
     9c6:	0f 90       	pop	r0
     9c8:	1f 90       	pop	r1
     9ca:	18 95       	reti

000009cc <__vector_6>:

ISR(INT5_vect) {
     9cc:	1f 92       	push	r1
     9ce:	0f 92       	push	r0
     9d0:	0f b6       	in	r0, 0x3f	; 63
     9d2:	0f 92       	push	r0
     9d4:	11 24       	eor	r1, r1
     9d6:	8f 93       	push	r24
     9d8:	9f 93       	push	r25
     9da:	af 93       	push	r26
     9dc:	bf 93       	push	r27
	if (!viewing_saved) {  // 저장값 확인 중이 아닐 때만 카운트
     9de:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <viewing_saved>
     9e2:	81 11       	cpse	r24, r1
     9e4:	30 c0       	rjmp	.+96     	; 0xa46 <__vector_6+0x7a>
		uint8_t a = (PINE & (1 << ENC_A)) != 0;
     9e6:	91 b1       	in	r25, 0x01	; 1
     9e8:	92 95       	swap	r25
     9ea:	91 70       	andi	r25, 0x01	; 1
		uint8_t b = (PINE & (1 << ENC_B)) != 0;
     9ec:	81 b1       	in	r24, 0x01	; 1
     9ee:	85 fb       	bst	r24, 5
     9f0:	88 27       	eor	r24, r24
     9f2:	80 f9       	bld	r24, 0
		
		if (a == b) {
     9f4:	98 13       	cpse	r25, r24
     9f6:	14 c0       	rjmp	.+40     	; 0xa20 <__vector_6+0x54>
			encoder_count++;
     9f8:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <encoder_count>
     9fc:	90 91 d8 01 	lds	r25, 0x01D8	; 0x8001d8 <encoder_count+0x1>
     a00:	a0 91 d9 01 	lds	r26, 0x01D9	; 0x8001d9 <encoder_count+0x2>
     a04:	b0 91 da 01 	lds	r27, 0x01DA	; 0x8001da <encoder_count+0x3>
     a08:	01 96       	adiw	r24, 0x01	; 1
     a0a:	a1 1d       	adc	r26, r1
     a0c:	b1 1d       	adc	r27, r1
     a0e:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <encoder_count>
     a12:	90 93 d8 01 	sts	0x01D8, r25	; 0x8001d8 <encoder_count+0x1>
     a16:	a0 93 d9 01 	sts	0x01D9, r26	; 0x8001d9 <encoder_count+0x2>
     a1a:	b0 93 da 01 	sts	0x01DA, r27	; 0x8001da <encoder_count+0x3>
     a1e:	13 c0       	rjmp	.+38     	; 0xa46 <__vector_6+0x7a>
			} else {
			encoder_count--;
     a20:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <encoder_count>
     a24:	90 91 d8 01 	lds	r25, 0x01D8	; 0x8001d8 <encoder_count+0x1>
     a28:	a0 91 d9 01 	lds	r26, 0x01D9	; 0x8001d9 <encoder_count+0x2>
     a2c:	b0 91 da 01 	lds	r27, 0x01DA	; 0x8001da <encoder_count+0x3>
     a30:	01 97       	sbiw	r24, 0x01	; 1
     a32:	a1 09       	sbc	r26, r1
     a34:	b1 09       	sbc	r27, r1
     a36:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <encoder_count>
     a3a:	90 93 d8 01 	sts	0x01D8, r25	; 0x8001d8 <encoder_count+0x1>
     a3e:	a0 93 d9 01 	sts	0x01D9, r26	; 0x8001d9 <encoder_count+0x2>
     a42:	b0 93 da 01 	sts	0x01DA, r27	; 0x8001da <encoder_count+0x3>
		}
	}
}
     a46:	bf 91       	pop	r27
     a48:	af 91       	pop	r26
     a4a:	9f 91       	pop	r25
     a4c:	8f 91       	pop	r24
     a4e:	0f 90       	pop	r0
     a50:	0f be       	out	0x3f, r0	; 63
     a52:	0f 90       	pop	r0
     a54:	1f 90       	pop	r1
     a56:	18 95       	reti

00000a58 <main>:

int main(void) {
     a58:	cf 93       	push	r28
     a5a:	df 93       	push	r29
     a5c:	cd b7       	in	r28, 0x3d	; 61
     a5e:	de b7       	in	r29, 0x3e	; 62
     a60:	28 97       	sbiw	r28, 0x08	; 8
     a62:	0f b6       	in	r0, 0x3f	; 63
     a64:	f8 94       	cli
     a66:	de bf       	out	0x3e, r29	; 62
     a68:	0f be       	out	0x3f, r0	; 63
     a6a:	cd bf       	out	0x3d, r28	; 61
	// 초기화
	cli();
     a6c:	f8 94       	cli
	i2c_init();
     a6e:	aa db       	rcall	.-2220   	; 0x1c4 <i2c_init>
	lcd_init();
     a70:	2d dc       	rcall	.-1958   	; 0x2cc <lcd_init>
	encoder_init();
     a72:	55 df       	rcall	.-342    	; 0x91e <encoder_init>
	button_init();
     a74:	af dc       	rcall	.-1698   	; 0x3d4 <button_init>
	timer_init();
     a76:	81 dc       	rcall	.-1790   	; 0x37a <timer_init>
	sei();
     a78:	78 94       	sei
	
	// 초기 화면 설정
	lcd_clear();
     a7a:	6e dc       	rcall	.-1828   	; 0x358 <lcd_clear>
	lcd_gotoxy(0, 0);
     a7c:	60 e0       	ldi	r22, 0x00	; 0
     a7e:	80 e0       	ldi	r24, 0x00	; 0
     a80:	74 dc       	rcall	.-1816   	; 0x36a <lcd_gotoxy>
	lcd_string("Distance: 0.0cm ");
     a82:	85 e1       	ldi	r24, 0x15	; 21
     a84:	91 e0       	ldi	r25, 0x01	; 1
     a86:	5c dc       	rcall	.-1864   	; 0x340 <lcd_string>
	lcd_gotoxy(0, 1);
     a88:	61 e0       	ldi	r22, 0x01	; 1
     a8a:	80 e0       	ldi	r24, 0x00	; 0
     a8c:	6e dc       	rcall	.-1828   	; 0x36a <lcd_gotoxy>
     a8e:	84 e0       	ldi	r24, 0x04	; 4
	lcd_string("Count: 0        ");
     a90:	91 e0       	ldi	r25, 0x01	; 1
     a92:	56 dc       	rcall	.-1876   	; 0x340 <lcd_string>
     a94:	41 2c       	mov	r4, r1
     a96:	51 2c       	mov	r5, r1
	
	uint32_t last_display_update = 0;
	uint32_t last_button_check = 0;
     a98:	32 01       	movw	r6, r4
     a9a:	81 2c       	mov	r8, r1
     a9c:	91 2c       	mov	r9, r1
	lcd_gotoxy(0, 0);
	lcd_string("Distance: 0.0cm ");
	lcd_gotoxy(0, 1);
	lcd_string("Count: 0        ");
	
	uint32_t last_display_update = 0;
     a9e:	54 01       	movw	r10, r8
     aa0:	c0 90 cd 01 	lds	r12, 0x01CD	; 0x8001cd <system_timer>
	uint32_t last_button_check = 0;
	static uint8_t last_unit_mode = 255;  // 초기값을 무효한 값으로 설정
	
	while(1) {
		uint32_t current_time = system_timer;
     aa4:	d0 90 ce 01 	lds	r13, 0x01CE	; 0x8001ce <system_timer+0x1>
     aa8:	e0 90 cf 01 	lds	r14, 0x01CF	; 0x8001cf <system_timer+0x2>
     aac:	f0 90 d0 01 	lds	r15, 0x01D0	; 0x8001d0 <system_timer+0x3>
     ab0:	d7 01       	movw	r26, r14
     ab2:	c6 01       	movw	r24, r12
		
		// 버튼 체크 (20ms 마다)
		if (current_time - last_button_check >= 20) {
     ab4:	84 19       	sub	r24, r4
     ab6:	95 09       	sbc	r25, r5
     ab8:	a6 09       	sbc	r26, r6
     aba:	b7 09       	sbc	r27, r7
     abc:	44 97       	sbiw	r24, 0x14	; 20
     abe:	a1 05       	cpc	r26, r1
     ac0:	b1 05       	cpc	r27, r1
			check_button1();
     ac2:	28 f0       	brcs	.+10     	; 0xace <main+0x76>
     ac4:	8e dc       	rcall	.-1764   	; 0x3e2 <check_button1>
			check_button2();
     ac6:	eb dc       	rcall	.-1578   	; 0x49e <check_button2>
     ac8:	ed de       	rcall	.-550    	; 0x8a4 <check_button3>
			check_button3();
     aca:	26 01       	movw	r4, r12
     acc:	37 01       	movw	r6, r14
			last_button_check = current_time;
     ace:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <viewing_saved>
		}
		
		// viewing_saved가 false일 때만 디스플레이 업데이트 (50ms 마다)
		if (!viewing_saved && current_time - last_display_update >= 50) {
     ad2:	81 11       	cpse	r24, r1
     ad4:	e5 cf       	rjmp	.-54     	; 0xaa0 <main+0x48>
     ad6:	d7 01       	movw	r26, r14
     ad8:	c6 01       	movw	r24, r12
     ada:	88 19       	sub	r24, r8
     adc:	99 09       	sbc	r25, r9
     ade:	aa 09       	sbc	r26, r10
     ae0:	bb 09       	sbc	r27, r11
     ae2:	c2 97       	sbiw	r24, 0x32	; 50
     ae4:	a1 05       	cpc	r26, r1
     ae6:	b1 05       	cpc	r27, r1
     ae8:	d8 f2       	brcs	.-74     	; 0xaa0 <main+0x48>
     aea:	60 91 d7 01 	lds	r22, 0x01D7	; 0x8001d7 <encoder_count>
			float distance_cm = (encoder_count / PULSES_PER_REVOLUTION) * CIRCUMFERENCE;
     aee:	70 91 d8 01 	lds	r23, 0x01D8	; 0x8001d8 <encoder_count+0x1>
     af2:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <encoder_count+0x2>
     af6:	90 91 da 01 	lds	r25, 0x01DA	; 0x8001da <encoder_count+0x3>
     afa:	53 d1       	rcall	.+678    	; 0xda2 <__floatsisf>
     afc:	20 e0       	ldi	r18, 0x00	; 0
     afe:	30 e0       	ldi	r19, 0x00	; 0
     b00:	4a ef       	ldi	r20, 0xFA	; 250
     b02:	54 e4       	ldi	r21, 0x44	; 68
     b04:	e4 d0       	rcall	.+456    	; 0xcce <__divsf3>
     b06:	23 e3       	ldi	r18, 0x33	; 51
     b08:	33 e3       	ldi	r19, 0x33	; 51
     b0a:	4b e7       	ldi	r20, 0x7B	; 123
     b0c:	52 e4       	ldi	r21, 0x42	; 66
     b0e:	d5 d1       	rcall	.+938    	; 0xeba <__mulsf3>
     b10:	4b 01       	movw	r8, r22
     b12:	5c 01       	movw	r10, r24
     b14:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
			char dist_str[8];
			
			// 단위가 변경되었을 때만 Distance 문자열 전체를 업데이트
			if (last_unit_mode != unit_mode) {
     b18:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <unit_mode>
     b1c:	98 17       	cp	r25, r24
     b1e:	09 f4       	brne	.+2      	; 0xb22 <main+0xca>
     b20:	71 c0       	rjmp	.+226    	; 0xc04 <main+0x1ac>
     b22:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <unit_mode>
				switch(unit_mode) {
     b26:	81 30       	cpi	r24, 0x01	; 1
     b28:	09 f1       	breq	.+66     	; 0xb6c <main+0x114>
     b2a:	20 f0       	brcs	.+8      	; 0xb34 <main+0xdc>
     b2c:	82 30       	cpi	r24, 0x02	; 2
     b2e:	09 f4       	brne	.+2      	; 0xb32 <main+0xda>
     b30:	3e c0       	rjmp	.+124    	; 0xbae <main+0x156>
     b32:	5d c0       	rjmp	.+186    	; 0xbee <main+0x196>
     b34:	9e 01       	movw	r18, r28
					case 0:  // cm 단위
					dtostrf(distance_cm, 3, 1, dist_str);
     b36:	2f 5f       	subi	r18, 0xFF	; 255
     b38:	3f 4f       	sbci	r19, 0xFF	; 255
     b3a:	19 01       	movw	r2, r18
     b3c:	89 01       	movw	r16, r18
     b3e:	21 e0       	ldi	r18, 0x01	; 1
     b40:	43 e0       	ldi	r20, 0x03	; 3
     b42:	c5 01       	movw	r24, r10
     b44:	b4 01       	movw	r22, r8
     b46:	43 d2       	rcall	.+1158   	; 0xfce <dtostrf>
     b48:	3f 92       	push	r3
					sprintf(buffer, "Distance:%scm  ", dist_str);
     b4a:	2f 92       	push	r2
     b4c:	88 e4       	ldi	r24, 0x48	; 72
     b4e:	91 e0       	ldi	r25, 0x01	; 1
     b50:	9f 93       	push	r25
     b52:	8f 93       	push	r24
     b54:	8b ed       	ldi	r24, 0xDB	; 219
     b56:	91 e0       	ldi	r25, 0x01	; 1
     b58:	9f 93       	push	r25
     b5a:	8f 93       	push	r24
     b5c:	57 d2       	rcall	.+1198   	; 0x100c <sprintf>
     b5e:	0f 90       	pop	r0
					break;
     b60:	0f 90       	pop	r0
     b62:	0f 90       	pop	r0
     b64:	0f 90       	pop	r0
     b66:	0f 90       	pop	r0
     b68:	0f 90       	pop	r0
     b6a:	41 c0       	rjmp	.+130    	; 0xbee <main+0x196>
					case 1:  // m 단위
					dtostrf(distance_cm / 100.0, 3, 1, dist_str);
     b6c:	20 e0       	ldi	r18, 0x00	; 0
     b6e:	30 e0       	ldi	r19, 0x00	; 0
     b70:	48 ec       	ldi	r20, 0xC8	; 200
     b72:	52 e4       	ldi	r21, 0x42	; 66
     b74:	c5 01       	movw	r24, r10
     b76:	b4 01       	movw	r22, r8
     b78:	aa d0       	rcall	.+340    	; 0xcce <__divsf3>
     b7a:	9e 01       	movw	r18, r28
     b7c:	2f 5f       	subi	r18, 0xFF	; 255
     b7e:	3f 4f       	sbci	r19, 0xFF	; 255
     b80:	59 01       	movw	r10, r18
     b82:	89 01       	movw	r16, r18
     b84:	21 e0       	ldi	r18, 0x01	; 1
     b86:	43 e0       	ldi	r20, 0x03	; 3
     b88:	22 d2       	rcall	.+1092   	; 0xfce <dtostrf>
     b8a:	bf 92       	push	r11
					sprintf(buffer, "Distance:%sm   ", dist_str);
     b8c:	af 92       	push	r10
     b8e:	88 e5       	ldi	r24, 0x58	; 88
     b90:	91 e0       	ldi	r25, 0x01	; 1
     b92:	9f 93       	push	r25
     b94:	8f 93       	push	r24
     b96:	8b ed       	ldi	r24, 0xDB	; 219
     b98:	91 e0       	ldi	r25, 0x01	; 1
     b9a:	9f 93       	push	r25
     b9c:	8f 93       	push	r24
     b9e:	36 d2       	rcall	.+1132   	; 0x100c <sprintf>
     ba0:	0f 90       	pop	r0
					break;
     ba2:	0f 90       	pop	r0
     ba4:	0f 90       	pop	r0
     ba6:	0f 90       	pop	r0
     ba8:	0f 90       	pop	r0
     baa:	0f 90       	pop	r0
     bac:	20 c0       	rjmp	.+64     	; 0xbee <main+0x196>
					case 2:  // km 단위
					dtostrf(distance_cm / 100000.0, 3, 2, dist_str);
     bae:	20 e0       	ldi	r18, 0x00	; 0
     bb0:	30 e5       	ldi	r19, 0x50	; 80
     bb2:	43 ec       	ldi	r20, 0xC3	; 195
     bb4:	57 e4       	ldi	r21, 0x47	; 71
     bb6:	c5 01       	movw	r24, r10
     bb8:	b4 01       	movw	r22, r8
     bba:	89 d0       	rcall	.+274    	; 0xcce <__divsf3>
     bbc:	9e 01       	movw	r18, r28
     bbe:	2f 5f       	subi	r18, 0xFF	; 255
     bc0:	3f 4f       	sbci	r19, 0xFF	; 255
     bc2:	59 01       	movw	r10, r18
     bc4:	89 01       	movw	r16, r18
     bc6:	22 e0       	ldi	r18, 0x02	; 2
     bc8:	43 e0       	ldi	r20, 0x03	; 3
     bca:	01 d2       	rcall	.+1026   	; 0xfce <dtostrf>
					sprintf(buffer, "Distance:%skm  ", dist_str);
     bcc:	bf 92       	push	r11
     bce:	af 92       	push	r10
     bd0:	88 e6       	ldi	r24, 0x68	; 104
     bd2:	91 e0       	ldi	r25, 0x01	; 1
     bd4:	9f 93       	push	r25
     bd6:	8f 93       	push	r24
     bd8:	8b ed       	ldi	r24, 0xDB	; 219
     bda:	91 e0       	ldi	r25, 0x01	; 1
     bdc:	9f 93       	push	r25
     bde:	8f 93       	push	r24
     be0:	15 d2       	rcall	.+1066   	; 0x100c <sprintf>
					break;
     be2:	0f 90       	pop	r0
     be4:	0f 90       	pop	r0
     be6:	0f 90       	pop	r0
     be8:	0f 90       	pop	r0
     bea:	0f 90       	pop	r0
     bec:	0f 90       	pop	r0
				}
				lcd_gotoxy(0, 0);
     bee:	60 e0       	ldi	r22, 0x00	; 0
     bf0:	80 e0       	ldi	r24, 0x00	; 0
     bf2:	bb db       	rcall	.-2186   	; 0x36a <lcd_gotoxy>
     bf4:	8b ed       	ldi	r24, 0xDB	; 219
				lcd_string(buffer);
     bf6:	91 e0       	ldi	r25, 0x01	; 1
     bf8:	a3 db       	rcall	.-2234   	; 0x340 <lcd_string>
     bfa:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <unit_mode>
				last_unit_mode = unit_mode;
     bfe:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     c02:	32 c0       	rjmp	.+100    	; 0xc68 <main+0x210>
     c04:	60 e0       	ldi	r22, 0x00	; 0
				} else {
				// 단위가 같을 때는 숫자만 업데이트
				lcd_gotoxy(9, 0);
     c06:	89 e0       	ldi	r24, 0x09	; 9
     c08:	b0 db       	rcall	.-2208   	; 0x36a <lcd_gotoxy>
     c0a:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <unit_mode>
				switch(unit_mode) {
     c0e:	81 30       	cpi	r24, 0x01	; 1
     c10:	69 f0       	breq	.+26     	; 0xc2c <main+0x1d4>
     c12:	18 f0       	brcs	.+6      	; 0xc1a <main+0x1c2>
     c14:	82 30       	cpi	r24, 0x02	; 2
     c16:	c1 f0       	breq	.+48     	; 0xc48 <main+0x1f0>
     c18:	24 c0       	rjmp	.+72     	; 0xc62 <main+0x20a>
					case 0:
					dtostrf(distance_cm, 3, 1, dist_str);
     c1a:	8e 01       	movw	r16, r28
     c1c:	0f 5f       	subi	r16, 0xFF	; 255
     c1e:	1f 4f       	sbci	r17, 0xFF	; 255
     c20:	21 e0       	ldi	r18, 0x01	; 1
     c22:	43 e0       	ldi	r20, 0x03	; 3
     c24:	c5 01       	movw	r24, r10
     c26:	b4 01       	movw	r22, r8
     c28:	d2 d1       	rcall	.+932    	; 0xfce <dtostrf>
					break;
     c2a:	1b c0       	rjmp	.+54     	; 0xc62 <main+0x20a>
					case 1:
					dtostrf(distance_cm / 100.0, 3, 1, dist_str);
     c2c:	20 e0       	ldi	r18, 0x00	; 0
     c2e:	30 e0       	ldi	r19, 0x00	; 0
     c30:	48 ec       	ldi	r20, 0xC8	; 200
     c32:	52 e4       	ldi	r21, 0x42	; 66
     c34:	c5 01       	movw	r24, r10
     c36:	b4 01       	movw	r22, r8
     c38:	4a d0       	rcall	.+148    	; 0xcce <__divsf3>
     c3a:	8e 01       	movw	r16, r28
     c3c:	0f 5f       	subi	r16, 0xFF	; 255
     c3e:	1f 4f       	sbci	r17, 0xFF	; 255
     c40:	21 e0       	ldi	r18, 0x01	; 1
     c42:	43 e0       	ldi	r20, 0x03	; 3
     c44:	c4 d1       	rcall	.+904    	; 0xfce <dtostrf>
					break;
     c46:	0d c0       	rjmp	.+26     	; 0xc62 <main+0x20a>
					case 2:
					dtostrf(distance_cm / 100000.0, 3, 2, dist_str);
     c48:	20 e0       	ldi	r18, 0x00	; 0
     c4a:	30 e5       	ldi	r19, 0x50	; 80
     c4c:	43 ec       	ldi	r20, 0xC3	; 195
     c4e:	57 e4       	ldi	r21, 0x47	; 71
     c50:	c5 01       	movw	r24, r10
     c52:	b4 01       	movw	r22, r8
     c54:	3c d0       	rcall	.+120    	; 0xcce <__divsf3>
     c56:	8e 01       	movw	r16, r28
     c58:	0f 5f       	subi	r16, 0xFF	; 255
     c5a:	1f 4f       	sbci	r17, 0xFF	; 255
     c5c:	22 e0       	ldi	r18, 0x02	; 2
     c5e:	43 e0       	ldi	r20, 0x03	; 3
     c60:	b6 d1       	rcall	.+876    	; 0xfce <dtostrf>
					break;
				}
				lcd_string(dist_str);
     c62:	ce 01       	movw	r24, r28
     c64:	01 96       	adiw	r24, 0x01	; 1
     c66:	6c db       	rcall	.-2344   	; 0x340 <lcd_string>
			}
			
			// Count 값 업데이트
			lcd_gotoxy(7, 1);
     c68:	61 e0       	ldi	r22, 0x01	; 1
     c6a:	87 e0       	ldi	r24, 0x07	; 7
     c6c:	7e db       	rcall	.-2308   	; 0x36a <lcd_gotoxy>
     c6e:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <encoder_count>
			sprintf(buffer, "%ld", encoder_count);
     c72:	90 91 d8 01 	lds	r25, 0x01D8	; 0x8001d8 <encoder_count+0x1>
     c76:	a0 91 d9 01 	lds	r26, 0x01D9	; 0x8001d9 <encoder_count+0x2>
     c7a:	b0 91 da 01 	lds	r27, 0x01DA	; 0x8001da <encoder_count+0x3>
     c7e:	bf 93       	push	r27
     c80:	af 93       	push	r26
     c82:	9f 93       	push	r25
     c84:	8f 93       	push	r24
     c86:	8a eb       	ldi	r24, 0xBA	; 186
     c88:	91 e0       	ldi	r25, 0x01	; 1
     c8a:	9f 93       	push	r25
     c8c:	8f 93       	push	r24
     c8e:	8b ed       	ldi	r24, 0xDB	; 219
     c90:	91 e0       	ldi	r25, 0x01	; 1
     c92:	9f 93       	push	r25
     c94:	8f 93       	push	r24
     c96:	ba d1       	rcall	.+884    	; 0x100c <sprintf>
     c98:	8b ed       	ldi	r24, 0xDB	; 219
			lcd_string(buffer);
     c9a:	91 e0       	ldi	r25, 0x01	; 1
     c9c:	51 db       	rcall	.-2398   	; 0x340 <lcd_string>
     c9e:	81 e1       	ldi	r24, 0x11	; 17
     ca0:	91 e0       	ldi	r25, 0x01	; 1
			lcd_string("   ");  // 이전 숫자의 잔상을 지우기 위해
     ca2:	4e db       	rcall	.-2404   	; 0x340 <lcd_string>
     ca4:	61 e0       	ldi	r22, 0x01	; 1
     ca6:	8d e0       	ldi	r24, 0x0D	; 13
     ca8:	60 db       	rcall	.-2368   	; 0x36a <lcd_gotoxy>
			
			// 저장 상태 표시 ('S' 또는 공백)
			lcd_gotoxy(13, 1);
     caa:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <is_saved>
     cae:	0f b6       	in	r0, 0x3f	; 63
     cb0:	f8 94       	cli
			lcd_string(is_saved ? "S" : " ");
     cb2:	de bf       	out	0x3e, r29	; 62
     cb4:	0f be       	out	0x3f, r0	; 63
     cb6:	cd bf       	out	0x3d, r28	; 61
     cb8:	88 23       	and	r24, r24
     cba:	19 f0       	breq	.+6      	; 0xcc2 <main+0x26a>
     cbc:	88 eb       	ldi	r24, 0xB8	; 184
     cbe:	91 e0       	ldi	r25, 0x01	; 1
     cc0:	02 c0       	rjmp	.+4      	; 0xcc6 <main+0x26e>
     cc2:	83 e1       	ldi	r24, 0x13	; 19
     cc4:	91 e0       	ldi	r25, 0x01	; 1
     cc6:	3c db       	rcall	.-2440   	; 0x340 <lcd_string>
     cc8:	46 01       	movw	r8, r12
     cca:	57 01       	movw	r10, r14
     ccc:	e9 ce       	rjmp	.-558    	; 0xaa0 <main+0x48>

00000cce <__divsf3>:
     cce:	0c d0       	rcall	.+24     	; 0xce8 <__divsf3x>
     cd0:	ba c0       	rjmp	.+372    	; 0xe46 <__fp_round>
			
			last_display_update = current_time;
     cd2:	b2 d0       	rcall	.+356    	; 0xe38 <__fp_pscB>
     cd4:	40 f0       	brcs	.+16     	; 0xce6 <__divsf3+0x18>
     cd6:	a9 d0       	rcall	.+338    	; 0xe2a <__fp_pscA>
     cd8:	30 f0       	brcs	.+12     	; 0xce6 <__divsf3+0x18>
     cda:	21 f4       	brne	.+8      	; 0xce4 <__divsf3+0x16>
     cdc:	5f 3f       	cpi	r21, 0xFF	; 255
     cde:	19 f0       	breq	.+6      	; 0xce6 <__divsf3+0x18>
     ce0:	9b c0       	rjmp	.+310    	; 0xe18 <__fp_inf>
     ce2:	51 11       	cpse	r21, r1
     ce4:	e4 c0       	rjmp	.+456    	; 0xeae <__fp_szero>
     ce6:	9e c0       	rjmp	.+316    	; 0xe24 <__fp_nan>

00000ce8 <__divsf3x>:
     ce8:	bf d0       	rcall	.+382    	; 0xe68 <__fp_split3>
     cea:	98 f3       	brcs	.-26     	; 0xcd2 <__divsf3+0x4>

00000cec <__divsf3_pse>:
     cec:	99 23       	and	r25, r25
     cee:	c9 f3       	breq	.-14     	; 0xce2 <__divsf3+0x14>
     cf0:	55 23       	and	r21, r21
     cf2:	b1 f3       	breq	.-20     	; 0xce0 <__divsf3+0x12>
     cf4:	95 1b       	sub	r25, r21
     cf6:	55 0b       	sbc	r21, r21
     cf8:	bb 27       	eor	r27, r27
     cfa:	aa 27       	eor	r26, r26
     cfc:	62 17       	cp	r22, r18
     cfe:	73 07       	cpc	r23, r19
     d00:	84 07       	cpc	r24, r20
     d02:	38 f0       	brcs	.+14     	; 0xd12 <__divsf3_pse+0x26>
     d04:	9f 5f       	subi	r25, 0xFF	; 255
     d06:	5f 4f       	sbci	r21, 0xFF	; 255
     d08:	22 0f       	add	r18, r18
     d0a:	33 1f       	adc	r19, r19
     d0c:	44 1f       	adc	r20, r20
     d0e:	aa 1f       	adc	r26, r26
     d10:	a9 f3       	breq	.-22     	; 0xcfc <__divsf3_pse+0x10>
     d12:	33 d0       	rcall	.+102    	; 0xd7a <__divsf3_pse+0x8e>
     d14:	0e 2e       	mov	r0, r30
     d16:	3a f0       	brmi	.+14     	; 0xd26 <__divsf3_pse+0x3a>
     d18:	e0 e8       	ldi	r30, 0x80	; 128
     d1a:	30 d0       	rcall	.+96     	; 0xd7c <__divsf3_pse+0x90>
     d1c:	91 50       	subi	r25, 0x01	; 1
     d1e:	50 40       	sbci	r21, 0x00	; 0
     d20:	e6 95       	lsr	r30
     d22:	00 1c       	adc	r0, r0
     d24:	ca f7       	brpl	.-14     	; 0xd18 <__divsf3_pse+0x2c>
     d26:	29 d0       	rcall	.+82     	; 0xd7a <__divsf3_pse+0x8e>
     d28:	fe 2f       	mov	r31, r30
     d2a:	27 d0       	rcall	.+78     	; 0xd7a <__divsf3_pse+0x8e>
     d2c:	66 0f       	add	r22, r22
     d2e:	77 1f       	adc	r23, r23
     d30:	88 1f       	adc	r24, r24
     d32:	bb 1f       	adc	r27, r27
     d34:	26 17       	cp	r18, r22
     d36:	37 07       	cpc	r19, r23
     d38:	48 07       	cpc	r20, r24
     d3a:	ab 07       	cpc	r26, r27
     d3c:	b0 e8       	ldi	r27, 0x80	; 128
     d3e:	09 f0       	breq	.+2      	; 0xd42 <__divsf3_pse+0x56>
     d40:	bb 0b       	sbc	r27, r27
     d42:	80 2d       	mov	r24, r0
     d44:	bf 01       	movw	r22, r30
     d46:	ff 27       	eor	r31, r31
     d48:	93 58       	subi	r25, 0x83	; 131
     d4a:	5f 4f       	sbci	r21, 0xFF	; 255
     d4c:	2a f0       	brmi	.+10     	; 0xd58 <__divsf3_pse+0x6c>
     d4e:	9e 3f       	cpi	r25, 0xFE	; 254
     d50:	51 05       	cpc	r21, r1
     d52:	68 f0       	brcs	.+26     	; 0xd6e <__divsf3_pse+0x82>
     d54:	61 c0       	rjmp	.+194    	; 0xe18 <__fp_inf>
     d56:	ab c0       	rjmp	.+342    	; 0xeae <__fp_szero>
     d58:	5f 3f       	cpi	r21, 0xFF	; 255
     d5a:	ec f3       	brlt	.-6      	; 0xd56 <__divsf3_pse+0x6a>
     d5c:	98 3e       	cpi	r25, 0xE8	; 232
     d5e:	dc f3       	brlt	.-10     	; 0xd56 <__divsf3_pse+0x6a>
     d60:	86 95       	lsr	r24
     d62:	77 95       	ror	r23
     d64:	67 95       	ror	r22
     d66:	b7 95       	ror	r27
     d68:	f7 95       	ror	r31
     d6a:	9f 5f       	subi	r25, 0xFF	; 255
     d6c:	c9 f7       	brne	.-14     	; 0xd60 <__divsf3_pse+0x74>
     d6e:	88 0f       	add	r24, r24
     d70:	91 1d       	adc	r25, r1
     d72:	96 95       	lsr	r25
     d74:	87 95       	ror	r24
     d76:	97 f9       	bld	r25, 7
     d78:	08 95       	ret
     d7a:	e1 e0       	ldi	r30, 0x01	; 1
     d7c:	66 0f       	add	r22, r22
     d7e:	77 1f       	adc	r23, r23
     d80:	88 1f       	adc	r24, r24
     d82:	bb 1f       	adc	r27, r27
     d84:	62 17       	cp	r22, r18
     d86:	73 07       	cpc	r23, r19
     d88:	84 07       	cpc	r24, r20
     d8a:	ba 07       	cpc	r27, r26
     d8c:	20 f0       	brcs	.+8      	; 0xd96 <__divsf3_pse+0xaa>
     d8e:	62 1b       	sub	r22, r18
     d90:	73 0b       	sbc	r23, r19
     d92:	84 0b       	sbc	r24, r20
     d94:	ba 0b       	sbc	r27, r26
     d96:	ee 1f       	adc	r30, r30
     d98:	88 f7       	brcc	.-30     	; 0xd7c <__divsf3_pse+0x90>
     d9a:	e0 95       	com	r30
     d9c:	08 95       	ret

00000d9e <__floatunsisf>:
     d9e:	e8 94       	clt
     da0:	09 c0       	rjmp	.+18     	; 0xdb4 <__floatsisf+0x12>

00000da2 <__floatsisf>:
     da2:	97 fb       	bst	r25, 7
     da4:	3e f4       	brtc	.+14     	; 0xdb4 <__floatsisf+0x12>
     da6:	90 95       	com	r25
     da8:	80 95       	com	r24
     daa:	70 95       	com	r23
     dac:	61 95       	neg	r22
     dae:	7f 4f       	sbci	r23, 0xFF	; 255
     db0:	8f 4f       	sbci	r24, 0xFF	; 255
     db2:	9f 4f       	sbci	r25, 0xFF	; 255
     db4:	99 23       	and	r25, r25
     db6:	a9 f0       	breq	.+42     	; 0xde2 <__floatsisf+0x40>
     db8:	f9 2f       	mov	r31, r25
     dba:	96 e9       	ldi	r25, 0x96	; 150
     dbc:	bb 27       	eor	r27, r27
     dbe:	93 95       	inc	r25
     dc0:	f6 95       	lsr	r31
     dc2:	87 95       	ror	r24
     dc4:	77 95       	ror	r23
     dc6:	67 95       	ror	r22
     dc8:	b7 95       	ror	r27
     dca:	f1 11       	cpse	r31, r1
     dcc:	f8 cf       	rjmp	.-16     	; 0xdbe <__floatsisf+0x1c>
     dce:	fa f4       	brpl	.+62     	; 0xe0e <__floatsisf+0x6c>
     dd0:	bb 0f       	add	r27, r27
     dd2:	11 f4       	brne	.+4      	; 0xdd8 <__floatsisf+0x36>
     dd4:	60 ff       	sbrs	r22, 0
     dd6:	1b c0       	rjmp	.+54     	; 0xe0e <__floatsisf+0x6c>
     dd8:	6f 5f       	subi	r22, 0xFF	; 255
     dda:	7f 4f       	sbci	r23, 0xFF	; 255
     ddc:	8f 4f       	sbci	r24, 0xFF	; 255
     dde:	9f 4f       	sbci	r25, 0xFF	; 255
     de0:	16 c0       	rjmp	.+44     	; 0xe0e <__floatsisf+0x6c>
     de2:	88 23       	and	r24, r24
     de4:	11 f0       	breq	.+4      	; 0xdea <__floatsisf+0x48>
     de6:	96 e9       	ldi	r25, 0x96	; 150
     de8:	11 c0       	rjmp	.+34     	; 0xe0c <__floatsisf+0x6a>
     dea:	77 23       	and	r23, r23
     dec:	21 f0       	breq	.+8      	; 0xdf6 <__floatsisf+0x54>
     dee:	9e e8       	ldi	r25, 0x8E	; 142
     df0:	87 2f       	mov	r24, r23
     df2:	76 2f       	mov	r23, r22
     df4:	05 c0       	rjmp	.+10     	; 0xe00 <__floatsisf+0x5e>
     df6:	66 23       	and	r22, r22
     df8:	71 f0       	breq	.+28     	; 0xe16 <__floatsisf+0x74>
     dfa:	96 e8       	ldi	r25, 0x86	; 134
     dfc:	86 2f       	mov	r24, r22
     dfe:	70 e0       	ldi	r23, 0x00	; 0
     e00:	60 e0       	ldi	r22, 0x00	; 0
     e02:	2a f0       	brmi	.+10     	; 0xe0e <__floatsisf+0x6c>
     e04:	9a 95       	dec	r25
     e06:	66 0f       	add	r22, r22
     e08:	77 1f       	adc	r23, r23
     e0a:	88 1f       	adc	r24, r24
     e0c:	da f7       	brpl	.-10     	; 0xe04 <__floatsisf+0x62>
     e0e:	88 0f       	add	r24, r24
     e10:	96 95       	lsr	r25
     e12:	87 95       	ror	r24
     e14:	97 f9       	bld	r25, 7
     e16:	08 95       	ret

00000e18 <__fp_inf>:
     e18:	97 f9       	bld	r25, 7
     e1a:	9f 67       	ori	r25, 0x7F	; 127
     e1c:	80 e8       	ldi	r24, 0x80	; 128
     e1e:	70 e0       	ldi	r23, 0x00	; 0
     e20:	60 e0       	ldi	r22, 0x00	; 0
     e22:	08 95       	ret

00000e24 <__fp_nan>:
     e24:	9f ef       	ldi	r25, 0xFF	; 255
     e26:	80 ec       	ldi	r24, 0xC0	; 192
     e28:	08 95       	ret

00000e2a <__fp_pscA>:
     e2a:	00 24       	eor	r0, r0
     e2c:	0a 94       	dec	r0
     e2e:	16 16       	cp	r1, r22
     e30:	17 06       	cpc	r1, r23
     e32:	18 06       	cpc	r1, r24
     e34:	09 06       	cpc	r0, r25
     e36:	08 95       	ret

00000e38 <__fp_pscB>:
     e38:	00 24       	eor	r0, r0
     e3a:	0a 94       	dec	r0
     e3c:	12 16       	cp	r1, r18
     e3e:	13 06       	cpc	r1, r19
     e40:	14 06       	cpc	r1, r20
     e42:	05 06       	cpc	r0, r21
     e44:	08 95       	ret

00000e46 <__fp_round>:
     e46:	09 2e       	mov	r0, r25
     e48:	03 94       	inc	r0
     e4a:	00 0c       	add	r0, r0
     e4c:	11 f4       	brne	.+4      	; 0xe52 <__fp_round+0xc>
     e4e:	88 23       	and	r24, r24
     e50:	52 f0       	brmi	.+20     	; 0xe66 <__fp_round+0x20>
     e52:	bb 0f       	add	r27, r27
     e54:	40 f4       	brcc	.+16     	; 0xe66 <__fp_round+0x20>
     e56:	bf 2b       	or	r27, r31
     e58:	11 f4       	brne	.+4      	; 0xe5e <__fp_round+0x18>
     e5a:	60 ff       	sbrs	r22, 0
     e5c:	04 c0       	rjmp	.+8      	; 0xe66 <__fp_round+0x20>
     e5e:	6f 5f       	subi	r22, 0xFF	; 255
     e60:	7f 4f       	sbci	r23, 0xFF	; 255
     e62:	8f 4f       	sbci	r24, 0xFF	; 255
     e64:	9f 4f       	sbci	r25, 0xFF	; 255
     e66:	08 95       	ret

00000e68 <__fp_split3>:
     e68:	57 fd       	sbrc	r21, 7
     e6a:	90 58       	subi	r25, 0x80	; 128
     e6c:	44 0f       	add	r20, r20
     e6e:	55 1f       	adc	r21, r21
     e70:	59 f0       	breq	.+22     	; 0xe88 <__fp_splitA+0x10>
     e72:	5f 3f       	cpi	r21, 0xFF	; 255
     e74:	71 f0       	breq	.+28     	; 0xe92 <__fp_splitA+0x1a>
     e76:	47 95       	ror	r20

00000e78 <__fp_splitA>:
     e78:	88 0f       	add	r24, r24
     e7a:	97 fb       	bst	r25, 7
     e7c:	99 1f       	adc	r25, r25
     e7e:	61 f0       	breq	.+24     	; 0xe98 <__fp_splitA+0x20>
     e80:	9f 3f       	cpi	r25, 0xFF	; 255
     e82:	79 f0       	breq	.+30     	; 0xea2 <__fp_splitA+0x2a>
     e84:	87 95       	ror	r24
     e86:	08 95       	ret
     e88:	12 16       	cp	r1, r18
     e8a:	13 06       	cpc	r1, r19
     e8c:	14 06       	cpc	r1, r20
     e8e:	55 1f       	adc	r21, r21
     e90:	f2 cf       	rjmp	.-28     	; 0xe76 <__fp_split3+0xe>
     e92:	46 95       	lsr	r20
     e94:	f1 df       	rcall	.-30     	; 0xe78 <__fp_splitA>
     e96:	08 c0       	rjmp	.+16     	; 0xea8 <__fp_splitA+0x30>
     e98:	16 16       	cp	r1, r22
     e9a:	17 06       	cpc	r1, r23
     e9c:	18 06       	cpc	r1, r24
     e9e:	99 1f       	adc	r25, r25
     ea0:	f1 cf       	rjmp	.-30     	; 0xe84 <__fp_splitA+0xc>
     ea2:	86 95       	lsr	r24
     ea4:	71 05       	cpc	r23, r1
     ea6:	61 05       	cpc	r22, r1
     ea8:	08 94       	sec
     eaa:	08 95       	ret

00000eac <__fp_zero>:
     eac:	e8 94       	clt

00000eae <__fp_szero>:
     eae:	bb 27       	eor	r27, r27
     eb0:	66 27       	eor	r22, r22
     eb2:	77 27       	eor	r23, r23
     eb4:	cb 01       	movw	r24, r22
     eb6:	97 f9       	bld	r25, 7
     eb8:	08 95       	ret

00000eba <__mulsf3>:
     eba:	0b d0       	rcall	.+22     	; 0xed2 <__mulsf3x>
     ebc:	c4 cf       	rjmp	.-120    	; 0xe46 <__fp_round>
     ebe:	b5 df       	rcall	.-150    	; 0xe2a <__fp_pscA>
     ec0:	28 f0       	brcs	.+10     	; 0xecc <__mulsf3+0x12>
     ec2:	ba df       	rcall	.-140    	; 0xe38 <__fp_pscB>
     ec4:	18 f0       	brcs	.+6      	; 0xecc <__mulsf3+0x12>
     ec6:	95 23       	and	r25, r21
     ec8:	09 f0       	breq	.+2      	; 0xecc <__mulsf3+0x12>
     eca:	a6 cf       	rjmp	.-180    	; 0xe18 <__fp_inf>
     ecc:	ab cf       	rjmp	.-170    	; 0xe24 <__fp_nan>
     ece:	11 24       	eor	r1, r1
     ed0:	ee cf       	rjmp	.-36     	; 0xeae <__fp_szero>

00000ed2 <__mulsf3x>:
     ed2:	ca df       	rcall	.-108    	; 0xe68 <__fp_split3>
     ed4:	a0 f3       	brcs	.-24     	; 0xebe <__mulsf3+0x4>

00000ed6 <__mulsf3_pse>:
     ed6:	95 9f       	mul	r25, r21
     ed8:	d1 f3       	breq	.-12     	; 0xece <__mulsf3+0x14>
     eda:	95 0f       	add	r25, r21
     edc:	50 e0       	ldi	r21, 0x00	; 0
     ede:	55 1f       	adc	r21, r21
     ee0:	62 9f       	mul	r22, r18
     ee2:	f0 01       	movw	r30, r0
     ee4:	72 9f       	mul	r23, r18
     ee6:	bb 27       	eor	r27, r27
     ee8:	f0 0d       	add	r31, r0
     eea:	b1 1d       	adc	r27, r1
     eec:	63 9f       	mul	r22, r19
     eee:	aa 27       	eor	r26, r26
     ef0:	f0 0d       	add	r31, r0
     ef2:	b1 1d       	adc	r27, r1
     ef4:	aa 1f       	adc	r26, r26
     ef6:	64 9f       	mul	r22, r20
     ef8:	66 27       	eor	r22, r22
     efa:	b0 0d       	add	r27, r0
     efc:	a1 1d       	adc	r26, r1
     efe:	66 1f       	adc	r22, r22
     f00:	82 9f       	mul	r24, r18
     f02:	22 27       	eor	r18, r18
     f04:	b0 0d       	add	r27, r0
     f06:	a1 1d       	adc	r26, r1
     f08:	62 1f       	adc	r22, r18
     f0a:	73 9f       	mul	r23, r19
     f0c:	b0 0d       	add	r27, r0
     f0e:	a1 1d       	adc	r26, r1
     f10:	62 1f       	adc	r22, r18
     f12:	83 9f       	mul	r24, r19
     f14:	a0 0d       	add	r26, r0
     f16:	61 1d       	adc	r22, r1
     f18:	22 1f       	adc	r18, r18
     f1a:	74 9f       	mul	r23, r20
     f1c:	33 27       	eor	r19, r19
     f1e:	a0 0d       	add	r26, r0
     f20:	61 1d       	adc	r22, r1
     f22:	23 1f       	adc	r18, r19
     f24:	84 9f       	mul	r24, r20
     f26:	60 0d       	add	r22, r0
     f28:	21 1d       	adc	r18, r1
     f2a:	82 2f       	mov	r24, r18
     f2c:	76 2f       	mov	r23, r22
     f2e:	6a 2f       	mov	r22, r26
     f30:	11 24       	eor	r1, r1
     f32:	9f 57       	subi	r25, 0x7F	; 127
     f34:	50 40       	sbci	r21, 0x00	; 0
     f36:	8a f0       	brmi	.+34     	; 0xf5a <__mulsf3_pse+0x84>
     f38:	e1 f0       	breq	.+56     	; 0xf72 <__mulsf3_pse+0x9c>
     f3a:	88 23       	and	r24, r24
     f3c:	4a f0       	brmi	.+18     	; 0xf50 <__mulsf3_pse+0x7a>
     f3e:	ee 0f       	add	r30, r30
     f40:	ff 1f       	adc	r31, r31
     f42:	bb 1f       	adc	r27, r27
     f44:	66 1f       	adc	r22, r22
     f46:	77 1f       	adc	r23, r23
     f48:	88 1f       	adc	r24, r24
     f4a:	91 50       	subi	r25, 0x01	; 1
     f4c:	50 40       	sbci	r21, 0x00	; 0
     f4e:	a9 f7       	brne	.-22     	; 0xf3a <__mulsf3_pse+0x64>
     f50:	9e 3f       	cpi	r25, 0xFE	; 254
     f52:	51 05       	cpc	r21, r1
     f54:	70 f0       	brcs	.+28     	; 0xf72 <__mulsf3_pse+0x9c>
     f56:	60 cf       	rjmp	.-320    	; 0xe18 <__fp_inf>
     f58:	aa cf       	rjmp	.-172    	; 0xeae <__fp_szero>
     f5a:	5f 3f       	cpi	r21, 0xFF	; 255
     f5c:	ec f3       	brlt	.-6      	; 0xf58 <__mulsf3_pse+0x82>
     f5e:	98 3e       	cpi	r25, 0xE8	; 232
     f60:	dc f3       	brlt	.-10     	; 0xf58 <__mulsf3_pse+0x82>
     f62:	86 95       	lsr	r24
     f64:	77 95       	ror	r23
     f66:	67 95       	ror	r22
     f68:	b7 95       	ror	r27
     f6a:	f7 95       	ror	r31
     f6c:	e7 95       	ror	r30
     f6e:	9f 5f       	subi	r25, 0xFF	; 255
     f70:	c1 f7       	brne	.-16     	; 0xf62 <__mulsf3_pse+0x8c>
     f72:	fe 2b       	or	r31, r30
     f74:	88 0f       	add	r24, r24
     f76:	91 1d       	adc	r25, r1
     f78:	96 95       	lsr	r25
     f7a:	87 95       	ror	r24
     f7c:	97 f9       	bld	r25, 7
     f7e:	08 95       	ret

00000f80 <__divmodhi4>:
     f80:	97 fb       	bst	r25, 7
     f82:	07 2e       	mov	r0, r23
     f84:	16 f4       	brtc	.+4      	; 0xf8a <__divmodhi4+0xa>
     f86:	00 94       	com	r0
     f88:	06 d0       	rcall	.+12     	; 0xf96 <__divmodhi4_neg1>
     f8a:	77 fd       	sbrc	r23, 7
     f8c:	08 d0       	rcall	.+16     	; 0xf9e <__divmodhi4_neg2>
     f8e:	0b d0       	rcall	.+22     	; 0xfa6 <__udivmodhi4>
     f90:	07 fc       	sbrc	r0, 7
     f92:	05 d0       	rcall	.+10     	; 0xf9e <__divmodhi4_neg2>
     f94:	3e f4       	brtc	.+14     	; 0xfa4 <__divmodhi4_exit>

00000f96 <__divmodhi4_neg1>:
     f96:	90 95       	com	r25
     f98:	81 95       	neg	r24
     f9a:	9f 4f       	sbci	r25, 0xFF	; 255
     f9c:	08 95       	ret

00000f9e <__divmodhi4_neg2>:
     f9e:	70 95       	com	r23
     fa0:	61 95       	neg	r22
     fa2:	7f 4f       	sbci	r23, 0xFF	; 255

00000fa4 <__divmodhi4_exit>:
     fa4:	08 95       	ret

00000fa6 <__udivmodhi4>:
     fa6:	aa 1b       	sub	r26, r26
     fa8:	bb 1b       	sub	r27, r27
     faa:	51 e1       	ldi	r21, 0x11	; 17
     fac:	07 c0       	rjmp	.+14     	; 0xfbc <__udivmodhi4_ep>

00000fae <__udivmodhi4_loop>:
     fae:	aa 1f       	adc	r26, r26
     fb0:	bb 1f       	adc	r27, r27
     fb2:	a6 17       	cp	r26, r22
     fb4:	b7 07       	cpc	r27, r23
     fb6:	10 f0       	brcs	.+4      	; 0xfbc <__udivmodhi4_ep>
     fb8:	a6 1b       	sub	r26, r22
     fba:	b7 0b       	sbc	r27, r23

00000fbc <__udivmodhi4_ep>:
     fbc:	88 1f       	adc	r24, r24
     fbe:	99 1f       	adc	r25, r25
     fc0:	5a 95       	dec	r21
     fc2:	a9 f7       	brne	.-22     	; 0xfae <__udivmodhi4_loop>
     fc4:	80 95       	com	r24
     fc6:	90 95       	com	r25
     fc8:	bc 01       	movw	r22, r24
     fca:	cd 01       	movw	r24, r26
     fcc:	08 95       	ret

00000fce <dtostrf>:
     fce:	ef 92       	push	r14
     fd0:	0f 93       	push	r16
     fd2:	1f 93       	push	r17
     fd4:	cf 93       	push	r28
     fd6:	df 93       	push	r29
     fd8:	e8 01       	movw	r28, r16
     fda:	47 fd       	sbrc	r20, 7
     fdc:	02 c0       	rjmp	.+4      	; 0xfe2 <dtostrf+0x14>
     fde:	34 e0       	ldi	r19, 0x04	; 4
     fe0:	01 c0       	rjmp	.+2      	; 0xfe4 <dtostrf+0x16>
     fe2:	34 e1       	ldi	r19, 0x14	; 20
     fe4:	04 2e       	mov	r0, r20
     fe6:	00 0c       	add	r0, r0
     fe8:	55 0b       	sbc	r21, r21
     fea:	57 ff       	sbrs	r21, 7
     fec:	03 c0       	rjmp	.+6      	; 0xff4 <dtostrf+0x26>
     fee:	51 95       	neg	r21
     ff0:	41 95       	neg	r20
     ff2:	51 09       	sbc	r21, r1
     ff4:	e3 2e       	mov	r14, r19
     ff6:	02 2f       	mov	r16, r18
     ff8:	24 2f       	mov	r18, r20
     ffa:	ae 01       	movw	r20, r28
     ffc:	32 d2       	rcall	.+1124   	; 0x1462 <dtoa_prf>
     ffe:	ce 01       	movw	r24, r28
    1000:	df 91       	pop	r29
    1002:	cf 91       	pop	r28
    1004:	1f 91       	pop	r17
    1006:	0f 91       	pop	r16
    1008:	ef 90       	pop	r14
    100a:	08 95       	ret

0000100c <sprintf>:
    100c:	0f 93       	push	r16
    100e:	1f 93       	push	r17
    1010:	cf 93       	push	r28
    1012:	df 93       	push	r29
    1014:	cd b7       	in	r28, 0x3d	; 61
    1016:	de b7       	in	r29, 0x3e	; 62
    1018:	2e 97       	sbiw	r28, 0x0e	; 14
    101a:	0f b6       	in	r0, 0x3f	; 63
    101c:	f8 94       	cli
    101e:	de bf       	out	0x3e, r29	; 62
    1020:	0f be       	out	0x3f, r0	; 63
    1022:	cd bf       	out	0x3d, r28	; 61
    1024:	0d 89       	ldd	r16, Y+21	; 0x15
    1026:	1e 89       	ldd	r17, Y+22	; 0x16
    1028:	86 e0       	ldi	r24, 0x06	; 6
    102a:	8c 83       	std	Y+4, r24	; 0x04
    102c:	1a 83       	std	Y+2, r17	; 0x02
    102e:	09 83       	std	Y+1, r16	; 0x01
    1030:	8f ef       	ldi	r24, 0xFF	; 255
    1032:	9f e7       	ldi	r25, 0x7F	; 127
    1034:	9e 83       	std	Y+6, r25	; 0x06
    1036:	8d 83       	std	Y+5, r24	; 0x05
    1038:	ae 01       	movw	r20, r28
    103a:	47 5e       	subi	r20, 0xE7	; 231
    103c:	5f 4f       	sbci	r21, 0xFF	; 255
    103e:	6f 89       	ldd	r22, Y+23	; 0x17
    1040:	78 8d       	ldd	r23, Y+24	; 0x18
    1042:	ce 01       	movw	r24, r28
    1044:	01 96       	adiw	r24, 0x01	; 1
    1046:	10 d0       	rcall	.+32     	; 0x1068 <vfprintf>
    1048:	ef 81       	ldd	r30, Y+7	; 0x07
    104a:	f8 85       	ldd	r31, Y+8	; 0x08
    104c:	e0 0f       	add	r30, r16
    104e:	f1 1f       	adc	r31, r17
    1050:	10 82       	st	Z, r1
    1052:	2e 96       	adiw	r28, 0x0e	; 14
    1054:	0f b6       	in	r0, 0x3f	; 63
    1056:	f8 94       	cli
    1058:	de bf       	out	0x3e, r29	; 62
    105a:	0f be       	out	0x3f, r0	; 63
    105c:	cd bf       	out	0x3d, r28	; 61
    105e:	df 91       	pop	r29
    1060:	cf 91       	pop	r28
    1062:	1f 91       	pop	r17
    1064:	0f 91       	pop	r16
    1066:	08 95       	ret

00001068 <vfprintf>:
    1068:	2f 92       	push	r2
    106a:	3f 92       	push	r3
    106c:	4f 92       	push	r4
    106e:	5f 92       	push	r5
    1070:	6f 92       	push	r6
    1072:	7f 92       	push	r7
    1074:	8f 92       	push	r8
    1076:	9f 92       	push	r9
    1078:	af 92       	push	r10
    107a:	bf 92       	push	r11
    107c:	cf 92       	push	r12
    107e:	df 92       	push	r13
    1080:	ef 92       	push	r14
    1082:	ff 92       	push	r15
    1084:	0f 93       	push	r16
    1086:	1f 93       	push	r17
    1088:	cf 93       	push	r28
    108a:	df 93       	push	r29
    108c:	cd b7       	in	r28, 0x3d	; 61
    108e:	de b7       	in	r29, 0x3e	; 62
    1090:	2b 97       	sbiw	r28, 0x0b	; 11
    1092:	0f b6       	in	r0, 0x3f	; 63
    1094:	f8 94       	cli
    1096:	de bf       	out	0x3e, r29	; 62
    1098:	0f be       	out	0x3f, r0	; 63
    109a:	cd bf       	out	0x3d, r28	; 61
    109c:	6c 01       	movw	r12, r24
    109e:	7b 01       	movw	r14, r22
    10a0:	8a 01       	movw	r16, r20
    10a2:	fc 01       	movw	r30, r24
    10a4:	17 82       	std	Z+7, r1	; 0x07
    10a6:	16 82       	std	Z+6, r1	; 0x06
    10a8:	83 81       	ldd	r24, Z+3	; 0x03
    10aa:	81 ff       	sbrs	r24, 1
    10ac:	bf c1       	rjmp	.+894    	; 0x142c <__stack+0x32d>
    10ae:	ce 01       	movw	r24, r28
    10b0:	01 96       	adiw	r24, 0x01	; 1
    10b2:	3c 01       	movw	r6, r24
    10b4:	f6 01       	movw	r30, r12
    10b6:	93 81       	ldd	r25, Z+3	; 0x03
    10b8:	f7 01       	movw	r30, r14
    10ba:	93 fd       	sbrc	r25, 3
    10bc:	85 91       	lpm	r24, Z+
    10be:	93 ff       	sbrs	r25, 3
    10c0:	81 91       	ld	r24, Z+
    10c2:	7f 01       	movw	r14, r30
    10c4:	88 23       	and	r24, r24
    10c6:	09 f4       	brne	.+2      	; 0x10ca <vfprintf+0x62>
    10c8:	ad c1       	rjmp	.+858    	; 0x1424 <__stack+0x325>
    10ca:	85 32       	cpi	r24, 0x25	; 37
    10cc:	39 f4       	brne	.+14     	; 0x10dc <vfprintf+0x74>
    10ce:	93 fd       	sbrc	r25, 3
    10d0:	85 91       	lpm	r24, Z+
    10d2:	93 ff       	sbrs	r25, 3
    10d4:	81 91       	ld	r24, Z+
    10d6:	7f 01       	movw	r14, r30
    10d8:	85 32       	cpi	r24, 0x25	; 37
    10da:	21 f4       	brne	.+8      	; 0x10e4 <vfprintf+0x7c>
    10dc:	b6 01       	movw	r22, r12
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	24 d4       	rcall	.+2120   	; 0x192a <fputc>
    10e2:	e8 cf       	rjmp	.-48     	; 0x10b4 <vfprintf+0x4c>
    10e4:	91 2c       	mov	r9, r1
    10e6:	21 2c       	mov	r2, r1
    10e8:	31 2c       	mov	r3, r1
    10ea:	ff e1       	ldi	r31, 0x1F	; 31
    10ec:	f3 15       	cp	r31, r3
    10ee:	d8 f0       	brcs	.+54     	; 0x1126 <__stack+0x27>
    10f0:	8b 32       	cpi	r24, 0x2B	; 43
    10f2:	79 f0       	breq	.+30     	; 0x1112 <__stack+0x13>
    10f4:	38 f4       	brcc	.+14     	; 0x1104 <__stack+0x5>
    10f6:	80 32       	cpi	r24, 0x20	; 32
    10f8:	79 f0       	breq	.+30     	; 0x1118 <__stack+0x19>
    10fa:	83 32       	cpi	r24, 0x23	; 35
    10fc:	a1 f4       	brne	.+40     	; 0x1126 <__stack+0x27>
    10fe:	23 2d       	mov	r18, r3
    1100:	20 61       	ori	r18, 0x10	; 16
    1102:	1d c0       	rjmp	.+58     	; 0x113e <__stack+0x3f>
    1104:	8d 32       	cpi	r24, 0x2D	; 45
    1106:	61 f0       	breq	.+24     	; 0x1120 <__stack+0x21>
    1108:	80 33       	cpi	r24, 0x30	; 48
    110a:	69 f4       	brne	.+26     	; 0x1126 <__stack+0x27>
    110c:	23 2d       	mov	r18, r3
    110e:	21 60       	ori	r18, 0x01	; 1
    1110:	16 c0       	rjmp	.+44     	; 0x113e <__stack+0x3f>
    1112:	83 2d       	mov	r24, r3
    1114:	82 60       	ori	r24, 0x02	; 2
    1116:	38 2e       	mov	r3, r24
    1118:	e3 2d       	mov	r30, r3
    111a:	e4 60       	ori	r30, 0x04	; 4
    111c:	3e 2e       	mov	r3, r30
    111e:	2a c0       	rjmp	.+84     	; 0x1174 <__stack+0x75>
    1120:	f3 2d       	mov	r31, r3
    1122:	f8 60       	ori	r31, 0x08	; 8
    1124:	1d c0       	rjmp	.+58     	; 0x1160 <__stack+0x61>
    1126:	37 fc       	sbrc	r3, 7
    1128:	2d c0       	rjmp	.+90     	; 0x1184 <__stack+0x85>
    112a:	20 ed       	ldi	r18, 0xD0	; 208
    112c:	28 0f       	add	r18, r24
    112e:	2a 30       	cpi	r18, 0x0A	; 10
    1130:	40 f0       	brcs	.+16     	; 0x1142 <__stack+0x43>
    1132:	8e 32       	cpi	r24, 0x2E	; 46
    1134:	b9 f4       	brne	.+46     	; 0x1164 <__stack+0x65>
    1136:	36 fc       	sbrc	r3, 6
    1138:	75 c1       	rjmp	.+746    	; 0x1424 <__stack+0x325>
    113a:	23 2d       	mov	r18, r3
    113c:	20 64       	ori	r18, 0x40	; 64
    113e:	32 2e       	mov	r3, r18
    1140:	19 c0       	rjmp	.+50     	; 0x1174 <__stack+0x75>
    1142:	36 fe       	sbrs	r3, 6
    1144:	06 c0       	rjmp	.+12     	; 0x1152 <__stack+0x53>
    1146:	8a e0       	ldi	r24, 0x0A	; 10
    1148:	98 9e       	mul	r9, r24
    114a:	20 0d       	add	r18, r0
    114c:	11 24       	eor	r1, r1
    114e:	92 2e       	mov	r9, r18
    1150:	11 c0       	rjmp	.+34     	; 0x1174 <__stack+0x75>
    1152:	ea e0       	ldi	r30, 0x0A	; 10
    1154:	2e 9e       	mul	r2, r30
    1156:	20 0d       	add	r18, r0
    1158:	11 24       	eor	r1, r1
    115a:	22 2e       	mov	r2, r18
    115c:	f3 2d       	mov	r31, r3
    115e:	f0 62       	ori	r31, 0x20	; 32
    1160:	3f 2e       	mov	r3, r31
    1162:	08 c0       	rjmp	.+16     	; 0x1174 <__stack+0x75>
    1164:	8c 36       	cpi	r24, 0x6C	; 108
    1166:	21 f4       	brne	.+8      	; 0x1170 <__stack+0x71>
    1168:	83 2d       	mov	r24, r3
    116a:	80 68       	ori	r24, 0x80	; 128
    116c:	38 2e       	mov	r3, r24
    116e:	02 c0       	rjmp	.+4      	; 0x1174 <__stack+0x75>
    1170:	88 36       	cpi	r24, 0x68	; 104
    1172:	41 f4       	brne	.+16     	; 0x1184 <__stack+0x85>
    1174:	f7 01       	movw	r30, r14
    1176:	93 fd       	sbrc	r25, 3
    1178:	85 91       	lpm	r24, Z+
    117a:	93 ff       	sbrs	r25, 3
    117c:	81 91       	ld	r24, Z+
    117e:	7f 01       	movw	r14, r30
    1180:	81 11       	cpse	r24, r1
    1182:	b3 cf       	rjmp	.-154    	; 0x10ea <vfprintf+0x82>
    1184:	98 2f       	mov	r25, r24
    1186:	9f 7d       	andi	r25, 0xDF	; 223
    1188:	95 54       	subi	r25, 0x45	; 69
    118a:	93 30       	cpi	r25, 0x03	; 3
    118c:	28 f4       	brcc	.+10     	; 0x1198 <__stack+0x99>
    118e:	0c 5f       	subi	r16, 0xFC	; 252
    1190:	1f 4f       	sbci	r17, 0xFF	; 255
    1192:	9f e3       	ldi	r25, 0x3F	; 63
    1194:	99 83       	std	Y+1, r25	; 0x01
    1196:	0d c0       	rjmp	.+26     	; 0x11b2 <__stack+0xb3>
    1198:	83 36       	cpi	r24, 0x63	; 99
    119a:	31 f0       	breq	.+12     	; 0x11a8 <__stack+0xa9>
    119c:	83 37       	cpi	r24, 0x73	; 115
    119e:	71 f0       	breq	.+28     	; 0x11bc <__stack+0xbd>
    11a0:	83 35       	cpi	r24, 0x53	; 83
    11a2:	09 f0       	breq	.+2      	; 0x11a6 <__stack+0xa7>
    11a4:	55 c0       	rjmp	.+170    	; 0x1250 <__stack+0x151>
    11a6:	20 c0       	rjmp	.+64     	; 0x11e8 <__stack+0xe9>
    11a8:	f8 01       	movw	r30, r16
    11aa:	80 81       	ld	r24, Z
    11ac:	89 83       	std	Y+1, r24	; 0x01
    11ae:	0e 5f       	subi	r16, 0xFE	; 254
    11b0:	1f 4f       	sbci	r17, 0xFF	; 255
    11b2:	88 24       	eor	r8, r8
    11b4:	83 94       	inc	r8
    11b6:	91 2c       	mov	r9, r1
    11b8:	53 01       	movw	r10, r6
    11ba:	12 c0       	rjmp	.+36     	; 0x11e0 <__stack+0xe1>
    11bc:	28 01       	movw	r4, r16
    11be:	f2 e0       	ldi	r31, 0x02	; 2
    11c0:	4f 0e       	add	r4, r31
    11c2:	51 1c       	adc	r5, r1
    11c4:	f8 01       	movw	r30, r16
    11c6:	a0 80       	ld	r10, Z
    11c8:	b1 80       	ldd	r11, Z+1	; 0x01
    11ca:	36 fe       	sbrs	r3, 6
    11cc:	03 c0       	rjmp	.+6      	; 0x11d4 <__stack+0xd5>
    11ce:	69 2d       	mov	r22, r9
    11d0:	70 e0       	ldi	r23, 0x00	; 0
    11d2:	02 c0       	rjmp	.+4      	; 0x11d8 <__stack+0xd9>
    11d4:	6f ef       	ldi	r22, 0xFF	; 255
    11d6:	7f ef       	ldi	r23, 0xFF	; 255
    11d8:	c5 01       	movw	r24, r10
    11da:	9c d3       	rcall	.+1848   	; 0x1914 <strnlen>
    11dc:	4c 01       	movw	r8, r24
    11de:	82 01       	movw	r16, r4
    11e0:	f3 2d       	mov	r31, r3
    11e2:	ff 77       	andi	r31, 0x7F	; 127
    11e4:	3f 2e       	mov	r3, r31
    11e6:	15 c0       	rjmp	.+42     	; 0x1212 <__stack+0x113>
    11e8:	28 01       	movw	r4, r16
    11ea:	22 e0       	ldi	r18, 0x02	; 2
    11ec:	42 0e       	add	r4, r18
    11ee:	51 1c       	adc	r5, r1
    11f0:	f8 01       	movw	r30, r16
    11f2:	a0 80       	ld	r10, Z
    11f4:	b1 80       	ldd	r11, Z+1	; 0x01
    11f6:	36 fe       	sbrs	r3, 6
    11f8:	03 c0       	rjmp	.+6      	; 0x1200 <__stack+0x101>
    11fa:	69 2d       	mov	r22, r9
    11fc:	70 e0       	ldi	r23, 0x00	; 0
    11fe:	02 c0       	rjmp	.+4      	; 0x1204 <__stack+0x105>
    1200:	6f ef       	ldi	r22, 0xFF	; 255
    1202:	7f ef       	ldi	r23, 0xFF	; 255
    1204:	c5 01       	movw	r24, r10
    1206:	7b d3       	rcall	.+1782   	; 0x18fe <strnlen_P>
    1208:	4c 01       	movw	r8, r24
    120a:	f3 2d       	mov	r31, r3
    120c:	f0 68       	ori	r31, 0x80	; 128
    120e:	3f 2e       	mov	r3, r31
    1210:	82 01       	movw	r16, r4
    1212:	33 fc       	sbrc	r3, 3
    1214:	19 c0       	rjmp	.+50     	; 0x1248 <__stack+0x149>
    1216:	82 2d       	mov	r24, r2
    1218:	90 e0       	ldi	r25, 0x00	; 0
    121a:	88 16       	cp	r8, r24
    121c:	99 06       	cpc	r9, r25
    121e:	a0 f4       	brcc	.+40     	; 0x1248 <__stack+0x149>
    1220:	b6 01       	movw	r22, r12
    1222:	80 e2       	ldi	r24, 0x20	; 32
    1224:	90 e0       	ldi	r25, 0x00	; 0
    1226:	81 d3       	rcall	.+1794   	; 0x192a <fputc>
    1228:	2a 94       	dec	r2
    122a:	f5 cf       	rjmp	.-22     	; 0x1216 <__stack+0x117>
    122c:	f5 01       	movw	r30, r10
    122e:	37 fc       	sbrc	r3, 7
    1230:	85 91       	lpm	r24, Z+
    1232:	37 fe       	sbrs	r3, 7
    1234:	81 91       	ld	r24, Z+
    1236:	5f 01       	movw	r10, r30
    1238:	b6 01       	movw	r22, r12
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	76 d3       	rcall	.+1772   	; 0x192a <fputc>
    123e:	21 10       	cpse	r2, r1
    1240:	2a 94       	dec	r2
    1242:	21 e0       	ldi	r18, 0x01	; 1
    1244:	82 1a       	sub	r8, r18
    1246:	91 08       	sbc	r9, r1
    1248:	81 14       	cp	r8, r1
    124a:	91 04       	cpc	r9, r1
    124c:	79 f7       	brne	.-34     	; 0x122c <__stack+0x12d>
    124e:	e1 c0       	rjmp	.+450    	; 0x1412 <__stack+0x313>
    1250:	84 36       	cpi	r24, 0x64	; 100
    1252:	11 f0       	breq	.+4      	; 0x1258 <__stack+0x159>
    1254:	89 36       	cpi	r24, 0x69	; 105
    1256:	39 f5       	brne	.+78     	; 0x12a6 <__stack+0x1a7>
    1258:	f8 01       	movw	r30, r16
    125a:	37 fe       	sbrs	r3, 7
    125c:	07 c0       	rjmp	.+14     	; 0x126c <__stack+0x16d>
    125e:	60 81       	ld	r22, Z
    1260:	71 81       	ldd	r23, Z+1	; 0x01
    1262:	82 81       	ldd	r24, Z+2	; 0x02
    1264:	93 81       	ldd	r25, Z+3	; 0x03
    1266:	0c 5f       	subi	r16, 0xFC	; 252
    1268:	1f 4f       	sbci	r17, 0xFF	; 255
    126a:	08 c0       	rjmp	.+16     	; 0x127c <__stack+0x17d>
    126c:	60 81       	ld	r22, Z
    126e:	71 81       	ldd	r23, Z+1	; 0x01
    1270:	07 2e       	mov	r0, r23
    1272:	00 0c       	add	r0, r0
    1274:	88 0b       	sbc	r24, r24
    1276:	99 0b       	sbc	r25, r25
    1278:	0e 5f       	subi	r16, 0xFE	; 254
    127a:	1f 4f       	sbci	r17, 0xFF	; 255
    127c:	f3 2d       	mov	r31, r3
    127e:	ff 76       	andi	r31, 0x6F	; 111
    1280:	3f 2e       	mov	r3, r31
    1282:	97 ff       	sbrs	r25, 7
    1284:	09 c0       	rjmp	.+18     	; 0x1298 <__stack+0x199>
    1286:	90 95       	com	r25
    1288:	80 95       	com	r24
    128a:	70 95       	com	r23
    128c:	61 95       	neg	r22
    128e:	7f 4f       	sbci	r23, 0xFF	; 255
    1290:	8f 4f       	sbci	r24, 0xFF	; 255
    1292:	9f 4f       	sbci	r25, 0xFF	; 255
    1294:	f0 68       	ori	r31, 0x80	; 128
    1296:	3f 2e       	mov	r3, r31
    1298:	2a e0       	ldi	r18, 0x0A	; 10
    129a:	30 e0       	ldi	r19, 0x00	; 0
    129c:	a3 01       	movw	r20, r6
    129e:	81 d3       	rcall	.+1794   	; 0x19a2 <__ultoa_invert>
    12a0:	88 2e       	mov	r8, r24
    12a2:	86 18       	sub	r8, r6
    12a4:	44 c0       	rjmp	.+136    	; 0x132e <__stack+0x22f>
    12a6:	85 37       	cpi	r24, 0x75	; 117
    12a8:	31 f4       	brne	.+12     	; 0x12b6 <__stack+0x1b7>
    12aa:	23 2d       	mov	r18, r3
    12ac:	2f 7e       	andi	r18, 0xEF	; 239
    12ae:	b2 2e       	mov	r11, r18
    12b0:	2a e0       	ldi	r18, 0x0A	; 10
    12b2:	30 e0       	ldi	r19, 0x00	; 0
    12b4:	25 c0       	rjmp	.+74     	; 0x1300 <__stack+0x201>
    12b6:	93 2d       	mov	r25, r3
    12b8:	99 7f       	andi	r25, 0xF9	; 249
    12ba:	b9 2e       	mov	r11, r25
    12bc:	8f 36       	cpi	r24, 0x6F	; 111
    12be:	c1 f0       	breq	.+48     	; 0x12f0 <__stack+0x1f1>
    12c0:	18 f4       	brcc	.+6      	; 0x12c8 <__stack+0x1c9>
    12c2:	88 35       	cpi	r24, 0x58	; 88
    12c4:	79 f0       	breq	.+30     	; 0x12e4 <__stack+0x1e5>
    12c6:	ae c0       	rjmp	.+348    	; 0x1424 <__stack+0x325>
    12c8:	80 37       	cpi	r24, 0x70	; 112
    12ca:	19 f0       	breq	.+6      	; 0x12d2 <__stack+0x1d3>
    12cc:	88 37       	cpi	r24, 0x78	; 120
    12ce:	21 f0       	breq	.+8      	; 0x12d8 <__stack+0x1d9>
    12d0:	a9 c0       	rjmp	.+338    	; 0x1424 <__stack+0x325>
    12d2:	e9 2f       	mov	r30, r25
    12d4:	e0 61       	ori	r30, 0x10	; 16
    12d6:	be 2e       	mov	r11, r30
    12d8:	b4 fe       	sbrs	r11, 4
    12da:	0d c0       	rjmp	.+26     	; 0x12f6 <__stack+0x1f7>
    12dc:	fb 2d       	mov	r31, r11
    12de:	f4 60       	ori	r31, 0x04	; 4
    12e0:	bf 2e       	mov	r11, r31
    12e2:	09 c0       	rjmp	.+18     	; 0x12f6 <__stack+0x1f7>
    12e4:	34 fe       	sbrs	r3, 4
    12e6:	0a c0       	rjmp	.+20     	; 0x12fc <__stack+0x1fd>
    12e8:	29 2f       	mov	r18, r25
    12ea:	26 60       	ori	r18, 0x06	; 6
    12ec:	b2 2e       	mov	r11, r18
    12ee:	06 c0       	rjmp	.+12     	; 0x12fc <__stack+0x1fd>
    12f0:	28 e0       	ldi	r18, 0x08	; 8
    12f2:	30 e0       	ldi	r19, 0x00	; 0
    12f4:	05 c0       	rjmp	.+10     	; 0x1300 <__stack+0x201>
    12f6:	20 e1       	ldi	r18, 0x10	; 16
    12f8:	30 e0       	ldi	r19, 0x00	; 0
    12fa:	02 c0       	rjmp	.+4      	; 0x1300 <__stack+0x201>
    12fc:	20 e1       	ldi	r18, 0x10	; 16
    12fe:	32 e0       	ldi	r19, 0x02	; 2
    1300:	f8 01       	movw	r30, r16
    1302:	b7 fe       	sbrs	r11, 7
    1304:	07 c0       	rjmp	.+14     	; 0x1314 <__stack+0x215>
    1306:	60 81       	ld	r22, Z
    1308:	71 81       	ldd	r23, Z+1	; 0x01
    130a:	82 81       	ldd	r24, Z+2	; 0x02
    130c:	93 81       	ldd	r25, Z+3	; 0x03
    130e:	0c 5f       	subi	r16, 0xFC	; 252
    1310:	1f 4f       	sbci	r17, 0xFF	; 255
    1312:	06 c0       	rjmp	.+12     	; 0x1320 <__stack+0x221>
    1314:	60 81       	ld	r22, Z
    1316:	71 81       	ldd	r23, Z+1	; 0x01
    1318:	80 e0       	ldi	r24, 0x00	; 0
    131a:	90 e0       	ldi	r25, 0x00	; 0
    131c:	0e 5f       	subi	r16, 0xFE	; 254
    131e:	1f 4f       	sbci	r17, 0xFF	; 255
    1320:	a3 01       	movw	r20, r6
    1322:	3f d3       	rcall	.+1662   	; 0x19a2 <__ultoa_invert>
    1324:	88 2e       	mov	r8, r24
    1326:	86 18       	sub	r8, r6
    1328:	fb 2d       	mov	r31, r11
    132a:	ff 77       	andi	r31, 0x7F	; 127
    132c:	3f 2e       	mov	r3, r31
    132e:	36 fe       	sbrs	r3, 6
    1330:	0d c0       	rjmp	.+26     	; 0x134c <__stack+0x24d>
    1332:	23 2d       	mov	r18, r3
    1334:	2e 7f       	andi	r18, 0xFE	; 254
    1336:	a2 2e       	mov	r10, r18
    1338:	89 14       	cp	r8, r9
    133a:	58 f4       	brcc	.+22     	; 0x1352 <__stack+0x253>
    133c:	34 fe       	sbrs	r3, 4
    133e:	0b c0       	rjmp	.+22     	; 0x1356 <__stack+0x257>
    1340:	32 fc       	sbrc	r3, 2
    1342:	09 c0       	rjmp	.+18     	; 0x1356 <__stack+0x257>
    1344:	83 2d       	mov	r24, r3
    1346:	8e 7e       	andi	r24, 0xEE	; 238
    1348:	a8 2e       	mov	r10, r24
    134a:	05 c0       	rjmp	.+10     	; 0x1356 <__stack+0x257>
    134c:	b8 2c       	mov	r11, r8
    134e:	a3 2c       	mov	r10, r3
    1350:	03 c0       	rjmp	.+6      	; 0x1358 <__stack+0x259>
    1352:	b8 2c       	mov	r11, r8
    1354:	01 c0       	rjmp	.+2      	; 0x1358 <__stack+0x259>
    1356:	b9 2c       	mov	r11, r9
    1358:	a4 fe       	sbrs	r10, 4
    135a:	0f c0       	rjmp	.+30     	; 0x137a <__stack+0x27b>
    135c:	fe 01       	movw	r30, r28
    135e:	e8 0d       	add	r30, r8
    1360:	f1 1d       	adc	r31, r1
    1362:	80 81       	ld	r24, Z
    1364:	80 33       	cpi	r24, 0x30	; 48
    1366:	21 f4       	brne	.+8      	; 0x1370 <__stack+0x271>
    1368:	9a 2d       	mov	r25, r10
    136a:	99 7e       	andi	r25, 0xE9	; 233
    136c:	a9 2e       	mov	r10, r25
    136e:	09 c0       	rjmp	.+18     	; 0x1382 <__stack+0x283>
    1370:	a2 fe       	sbrs	r10, 2
    1372:	06 c0       	rjmp	.+12     	; 0x1380 <__stack+0x281>
    1374:	b3 94       	inc	r11
    1376:	b3 94       	inc	r11
    1378:	04 c0       	rjmp	.+8      	; 0x1382 <__stack+0x283>
    137a:	8a 2d       	mov	r24, r10
    137c:	86 78       	andi	r24, 0x86	; 134
    137e:	09 f0       	breq	.+2      	; 0x1382 <__stack+0x283>
    1380:	b3 94       	inc	r11
    1382:	a3 fc       	sbrc	r10, 3
    1384:	10 c0       	rjmp	.+32     	; 0x13a6 <__stack+0x2a7>
    1386:	a0 fe       	sbrs	r10, 0
    1388:	06 c0       	rjmp	.+12     	; 0x1396 <__stack+0x297>
    138a:	b2 14       	cp	r11, r2
    138c:	80 f4       	brcc	.+32     	; 0x13ae <__stack+0x2af>
    138e:	28 0c       	add	r2, r8
    1390:	92 2c       	mov	r9, r2
    1392:	9b 18       	sub	r9, r11
    1394:	0d c0       	rjmp	.+26     	; 0x13b0 <__stack+0x2b1>
    1396:	b2 14       	cp	r11, r2
    1398:	58 f4       	brcc	.+22     	; 0x13b0 <__stack+0x2b1>
    139a:	b6 01       	movw	r22, r12
    139c:	80 e2       	ldi	r24, 0x20	; 32
    139e:	90 e0       	ldi	r25, 0x00	; 0
    13a0:	c4 d2       	rcall	.+1416   	; 0x192a <fputc>
    13a2:	b3 94       	inc	r11
    13a4:	f8 cf       	rjmp	.-16     	; 0x1396 <__stack+0x297>
    13a6:	b2 14       	cp	r11, r2
    13a8:	18 f4       	brcc	.+6      	; 0x13b0 <__stack+0x2b1>
    13aa:	2b 18       	sub	r2, r11
    13ac:	02 c0       	rjmp	.+4      	; 0x13b2 <__stack+0x2b3>
    13ae:	98 2c       	mov	r9, r8
    13b0:	21 2c       	mov	r2, r1
    13b2:	a4 fe       	sbrs	r10, 4
    13b4:	0f c0       	rjmp	.+30     	; 0x13d4 <__stack+0x2d5>
    13b6:	b6 01       	movw	r22, r12
    13b8:	80 e3       	ldi	r24, 0x30	; 48
    13ba:	90 e0       	ldi	r25, 0x00	; 0
    13bc:	b6 d2       	rcall	.+1388   	; 0x192a <fputc>
    13be:	a2 fe       	sbrs	r10, 2
    13c0:	16 c0       	rjmp	.+44     	; 0x13ee <__stack+0x2ef>
    13c2:	a1 fc       	sbrc	r10, 1
    13c4:	03 c0       	rjmp	.+6      	; 0x13cc <__stack+0x2cd>
    13c6:	88 e7       	ldi	r24, 0x78	; 120
    13c8:	90 e0       	ldi	r25, 0x00	; 0
    13ca:	02 c0       	rjmp	.+4      	; 0x13d0 <__stack+0x2d1>
    13cc:	88 e5       	ldi	r24, 0x58	; 88
    13ce:	90 e0       	ldi	r25, 0x00	; 0
    13d0:	b6 01       	movw	r22, r12
    13d2:	0c c0       	rjmp	.+24     	; 0x13ec <__stack+0x2ed>
    13d4:	8a 2d       	mov	r24, r10
    13d6:	86 78       	andi	r24, 0x86	; 134
    13d8:	51 f0       	breq	.+20     	; 0x13ee <__stack+0x2ef>
    13da:	a1 fe       	sbrs	r10, 1
    13dc:	02 c0       	rjmp	.+4      	; 0x13e2 <__stack+0x2e3>
    13de:	8b e2       	ldi	r24, 0x2B	; 43
    13e0:	01 c0       	rjmp	.+2      	; 0x13e4 <__stack+0x2e5>
    13e2:	80 e2       	ldi	r24, 0x20	; 32
    13e4:	a7 fc       	sbrc	r10, 7
    13e6:	8d e2       	ldi	r24, 0x2D	; 45
    13e8:	b6 01       	movw	r22, r12
    13ea:	90 e0       	ldi	r25, 0x00	; 0
    13ec:	9e d2       	rcall	.+1340   	; 0x192a <fputc>
    13ee:	89 14       	cp	r8, r9
    13f0:	30 f4       	brcc	.+12     	; 0x13fe <__stack+0x2ff>
    13f2:	b6 01       	movw	r22, r12
    13f4:	80 e3       	ldi	r24, 0x30	; 48
    13f6:	90 e0       	ldi	r25, 0x00	; 0
    13f8:	98 d2       	rcall	.+1328   	; 0x192a <fputc>
    13fa:	9a 94       	dec	r9
    13fc:	f8 cf       	rjmp	.-16     	; 0x13ee <__stack+0x2ef>
    13fe:	8a 94       	dec	r8
    1400:	f3 01       	movw	r30, r6
    1402:	e8 0d       	add	r30, r8
    1404:	f1 1d       	adc	r31, r1
    1406:	80 81       	ld	r24, Z
    1408:	b6 01       	movw	r22, r12
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	8e d2       	rcall	.+1308   	; 0x192a <fputc>
    140e:	81 10       	cpse	r8, r1
    1410:	f6 cf       	rjmp	.-20     	; 0x13fe <__stack+0x2ff>
    1412:	22 20       	and	r2, r2
    1414:	09 f4       	brne	.+2      	; 0x1418 <__stack+0x319>
    1416:	4e ce       	rjmp	.-868    	; 0x10b4 <vfprintf+0x4c>
    1418:	b6 01       	movw	r22, r12
    141a:	80 e2       	ldi	r24, 0x20	; 32
    141c:	90 e0       	ldi	r25, 0x00	; 0
    141e:	85 d2       	rcall	.+1290   	; 0x192a <fputc>
    1420:	2a 94       	dec	r2
    1422:	f7 cf       	rjmp	.-18     	; 0x1412 <__stack+0x313>
    1424:	f6 01       	movw	r30, r12
    1426:	86 81       	ldd	r24, Z+6	; 0x06
    1428:	97 81       	ldd	r25, Z+7	; 0x07
    142a:	02 c0       	rjmp	.+4      	; 0x1430 <__stack+0x331>
    142c:	8f ef       	ldi	r24, 0xFF	; 255
    142e:	9f ef       	ldi	r25, 0xFF	; 255
    1430:	2b 96       	adiw	r28, 0x0b	; 11
    1432:	0f b6       	in	r0, 0x3f	; 63
    1434:	f8 94       	cli
    1436:	de bf       	out	0x3e, r29	; 62
    1438:	0f be       	out	0x3f, r0	; 63
    143a:	cd bf       	out	0x3d, r28	; 61
    143c:	df 91       	pop	r29
    143e:	cf 91       	pop	r28
    1440:	1f 91       	pop	r17
    1442:	0f 91       	pop	r16
    1444:	ff 90       	pop	r15
    1446:	ef 90       	pop	r14
    1448:	df 90       	pop	r13
    144a:	cf 90       	pop	r12
    144c:	bf 90       	pop	r11
    144e:	af 90       	pop	r10
    1450:	9f 90       	pop	r9
    1452:	8f 90       	pop	r8
    1454:	7f 90       	pop	r7
    1456:	6f 90       	pop	r6
    1458:	5f 90       	pop	r5
    145a:	4f 90       	pop	r4
    145c:	3f 90       	pop	r3
    145e:	2f 90       	pop	r2
    1460:	08 95       	ret

00001462 <dtoa_prf>:
    1462:	8f 92       	push	r8
    1464:	9f 92       	push	r9
    1466:	af 92       	push	r10
    1468:	bf 92       	push	r11
    146a:	cf 92       	push	r12
    146c:	df 92       	push	r13
    146e:	ef 92       	push	r14
    1470:	ff 92       	push	r15
    1472:	0f 93       	push	r16
    1474:	1f 93       	push	r17
    1476:	cf 93       	push	r28
    1478:	df 93       	push	r29
    147a:	cd b7       	in	r28, 0x3d	; 61
    147c:	de b7       	in	r29, 0x3e	; 62
    147e:	29 97       	sbiw	r28, 0x09	; 9
    1480:	0f b6       	in	r0, 0x3f	; 63
    1482:	f8 94       	cli
    1484:	de bf       	out	0x3e, r29	; 62
    1486:	0f be       	out	0x3f, r0	; 63
    1488:	cd bf       	out	0x3d, r28	; 61
    148a:	6a 01       	movw	r12, r20
    148c:	12 2f       	mov	r17, r18
    148e:	b0 2e       	mov	r11, r16
    1490:	2b e3       	ldi	r18, 0x3B	; 59
    1492:	20 17       	cp	r18, r16
    1494:	20 f0       	brcs	.+8      	; 0x149e <dtoa_prf+0x3c>
    1496:	ff 24       	eor	r15, r15
    1498:	f3 94       	inc	r15
    149a:	f0 0e       	add	r15, r16
    149c:	02 c0       	rjmp	.+4      	; 0x14a2 <dtoa_prf+0x40>
    149e:	2c e3       	ldi	r18, 0x3C	; 60
    14a0:	f2 2e       	mov	r15, r18
    14a2:	0f 2d       	mov	r16, r15
    14a4:	27 e0       	ldi	r18, 0x07	; 7
    14a6:	ae 01       	movw	r20, r28
    14a8:	4f 5f       	subi	r20, 0xFF	; 255
    14aa:	5f 4f       	sbci	r21, 0xFF	; 255
    14ac:	50 d1       	rcall	.+672    	; 0x174e <__ftoa_engine>
    14ae:	bc 01       	movw	r22, r24
    14b0:	49 81       	ldd	r20, Y+1	; 0x01
    14b2:	84 2f       	mov	r24, r20
    14b4:	89 70       	andi	r24, 0x09	; 9
    14b6:	81 30       	cpi	r24, 0x01	; 1
    14b8:	31 f0       	breq	.+12     	; 0x14c6 <dtoa_prf+0x64>
    14ba:	e1 fc       	sbrc	r14, 1
    14bc:	06 c0       	rjmp	.+12     	; 0x14ca <dtoa_prf+0x68>
    14be:	e0 fe       	sbrs	r14, 0
    14c0:	06 c0       	rjmp	.+12     	; 0x14ce <dtoa_prf+0x6c>
    14c2:	90 e2       	ldi	r25, 0x20	; 32
    14c4:	05 c0       	rjmp	.+10     	; 0x14d0 <dtoa_prf+0x6e>
    14c6:	9d e2       	ldi	r25, 0x2D	; 45
    14c8:	03 c0       	rjmp	.+6      	; 0x14d0 <dtoa_prf+0x6e>
    14ca:	9b e2       	ldi	r25, 0x2B	; 43
    14cc:	01 c0       	rjmp	.+2      	; 0x14d0 <dtoa_prf+0x6e>
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	5e 2d       	mov	r21, r14
    14d2:	50 71       	andi	r21, 0x10	; 16
    14d4:	43 ff       	sbrs	r20, 3
    14d6:	3c c0       	rjmp	.+120    	; 0x1550 <dtoa_prf+0xee>
    14d8:	91 11       	cpse	r25, r1
    14da:	02 c0       	rjmp	.+4      	; 0x14e0 <dtoa_prf+0x7e>
    14dc:	83 e0       	ldi	r24, 0x03	; 3
    14de:	01 c0       	rjmp	.+2      	; 0x14e2 <dtoa_prf+0x80>
    14e0:	84 e0       	ldi	r24, 0x04	; 4
    14e2:	81 17       	cp	r24, r17
    14e4:	18 f4       	brcc	.+6      	; 0x14ec <dtoa_prf+0x8a>
    14e6:	21 2f       	mov	r18, r17
    14e8:	28 1b       	sub	r18, r24
    14ea:	01 c0       	rjmp	.+2      	; 0x14ee <dtoa_prf+0x8c>
    14ec:	20 e0       	ldi	r18, 0x00	; 0
    14ee:	51 11       	cpse	r21, r1
    14f0:	0b c0       	rjmp	.+22     	; 0x1508 <dtoa_prf+0xa6>
    14f2:	f6 01       	movw	r30, r12
    14f4:	82 2f       	mov	r24, r18
    14f6:	30 e2       	ldi	r19, 0x20	; 32
    14f8:	88 23       	and	r24, r24
    14fa:	19 f0       	breq	.+6      	; 0x1502 <dtoa_prf+0xa0>
    14fc:	31 93       	st	Z+, r19
    14fe:	81 50       	subi	r24, 0x01	; 1
    1500:	fb cf       	rjmp	.-10     	; 0x14f8 <dtoa_prf+0x96>
    1502:	c2 0e       	add	r12, r18
    1504:	d1 1c       	adc	r13, r1
    1506:	20 e0       	ldi	r18, 0x00	; 0
    1508:	99 23       	and	r25, r25
    150a:	29 f0       	breq	.+10     	; 0x1516 <dtoa_prf+0xb4>
    150c:	d6 01       	movw	r26, r12
    150e:	9c 93       	st	X, r25
    1510:	f6 01       	movw	r30, r12
    1512:	31 96       	adiw	r30, 0x01	; 1
    1514:	6f 01       	movw	r12, r30
    1516:	c6 01       	movw	r24, r12
    1518:	03 96       	adiw	r24, 0x03	; 3
    151a:	e2 fe       	sbrs	r14, 2
    151c:	0a c0       	rjmp	.+20     	; 0x1532 <dtoa_prf+0xd0>
    151e:	3e e4       	ldi	r19, 0x4E	; 78
    1520:	d6 01       	movw	r26, r12
    1522:	3c 93       	st	X, r19
    1524:	41 e4       	ldi	r20, 0x41	; 65
    1526:	11 96       	adiw	r26, 0x01	; 1
    1528:	4c 93       	st	X, r20
    152a:	11 97       	sbiw	r26, 0x01	; 1
    152c:	12 96       	adiw	r26, 0x02	; 2
    152e:	3c 93       	st	X, r19
    1530:	06 c0       	rjmp	.+12     	; 0x153e <dtoa_prf+0xdc>
    1532:	3e e6       	ldi	r19, 0x6E	; 110
    1534:	f6 01       	movw	r30, r12
    1536:	30 83       	st	Z, r19
    1538:	41 e6       	ldi	r20, 0x61	; 97
    153a:	41 83       	std	Z+1, r20	; 0x01
    153c:	32 83       	std	Z+2, r19	; 0x02
    153e:	fc 01       	movw	r30, r24
    1540:	32 2f       	mov	r19, r18
    1542:	40 e2       	ldi	r20, 0x20	; 32
    1544:	33 23       	and	r19, r19
    1546:	09 f4       	brne	.+2      	; 0x154a <dtoa_prf+0xe8>
    1548:	42 c0       	rjmp	.+132    	; 0x15ce <dtoa_prf+0x16c>
    154a:	41 93       	st	Z+, r20
    154c:	31 50       	subi	r19, 0x01	; 1
    154e:	fa cf       	rjmp	.-12     	; 0x1544 <dtoa_prf+0xe2>
    1550:	42 ff       	sbrs	r20, 2
    1552:	44 c0       	rjmp	.+136    	; 0x15dc <dtoa_prf+0x17a>
    1554:	91 11       	cpse	r25, r1
    1556:	02 c0       	rjmp	.+4      	; 0x155c <dtoa_prf+0xfa>
    1558:	83 e0       	ldi	r24, 0x03	; 3
    155a:	01 c0       	rjmp	.+2      	; 0x155e <dtoa_prf+0xfc>
    155c:	84 e0       	ldi	r24, 0x04	; 4
    155e:	81 17       	cp	r24, r17
    1560:	18 f4       	brcc	.+6      	; 0x1568 <dtoa_prf+0x106>
    1562:	21 2f       	mov	r18, r17
    1564:	28 1b       	sub	r18, r24
    1566:	01 c0       	rjmp	.+2      	; 0x156a <dtoa_prf+0x108>
    1568:	20 e0       	ldi	r18, 0x00	; 0
    156a:	51 11       	cpse	r21, r1
    156c:	0b c0       	rjmp	.+22     	; 0x1584 <dtoa_prf+0x122>
    156e:	f6 01       	movw	r30, r12
    1570:	82 2f       	mov	r24, r18
    1572:	30 e2       	ldi	r19, 0x20	; 32
    1574:	88 23       	and	r24, r24
    1576:	19 f0       	breq	.+6      	; 0x157e <dtoa_prf+0x11c>
    1578:	31 93       	st	Z+, r19
    157a:	81 50       	subi	r24, 0x01	; 1
    157c:	fb cf       	rjmp	.-10     	; 0x1574 <dtoa_prf+0x112>
    157e:	c2 0e       	add	r12, r18
    1580:	d1 1c       	adc	r13, r1
    1582:	20 e0       	ldi	r18, 0x00	; 0
    1584:	99 23       	and	r25, r25
    1586:	29 f0       	breq	.+10     	; 0x1592 <dtoa_prf+0x130>
    1588:	d6 01       	movw	r26, r12
    158a:	9c 93       	st	X, r25
    158c:	f6 01       	movw	r30, r12
    158e:	31 96       	adiw	r30, 0x01	; 1
    1590:	6f 01       	movw	r12, r30
    1592:	c6 01       	movw	r24, r12
    1594:	03 96       	adiw	r24, 0x03	; 3
    1596:	e2 fe       	sbrs	r14, 2
    1598:	0b c0       	rjmp	.+22     	; 0x15b0 <dtoa_prf+0x14e>
    159a:	39 e4       	ldi	r19, 0x49	; 73
    159c:	d6 01       	movw	r26, r12
    159e:	3c 93       	st	X, r19
    15a0:	3e e4       	ldi	r19, 0x4E	; 78
    15a2:	11 96       	adiw	r26, 0x01	; 1
    15a4:	3c 93       	st	X, r19
    15a6:	11 97       	sbiw	r26, 0x01	; 1
    15a8:	36 e4       	ldi	r19, 0x46	; 70
    15aa:	12 96       	adiw	r26, 0x02	; 2
    15ac:	3c 93       	st	X, r19
    15ae:	07 c0       	rjmp	.+14     	; 0x15be <dtoa_prf+0x15c>
    15b0:	39 e6       	ldi	r19, 0x69	; 105
    15b2:	f6 01       	movw	r30, r12
    15b4:	30 83       	st	Z, r19
    15b6:	3e e6       	ldi	r19, 0x6E	; 110
    15b8:	31 83       	std	Z+1, r19	; 0x01
    15ba:	36 e6       	ldi	r19, 0x66	; 102
    15bc:	32 83       	std	Z+2, r19	; 0x02
    15be:	fc 01       	movw	r30, r24
    15c0:	32 2f       	mov	r19, r18
    15c2:	40 e2       	ldi	r20, 0x20	; 32
    15c4:	33 23       	and	r19, r19
    15c6:	19 f0       	breq	.+6      	; 0x15ce <dtoa_prf+0x16c>
    15c8:	41 93       	st	Z+, r20
    15ca:	31 50       	subi	r19, 0x01	; 1
    15cc:	fb cf       	rjmp	.-10     	; 0x15c4 <dtoa_prf+0x162>
    15ce:	fc 01       	movw	r30, r24
    15d0:	e2 0f       	add	r30, r18
    15d2:	f1 1d       	adc	r31, r1
    15d4:	10 82       	st	Z, r1
    15d6:	8e ef       	ldi	r24, 0xFE	; 254
    15d8:	9f ef       	ldi	r25, 0xFF	; 255
    15da:	a6 c0       	rjmp	.+332    	; 0x1728 <dtoa_prf+0x2c6>
    15dc:	21 e0       	ldi	r18, 0x01	; 1
    15de:	30 e0       	ldi	r19, 0x00	; 0
    15e0:	91 11       	cpse	r25, r1
    15e2:	02 c0       	rjmp	.+4      	; 0x15e8 <dtoa_prf+0x186>
    15e4:	20 e0       	ldi	r18, 0x00	; 0
    15e6:	30 e0       	ldi	r19, 0x00	; 0
    15e8:	16 16       	cp	r1, r22
    15ea:	17 06       	cpc	r1, r23
    15ec:	1c f4       	brge	.+6      	; 0x15f4 <dtoa_prf+0x192>
    15ee:	fb 01       	movw	r30, r22
    15f0:	31 96       	adiw	r30, 0x01	; 1
    15f2:	02 c0       	rjmp	.+4      	; 0x15f8 <dtoa_prf+0x196>
    15f4:	e1 e0       	ldi	r30, 0x01	; 1
    15f6:	f0 e0       	ldi	r31, 0x00	; 0
    15f8:	2e 0f       	add	r18, r30
    15fa:	3f 1f       	adc	r19, r31
    15fc:	bb 20       	and	r11, r11
    15fe:	21 f0       	breq	.+8      	; 0x1608 <dtoa_prf+0x1a6>
    1600:	eb 2d       	mov	r30, r11
    1602:	f0 e0       	ldi	r31, 0x00	; 0
    1604:	31 96       	adiw	r30, 0x01	; 1
    1606:	02 c0       	rjmp	.+4      	; 0x160c <dtoa_prf+0x1aa>
    1608:	e0 e0       	ldi	r30, 0x00	; 0
    160a:	f0 e0       	ldi	r31, 0x00	; 0
    160c:	2e 0f       	add	r18, r30
    160e:	3f 1f       	adc	r19, r31
    1610:	e1 2f       	mov	r30, r17
    1612:	f0 e0       	ldi	r31, 0x00	; 0
    1614:	2e 17       	cp	r18, r30
    1616:	3f 07       	cpc	r19, r31
    1618:	1c f4       	brge	.+6      	; 0x1620 <dtoa_prf+0x1be>
    161a:	12 1b       	sub	r17, r18
    161c:	21 2f       	mov	r18, r17
    161e:	01 c0       	rjmp	.+2      	; 0x1622 <dtoa_prf+0x1c0>
    1620:	20 e0       	ldi	r18, 0x00	; 0
    1622:	8e 2d       	mov	r24, r14
    1624:	88 71       	andi	r24, 0x18	; 24
    1626:	59 f4       	brne	.+22     	; 0x163e <dtoa_prf+0x1dc>
    1628:	f6 01       	movw	r30, r12
    162a:	82 2f       	mov	r24, r18
    162c:	30 e2       	ldi	r19, 0x20	; 32
    162e:	88 23       	and	r24, r24
    1630:	19 f0       	breq	.+6      	; 0x1638 <dtoa_prf+0x1d6>
    1632:	31 93       	st	Z+, r19
    1634:	81 50       	subi	r24, 0x01	; 1
    1636:	fb cf       	rjmp	.-10     	; 0x162e <dtoa_prf+0x1cc>
    1638:	c2 0e       	add	r12, r18
    163a:	d1 1c       	adc	r13, r1
    163c:	20 e0       	ldi	r18, 0x00	; 0
    163e:	99 23       	and	r25, r25
    1640:	29 f0       	breq	.+10     	; 0x164c <dtoa_prf+0x1ea>
    1642:	d6 01       	movw	r26, r12
    1644:	9c 93       	st	X, r25
    1646:	f6 01       	movw	r30, r12
    1648:	31 96       	adiw	r30, 0x01	; 1
    164a:	6f 01       	movw	r12, r30
    164c:	51 11       	cpse	r21, r1
    164e:	0b c0       	rjmp	.+22     	; 0x1666 <dtoa_prf+0x204>
    1650:	f6 01       	movw	r30, r12
    1652:	82 2f       	mov	r24, r18
    1654:	90 e3       	ldi	r25, 0x30	; 48
    1656:	88 23       	and	r24, r24
    1658:	19 f0       	breq	.+6      	; 0x1660 <dtoa_prf+0x1fe>
    165a:	91 93       	st	Z+, r25
    165c:	81 50       	subi	r24, 0x01	; 1
    165e:	fb cf       	rjmp	.-10     	; 0x1656 <dtoa_prf+0x1f4>
    1660:	c2 0e       	add	r12, r18
    1662:	d1 1c       	adc	r13, r1
    1664:	20 e0       	ldi	r18, 0x00	; 0
    1666:	0f 2d       	mov	r16, r15
    1668:	06 0f       	add	r16, r22
    166a:	9a 81       	ldd	r25, Y+2	; 0x02
    166c:	34 2f       	mov	r19, r20
    166e:	30 71       	andi	r19, 0x10	; 16
    1670:	44 ff       	sbrs	r20, 4
    1672:	03 c0       	rjmp	.+6      	; 0x167a <dtoa_prf+0x218>
    1674:	91 33       	cpi	r25, 0x31	; 49
    1676:	09 f4       	brne	.+2      	; 0x167a <dtoa_prf+0x218>
    1678:	01 50       	subi	r16, 0x01	; 1
    167a:	10 16       	cp	r1, r16
    167c:	24 f4       	brge	.+8      	; 0x1686 <dtoa_prf+0x224>
    167e:	09 30       	cpi	r16, 0x09	; 9
    1680:	18 f0       	brcs	.+6      	; 0x1688 <dtoa_prf+0x226>
    1682:	08 e0       	ldi	r16, 0x08	; 8
    1684:	01 c0       	rjmp	.+2      	; 0x1688 <dtoa_prf+0x226>
    1686:	01 e0       	ldi	r16, 0x01	; 1
    1688:	ab 01       	movw	r20, r22
    168a:	77 ff       	sbrs	r23, 7
    168c:	02 c0       	rjmp	.+4      	; 0x1692 <dtoa_prf+0x230>
    168e:	40 e0       	ldi	r20, 0x00	; 0
    1690:	50 e0       	ldi	r21, 0x00	; 0
    1692:	fb 01       	movw	r30, r22
    1694:	e4 1b       	sub	r30, r20
    1696:	f5 0b       	sbc	r31, r21
    1698:	a1 e0       	ldi	r26, 0x01	; 1
    169a:	b0 e0       	ldi	r27, 0x00	; 0
    169c:	ac 0f       	add	r26, r28
    169e:	bd 1f       	adc	r27, r29
    16a0:	ea 0f       	add	r30, r26
    16a2:	fb 1f       	adc	r31, r27
    16a4:	8e e2       	ldi	r24, 0x2E	; 46
    16a6:	a8 2e       	mov	r10, r24
    16a8:	4b 01       	movw	r8, r22
    16aa:	80 1a       	sub	r8, r16
    16ac:	91 08       	sbc	r9, r1
    16ae:	0b 2d       	mov	r16, r11
    16b0:	10 e0       	ldi	r17, 0x00	; 0
    16b2:	11 95       	neg	r17
    16b4:	01 95       	neg	r16
    16b6:	11 09       	sbc	r17, r1
    16b8:	4f 3f       	cpi	r20, 0xFF	; 255
    16ba:	bf ef       	ldi	r27, 0xFF	; 255
    16bc:	5b 07       	cpc	r21, r27
    16be:	21 f4       	brne	.+8      	; 0x16c8 <dtoa_prf+0x266>
    16c0:	d6 01       	movw	r26, r12
    16c2:	ac 92       	st	X, r10
    16c4:	11 96       	adiw	r26, 0x01	; 1
    16c6:	6d 01       	movw	r12, r26
    16c8:	64 17       	cp	r22, r20
    16ca:	75 07       	cpc	r23, r21
    16cc:	2c f0       	brlt	.+10     	; 0x16d8 <dtoa_prf+0x276>
    16ce:	84 16       	cp	r8, r20
    16d0:	95 06       	cpc	r9, r21
    16d2:	14 f4       	brge	.+4      	; 0x16d8 <dtoa_prf+0x276>
    16d4:	81 81       	ldd	r24, Z+1	; 0x01
    16d6:	01 c0       	rjmp	.+2      	; 0x16da <dtoa_prf+0x278>
    16d8:	80 e3       	ldi	r24, 0x30	; 48
    16da:	41 50       	subi	r20, 0x01	; 1
    16dc:	51 09       	sbc	r21, r1
    16de:	31 96       	adiw	r30, 0x01	; 1
    16e0:	d6 01       	movw	r26, r12
    16e2:	11 96       	adiw	r26, 0x01	; 1
    16e4:	7d 01       	movw	r14, r26
    16e6:	40 17       	cp	r20, r16
    16e8:	51 07       	cpc	r21, r17
    16ea:	24 f0       	brlt	.+8      	; 0x16f4 <dtoa_prf+0x292>
    16ec:	d6 01       	movw	r26, r12
    16ee:	8c 93       	st	X, r24
    16f0:	67 01       	movw	r12, r14
    16f2:	e2 cf       	rjmp	.-60     	; 0x16b8 <dtoa_prf+0x256>
    16f4:	64 17       	cp	r22, r20
    16f6:	75 07       	cpc	r23, r21
    16f8:	39 f4       	brne	.+14     	; 0x1708 <dtoa_prf+0x2a6>
    16fa:	96 33       	cpi	r25, 0x36	; 54
    16fc:	20 f4       	brcc	.+8      	; 0x1706 <dtoa_prf+0x2a4>
    16fe:	95 33       	cpi	r25, 0x35	; 53
    1700:	19 f4       	brne	.+6      	; 0x1708 <dtoa_prf+0x2a6>
    1702:	31 11       	cpse	r19, r1
    1704:	01 c0       	rjmp	.+2      	; 0x1708 <dtoa_prf+0x2a6>
    1706:	81 e3       	ldi	r24, 0x31	; 49
    1708:	f6 01       	movw	r30, r12
    170a:	80 83       	st	Z, r24
    170c:	f7 01       	movw	r30, r14
    170e:	82 2f       	mov	r24, r18
    1710:	90 e2       	ldi	r25, 0x20	; 32
    1712:	88 23       	and	r24, r24
    1714:	19 f0       	breq	.+6      	; 0x171c <dtoa_prf+0x2ba>
    1716:	91 93       	st	Z+, r25
    1718:	81 50       	subi	r24, 0x01	; 1
    171a:	fb cf       	rjmp	.-10     	; 0x1712 <dtoa_prf+0x2b0>
    171c:	f7 01       	movw	r30, r14
    171e:	e2 0f       	add	r30, r18
    1720:	f1 1d       	adc	r31, r1
    1722:	10 82       	st	Z, r1
    1724:	80 e0       	ldi	r24, 0x00	; 0
    1726:	90 e0       	ldi	r25, 0x00	; 0
    1728:	29 96       	adiw	r28, 0x09	; 9
    172a:	0f b6       	in	r0, 0x3f	; 63
    172c:	f8 94       	cli
    172e:	de bf       	out	0x3e, r29	; 62
    1730:	0f be       	out	0x3f, r0	; 63
    1732:	cd bf       	out	0x3d, r28	; 61
    1734:	df 91       	pop	r29
    1736:	cf 91       	pop	r28
    1738:	1f 91       	pop	r17
    173a:	0f 91       	pop	r16
    173c:	ff 90       	pop	r15
    173e:	ef 90       	pop	r14
    1740:	df 90       	pop	r13
    1742:	cf 90       	pop	r12
    1744:	bf 90       	pop	r11
    1746:	af 90       	pop	r10
    1748:	9f 90       	pop	r9
    174a:	8f 90       	pop	r8
    174c:	08 95       	ret

0000174e <__ftoa_engine>:
    174e:	28 30       	cpi	r18, 0x08	; 8
    1750:	08 f0       	brcs	.+2      	; 0x1754 <__ftoa_engine+0x6>
    1752:	27 e0       	ldi	r18, 0x07	; 7
    1754:	33 27       	eor	r19, r19
    1756:	da 01       	movw	r26, r20
    1758:	99 0f       	add	r25, r25
    175a:	31 1d       	adc	r19, r1
    175c:	87 fd       	sbrc	r24, 7
    175e:	91 60       	ori	r25, 0x01	; 1
    1760:	00 96       	adiw	r24, 0x00	; 0
    1762:	61 05       	cpc	r22, r1
    1764:	71 05       	cpc	r23, r1
    1766:	39 f4       	brne	.+14     	; 0x1776 <__ftoa_engine+0x28>
    1768:	32 60       	ori	r19, 0x02	; 2
    176a:	2e 5f       	subi	r18, 0xFE	; 254
    176c:	3d 93       	st	X+, r19
    176e:	30 e3       	ldi	r19, 0x30	; 48
    1770:	2a 95       	dec	r18
    1772:	e1 f7       	brne	.-8      	; 0x176c <__ftoa_engine+0x1e>
    1774:	08 95       	ret
    1776:	9f 3f       	cpi	r25, 0xFF	; 255
    1778:	30 f0       	brcs	.+12     	; 0x1786 <__ftoa_engine+0x38>
    177a:	80 38       	cpi	r24, 0x80	; 128
    177c:	71 05       	cpc	r23, r1
    177e:	61 05       	cpc	r22, r1
    1780:	09 f0       	breq	.+2      	; 0x1784 <__ftoa_engine+0x36>
    1782:	3c 5f       	subi	r19, 0xFC	; 252
    1784:	3c 5f       	subi	r19, 0xFC	; 252
    1786:	3d 93       	st	X+, r19
    1788:	91 30       	cpi	r25, 0x01	; 1
    178a:	08 f0       	brcs	.+2      	; 0x178e <__ftoa_engine+0x40>
    178c:	80 68       	ori	r24, 0x80	; 128
    178e:	91 1d       	adc	r25, r1
    1790:	df 93       	push	r29
    1792:	cf 93       	push	r28
    1794:	1f 93       	push	r17
    1796:	0f 93       	push	r16
    1798:	ff 92       	push	r15
    179a:	ef 92       	push	r14
    179c:	19 2f       	mov	r17, r25
    179e:	98 7f       	andi	r25, 0xF8	; 248
    17a0:	96 95       	lsr	r25
    17a2:	e9 2f       	mov	r30, r25
    17a4:	96 95       	lsr	r25
    17a6:	96 95       	lsr	r25
    17a8:	e9 0f       	add	r30, r25
    17aa:	ff 27       	eor	r31, r31
    17ac:	ea 51       	subi	r30, 0x1A	; 26
    17ae:	ff 4f       	sbci	r31, 0xFF	; 255
    17b0:	99 27       	eor	r25, r25
    17b2:	33 27       	eor	r19, r19
    17b4:	ee 24       	eor	r14, r14
    17b6:	ff 24       	eor	r15, r15
    17b8:	a7 01       	movw	r20, r14
    17ba:	e7 01       	movw	r28, r14
    17bc:	05 90       	lpm	r0, Z+
    17be:	08 94       	sec
    17c0:	07 94       	ror	r0
    17c2:	28 f4       	brcc	.+10     	; 0x17ce <__ftoa_engine+0x80>
    17c4:	36 0f       	add	r19, r22
    17c6:	e7 1e       	adc	r14, r23
    17c8:	f8 1e       	adc	r15, r24
    17ca:	49 1f       	adc	r20, r25
    17cc:	51 1d       	adc	r21, r1
    17ce:	66 0f       	add	r22, r22
    17d0:	77 1f       	adc	r23, r23
    17d2:	88 1f       	adc	r24, r24
    17d4:	99 1f       	adc	r25, r25
    17d6:	06 94       	lsr	r0
    17d8:	a1 f7       	brne	.-24     	; 0x17c2 <__ftoa_engine+0x74>
    17da:	05 90       	lpm	r0, Z+
    17dc:	07 94       	ror	r0
    17de:	28 f4       	brcc	.+10     	; 0x17ea <__ftoa_engine+0x9c>
    17e0:	e7 0e       	add	r14, r23
    17e2:	f8 1e       	adc	r15, r24
    17e4:	49 1f       	adc	r20, r25
    17e6:	56 1f       	adc	r21, r22
    17e8:	c1 1d       	adc	r28, r1
    17ea:	77 0f       	add	r23, r23
    17ec:	88 1f       	adc	r24, r24
    17ee:	99 1f       	adc	r25, r25
    17f0:	66 1f       	adc	r22, r22
    17f2:	06 94       	lsr	r0
    17f4:	a1 f7       	brne	.-24     	; 0x17de <__ftoa_engine+0x90>
    17f6:	05 90       	lpm	r0, Z+
    17f8:	07 94       	ror	r0
    17fa:	28 f4       	brcc	.+10     	; 0x1806 <__ftoa_engine+0xb8>
    17fc:	f8 0e       	add	r15, r24
    17fe:	49 1f       	adc	r20, r25
    1800:	56 1f       	adc	r21, r22
    1802:	c7 1f       	adc	r28, r23
    1804:	d1 1d       	adc	r29, r1
    1806:	88 0f       	add	r24, r24
    1808:	99 1f       	adc	r25, r25
    180a:	66 1f       	adc	r22, r22
    180c:	77 1f       	adc	r23, r23
    180e:	06 94       	lsr	r0
    1810:	a1 f7       	brne	.-24     	; 0x17fa <__ftoa_engine+0xac>
    1812:	05 90       	lpm	r0, Z+
    1814:	07 94       	ror	r0
    1816:	20 f4       	brcc	.+8      	; 0x1820 <__ftoa_engine+0xd2>
    1818:	49 0f       	add	r20, r25
    181a:	56 1f       	adc	r21, r22
    181c:	c7 1f       	adc	r28, r23
    181e:	d8 1f       	adc	r29, r24
    1820:	99 0f       	add	r25, r25
    1822:	66 1f       	adc	r22, r22
    1824:	77 1f       	adc	r23, r23
    1826:	88 1f       	adc	r24, r24
    1828:	06 94       	lsr	r0
    182a:	a9 f7       	brne	.-22     	; 0x1816 <__ftoa_engine+0xc8>
    182c:	84 91       	lpm	r24, Z
    182e:	10 95       	com	r17
    1830:	17 70       	andi	r17, 0x07	; 7
    1832:	41 f0       	breq	.+16     	; 0x1844 <__ftoa_engine+0xf6>
    1834:	d6 95       	lsr	r29
    1836:	c7 95       	ror	r28
    1838:	57 95       	ror	r21
    183a:	47 95       	ror	r20
    183c:	f7 94       	ror	r15
    183e:	e7 94       	ror	r14
    1840:	1a 95       	dec	r17
    1842:	c1 f7       	brne	.-16     	; 0x1834 <__ftoa_engine+0xe6>
    1844:	ec e8       	ldi	r30, 0x8C	; 140
    1846:	f0 e0       	ldi	r31, 0x00	; 0
    1848:	68 94       	set
    184a:	15 90       	lpm	r1, Z+
    184c:	15 91       	lpm	r17, Z+
    184e:	35 91       	lpm	r19, Z+
    1850:	65 91       	lpm	r22, Z+
    1852:	95 91       	lpm	r25, Z+
    1854:	05 90       	lpm	r0, Z+
    1856:	7f e2       	ldi	r23, 0x2F	; 47
    1858:	73 95       	inc	r23
    185a:	e1 18       	sub	r14, r1
    185c:	f1 0a       	sbc	r15, r17
    185e:	43 0b       	sbc	r20, r19
    1860:	56 0b       	sbc	r21, r22
    1862:	c9 0b       	sbc	r28, r25
    1864:	d0 09       	sbc	r29, r0
    1866:	c0 f7       	brcc	.-16     	; 0x1858 <__ftoa_engine+0x10a>
    1868:	e1 0c       	add	r14, r1
    186a:	f1 1e       	adc	r15, r17
    186c:	43 1f       	adc	r20, r19
    186e:	56 1f       	adc	r21, r22
    1870:	c9 1f       	adc	r28, r25
    1872:	d0 1d       	adc	r29, r0
    1874:	7e f4       	brtc	.+30     	; 0x1894 <__ftoa_engine+0x146>
    1876:	70 33       	cpi	r23, 0x30	; 48
    1878:	11 f4       	brne	.+4      	; 0x187e <__ftoa_engine+0x130>
    187a:	8a 95       	dec	r24
    187c:	e6 cf       	rjmp	.-52     	; 0x184a <__ftoa_engine+0xfc>
    187e:	e8 94       	clt
    1880:	01 50       	subi	r16, 0x01	; 1
    1882:	30 f0       	brcs	.+12     	; 0x1890 <__ftoa_engine+0x142>
    1884:	08 0f       	add	r16, r24
    1886:	0a f4       	brpl	.+2      	; 0x188a <__ftoa_engine+0x13c>
    1888:	00 27       	eor	r16, r16
    188a:	02 17       	cp	r16, r18
    188c:	08 f4       	brcc	.+2      	; 0x1890 <__ftoa_engine+0x142>
    188e:	20 2f       	mov	r18, r16
    1890:	23 95       	inc	r18
    1892:	02 2f       	mov	r16, r18
    1894:	7a 33       	cpi	r23, 0x3A	; 58
    1896:	28 f0       	brcs	.+10     	; 0x18a2 <__ftoa_engine+0x154>
    1898:	79 e3       	ldi	r23, 0x39	; 57
    189a:	7d 93       	st	X+, r23
    189c:	2a 95       	dec	r18
    189e:	e9 f7       	brne	.-6      	; 0x189a <__ftoa_engine+0x14c>
    18a0:	10 c0       	rjmp	.+32     	; 0x18c2 <__ftoa_engine+0x174>
    18a2:	7d 93       	st	X+, r23
    18a4:	2a 95       	dec	r18
    18a6:	89 f6       	brne	.-94     	; 0x184a <__ftoa_engine+0xfc>
    18a8:	06 94       	lsr	r0
    18aa:	97 95       	ror	r25
    18ac:	67 95       	ror	r22
    18ae:	37 95       	ror	r19
    18b0:	17 95       	ror	r17
    18b2:	17 94       	ror	r1
    18b4:	e1 18       	sub	r14, r1
    18b6:	f1 0a       	sbc	r15, r17
    18b8:	43 0b       	sbc	r20, r19
    18ba:	56 0b       	sbc	r21, r22
    18bc:	c9 0b       	sbc	r28, r25
    18be:	d0 09       	sbc	r29, r0
    18c0:	98 f0       	brcs	.+38     	; 0x18e8 <__ftoa_engine+0x19a>
    18c2:	23 95       	inc	r18
    18c4:	7e 91       	ld	r23, -X
    18c6:	73 95       	inc	r23
    18c8:	7a 33       	cpi	r23, 0x3A	; 58
    18ca:	08 f0       	brcs	.+2      	; 0x18ce <__ftoa_engine+0x180>
    18cc:	70 e3       	ldi	r23, 0x30	; 48
    18ce:	7c 93       	st	X, r23
    18d0:	20 13       	cpse	r18, r16
    18d2:	b8 f7       	brcc	.-18     	; 0x18c2 <__ftoa_engine+0x174>
    18d4:	7e 91       	ld	r23, -X
    18d6:	70 61       	ori	r23, 0x10	; 16
    18d8:	7d 93       	st	X+, r23
    18da:	30 f0       	brcs	.+12     	; 0x18e8 <__ftoa_engine+0x19a>
    18dc:	83 95       	inc	r24
    18de:	71 e3       	ldi	r23, 0x31	; 49
    18e0:	7d 93       	st	X+, r23
    18e2:	70 e3       	ldi	r23, 0x30	; 48
    18e4:	2a 95       	dec	r18
    18e6:	e1 f7       	brne	.-8      	; 0x18e0 <__ftoa_engine+0x192>
    18e8:	11 24       	eor	r1, r1
    18ea:	ef 90       	pop	r14
    18ec:	ff 90       	pop	r15
    18ee:	0f 91       	pop	r16
    18f0:	1f 91       	pop	r17
    18f2:	cf 91       	pop	r28
    18f4:	df 91       	pop	r29
    18f6:	99 27       	eor	r25, r25
    18f8:	87 fd       	sbrc	r24, 7
    18fa:	90 95       	com	r25
    18fc:	08 95       	ret

000018fe <strnlen_P>:
    18fe:	fc 01       	movw	r30, r24
    1900:	05 90       	lpm	r0, Z+
    1902:	61 50       	subi	r22, 0x01	; 1
    1904:	70 40       	sbci	r23, 0x00	; 0
    1906:	01 10       	cpse	r0, r1
    1908:	d8 f7       	brcc	.-10     	; 0x1900 <strnlen_P+0x2>
    190a:	80 95       	com	r24
    190c:	90 95       	com	r25
    190e:	8e 0f       	add	r24, r30
    1910:	9f 1f       	adc	r25, r31
    1912:	08 95       	ret

00001914 <strnlen>:
    1914:	fc 01       	movw	r30, r24
    1916:	61 50       	subi	r22, 0x01	; 1
    1918:	70 40       	sbci	r23, 0x00	; 0
    191a:	01 90       	ld	r0, Z+
    191c:	01 10       	cpse	r0, r1
    191e:	d8 f7       	brcc	.-10     	; 0x1916 <strnlen+0x2>
    1920:	80 95       	com	r24
    1922:	90 95       	com	r25
    1924:	8e 0f       	add	r24, r30
    1926:	9f 1f       	adc	r25, r31
    1928:	08 95       	ret

0000192a <fputc>:
    192a:	0f 93       	push	r16
    192c:	1f 93       	push	r17
    192e:	cf 93       	push	r28
    1930:	df 93       	push	r29
    1932:	fb 01       	movw	r30, r22
    1934:	23 81       	ldd	r18, Z+3	; 0x03
    1936:	21 fd       	sbrc	r18, 1
    1938:	03 c0       	rjmp	.+6      	; 0x1940 <fputc+0x16>
    193a:	8f ef       	ldi	r24, 0xFF	; 255
    193c:	9f ef       	ldi	r25, 0xFF	; 255
    193e:	2c c0       	rjmp	.+88     	; 0x1998 <fputc+0x6e>
    1940:	22 ff       	sbrs	r18, 2
    1942:	16 c0       	rjmp	.+44     	; 0x1970 <fputc+0x46>
    1944:	46 81       	ldd	r20, Z+6	; 0x06
    1946:	57 81       	ldd	r21, Z+7	; 0x07
    1948:	24 81       	ldd	r18, Z+4	; 0x04
    194a:	35 81       	ldd	r19, Z+5	; 0x05
    194c:	42 17       	cp	r20, r18
    194e:	53 07       	cpc	r21, r19
    1950:	44 f4       	brge	.+16     	; 0x1962 <fputc+0x38>
    1952:	a0 81       	ld	r26, Z
    1954:	b1 81       	ldd	r27, Z+1	; 0x01
    1956:	9d 01       	movw	r18, r26
    1958:	2f 5f       	subi	r18, 0xFF	; 255
    195a:	3f 4f       	sbci	r19, 0xFF	; 255
    195c:	31 83       	std	Z+1, r19	; 0x01
    195e:	20 83       	st	Z, r18
    1960:	8c 93       	st	X, r24
    1962:	26 81       	ldd	r18, Z+6	; 0x06
    1964:	37 81       	ldd	r19, Z+7	; 0x07
    1966:	2f 5f       	subi	r18, 0xFF	; 255
    1968:	3f 4f       	sbci	r19, 0xFF	; 255
    196a:	37 83       	std	Z+7, r19	; 0x07
    196c:	26 83       	std	Z+6, r18	; 0x06
    196e:	14 c0       	rjmp	.+40     	; 0x1998 <fputc+0x6e>
    1970:	8b 01       	movw	r16, r22
    1972:	ec 01       	movw	r28, r24
    1974:	fb 01       	movw	r30, r22
    1976:	00 84       	ldd	r0, Z+8	; 0x08
    1978:	f1 85       	ldd	r31, Z+9	; 0x09
    197a:	e0 2d       	mov	r30, r0
    197c:	09 95       	icall
    197e:	89 2b       	or	r24, r25
    1980:	e1 f6       	brne	.-72     	; 0x193a <fputc+0x10>
    1982:	d8 01       	movw	r26, r16
    1984:	16 96       	adiw	r26, 0x06	; 6
    1986:	8d 91       	ld	r24, X+
    1988:	9c 91       	ld	r25, X
    198a:	17 97       	sbiw	r26, 0x07	; 7
    198c:	01 96       	adiw	r24, 0x01	; 1
    198e:	17 96       	adiw	r26, 0x07	; 7
    1990:	9c 93       	st	X, r25
    1992:	8e 93       	st	-X, r24
    1994:	16 97       	sbiw	r26, 0x06	; 6
    1996:	ce 01       	movw	r24, r28
    1998:	df 91       	pop	r29
    199a:	cf 91       	pop	r28
    199c:	1f 91       	pop	r17
    199e:	0f 91       	pop	r16
    19a0:	08 95       	ret

000019a2 <__ultoa_invert>:
    19a2:	fa 01       	movw	r30, r20
    19a4:	aa 27       	eor	r26, r26
    19a6:	28 30       	cpi	r18, 0x08	; 8
    19a8:	51 f1       	breq	.+84     	; 0x19fe <__ultoa_invert+0x5c>
    19aa:	20 31       	cpi	r18, 0x10	; 16
    19ac:	81 f1       	breq	.+96     	; 0x1a0e <__ultoa_invert+0x6c>
    19ae:	e8 94       	clt
    19b0:	6f 93       	push	r22
    19b2:	6e 7f       	andi	r22, 0xFE	; 254
    19b4:	6e 5f       	subi	r22, 0xFE	; 254
    19b6:	7f 4f       	sbci	r23, 0xFF	; 255
    19b8:	8f 4f       	sbci	r24, 0xFF	; 255
    19ba:	9f 4f       	sbci	r25, 0xFF	; 255
    19bc:	af 4f       	sbci	r26, 0xFF	; 255
    19be:	b1 e0       	ldi	r27, 0x01	; 1
    19c0:	3e d0       	rcall	.+124    	; 0x1a3e <__ultoa_invert+0x9c>
    19c2:	b4 e0       	ldi	r27, 0x04	; 4
    19c4:	3c d0       	rcall	.+120    	; 0x1a3e <__ultoa_invert+0x9c>
    19c6:	67 0f       	add	r22, r23
    19c8:	78 1f       	adc	r23, r24
    19ca:	89 1f       	adc	r24, r25
    19cc:	9a 1f       	adc	r25, r26
    19ce:	a1 1d       	adc	r26, r1
    19d0:	68 0f       	add	r22, r24
    19d2:	79 1f       	adc	r23, r25
    19d4:	8a 1f       	adc	r24, r26
    19d6:	91 1d       	adc	r25, r1
    19d8:	a1 1d       	adc	r26, r1
    19da:	6a 0f       	add	r22, r26
    19dc:	71 1d       	adc	r23, r1
    19de:	81 1d       	adc	r24, r1
    19e0:	91 1d       	adc	r25, r1
    19e2:	a1 1d       	adc	r26, r1
    19e4:	20 d0       	rcall	.+64     	; 0x1a26 <__ultoa_invert+0x84>
    19e6:	09 f4       	brne	.+2      	; 0x19ea <__ultoa_invert+0x48>
    19e8:	68 94       	set
    19ea:	3f 91       	pop	r19
    19ec:	2a e0       	ldi	r18, 0x0A	; 10
    19ee:	26 9f       	mul	r18, r22
    19f0:	11 24       	eor	r1, r1
    19f2:	30 19       	sub	r19, r0
    19f4:	30 5d       	subi	r19, 0xD0	; 208
    19f6:	31 93       	st	Z+, r19
    19f8:	de f6       	brtc	.-74     	; 0x19b0 <__ultoa_invert+0xe>
    19fa:	cf 01       	movw	r24, r30
    19fc:	08 95       	ret
    19fe:	46 2f       	mov	r20, r22
    1a00:	47 70       	andi	r20, 0x07	; 7
    1a02:	40 5d       	subi	r20, 0xD0	; 208
    1a04:	41 93       	st	Z+, r20
    1a06:	b3 e0       	ldi	r27, 0x03	; 3
    1a08:	0f d0       	rcall	.+30     	; 0x1a28 <__ultoa_invert+0x86>
    1a0a:	c9 f7       	brne	.-14     	; 0x19fe <__ultoa_invert+0x5c>
    1a0c:	f6 cf       	rjmp	.-20     	; 0x19fa <__ultoa_invert+0x58>
    1a0e:	46 2f       	mov	r20, r22
    1a10:	4f 70       	andi	r20, 0x0F	; 15
    1a12:	40 5d       	subi	r20, 0xD0	; 208
    1a14:	4a 33       	cpi	r20, 0x3A	; 58
    1a16:	18 f0       	brcs	.+6      	; 0x1a1e <__ultoa_invert+0x7c>
    1a18:	49 5d       	subi	r20, 0xD9	; 217
    1a1a:	31 fd       	sbrc	r19, 1
    1a1c:	40 52       	subi	r20, 0x20	; 32
    1a1e:	41 93       	st	Z+, r20
    1a20:	02 d0       	rcall	.+4      	; 0x1a26 <__ultoa_invert+0x84>
    1a22:	a9 f7       	brne	.-22     	; 0x1a0e <__ultoa_invert+0x6c>
    1a24:	ea cf       	rjmp	.-44     	; 0x19fa <__ultoa_invert+0x58>
    1a26:	b4 e0       	ldi	r27, 0x04	; 4
    1a28:	a6 95       	lsr	r26
    1a2a:	97 95       	ror	r25
    1a2c:	87 95       	ror	r24
    1a2e:	77 95       	ror	r23
    1a30:	67 95       	ror	r22
    1a32:	ba 95       	dec	r27
    1a34:	c9 f7       	brne	.-14     	; 0x1a28 <__ultoa_invert+0x86>
    1a36:	00 97       	sbiw	r24, 0x00	; 0
    1a38:	61 05       	cpc	r22, r1
    1a3a:	71 05       	cpc	r23, r1
    1a3c:	08 95       	ret
    1a3e:	9b 01       	movw	r18, r22
    1a40:	ac 01       	movw	r20, r24
    1a42:	0a 2e       	mov	r0, r26
    1a44:	06 94       	lsr	r0
    1a46:	57 95       	ror	r21
    1a48:	47 95       	ror	r20
    1a4a:	37 95       	ror	r19
    1a4c:	27 95       	ror	r18
    1a4e:	ba 95       	dec	r27
    1a50:	c9 f7       	brne	.-14     	; 0x1a44 <__ultoa_invert+0xa2>
    1a52:	62 0f       	add	r22, r18
    1a54:	73 1f       	adc	r23, r19
    1a56:	84 1f       	adc	r24, r20
    1a58:	95 1f       	adc	r25, r21
    1a5a:	a0 1d       	adc	r26, r0
    1a5c:	08 95       	ret

00001a5e <_exit>:
    1a5e:	f8 94       	cli

00001a60 <__stop_program>:
    1a60:	ff cf       	rjmp	.-2      	; 0x1a60 <__stop_program>
